{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "unimplemented_service",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "new_contract",
          "type": "address"
        }
      ],
      "name": "ContractMessage",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "Swip3_deployer",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "gate_ids",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gate_max_nuser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum Swip3.Assets",
          "name": "asset_type",
          "type": "uint8"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "token_id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Swip3.NFTProps",
          "name": "nft_data",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum Swip3.Coins",
              "name": "coin_type",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "internalType": "struct Swip3.CoinPops",
          "name": "coin_data",
          "type": "tuple"
        }
      ],
      "name": "initateContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lending_pool_address",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateGateState",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/LendingPool.sol",
    "1": "contracts/LendingPoolGate.sol",
    "2": "contracts/SafeMath.sol",
    "3": "contracts/Swip3.sol",
    "4": "contracts/Swip3Customer.sol"
  },
  "ast": {
    "absolutePath": "contracts/Swip3.sol",
    "exportedSymbols": {
      "LendingPool": [
        780
      ],
      "LendingPoolGate": [
        1101
      ],
      "SafeMath": [
        1210
      ],
      "Swip3": [
        427
      ],
      "Swip3Customer": [
        1612
      ]
    },
    "id": 428,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "contracts/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 428,
        "sourceUnit": 1211,
        "src": "58:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Swip3Customer.sol",
        "file": "./Swip3Customer.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 428,
        "sourceUnit": 1613,
        "src": "83:50:3",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3,
              "name": "Swip3Customer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1612,
              "src": "91:13:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/LendingPoolGate.sol",
        "file": "./LendingPoolGate.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 428,
        "sourceUnit": 1102,
        "src": "134:54:3",
        "symbolAliases": [
          {
            "foreign": {
              "id": 5,
              "name": "LendingPoolGate",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1101,
              "src": "142:15:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/LendingPool.sol",
        "file": "./LendingPool.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 428,
        "sourceUnit": 781,
        "src": "189:46:3",
        "symbolAliases": [
          {
            "foreign": {
              "id": 7,
              "name": "LendingPool",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 780,
              "src": "197:11:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Swip3",
        "contractDependencies": [
          1101,
          1612
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 9,
          "nodeType": "StructuredDocumentation",
          "src": "238:182:3",
          "text": "@title Swip3\n @author Hileamlak Yitayew\n @notice Creates Swip3contracts between users and iself\n @dev Uses the Swip3Customer iterface to create Swip3 customer contracts"
        },
        "fullyImplemented": true,
        "id": 427,
        "linearizedBaseContracts": [
          427
        ],
        "name": "Swip3",
        "nameLocation": "430:5:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 12,
            "libraryName": {
              "id": 10,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1210,
              "src": "449:8:3"
            },
            "nodeType": "UsingForDirective",
            "src": "443:27:3",
            "typeName": {
              "id": 11,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "462:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "d59ffccd",
            "id": 14,
            "mutability": "mutable",
            "name": "Swip3_deployer",
            "nameLocation": "498:14:3",
            "nodeType": "VariableDeclaration",
            "scope": 427,
            "src": "475:37:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 13,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "475:15:3",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c8b5ec1e",
            "id": 16,
            "mutability": "mutable",
            "name": "lending_pool_address",
            "nameLocation": "533:20:3",
            "nodeType": "VariableDeclaration",
            "scope": 427,
            "src": "518:35:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 15,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "518:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0a334bfd",
            "id": 18,
            "mutability": "mutable",
            "name": "gate_max_nuser",
            "nameLocation": "574:14:3",
            "nodeType": "VariableDeclaration",
            "scope": 427,
            "src": "559:29:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 17,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "559:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 22,
            "mutability": "mutable",
            "name": "gates",
            "nameLocation": "622:5:3",
            "nodeType": "VariableDeclaration",
            "scope": 427,
            "src": "596:31:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_LendingPoolGate_$1101_$dyn_storage",
              "typeString": "contract LendingPoolGate[]"
            },
            "typeName": {
              "baseType": {
                "id": 20,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 19,
                  "name": "LendingPoolGate",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1101,
                  "src": "596:15:3"
                },
                "referencedDeclaration": 1101,
                "src": "596:15:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_LendingPoolGate_$1101",
                  "typeString": "contract LendingPoolGate"
                }
              },
              "id": 21,
              "nodeType": "ArrayTypeName",
              "src": "596:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_LendingPoolGate_$1101_$dyn_storage_ptr",
                "typeString": "contract LendingPoolGate[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 25,
            "mutability": "mutable",
            "name": "free_gates",
            "nameLocation": "643:10:3",
            "nodeType": "VariableDeclaration",
            "scope": 427,
            "src": "633:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 23,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "633:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 24,
              "nodeType": "ArrayTypeName",
              "src": "633:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "818579ef",
            "id": 29,
            "mutability": "mutable",
            "name": "gate_ids",
            "nameLocation": "694:8:3",
            "nodeType": "VariableDeclaration",
            "scope": 427,
            "src": "659:43:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 28,
              "keyType": {
                "id": 26,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "667:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "659:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 27,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "678:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "b758e6c0d2c9aeca50f129afc686c8ae28726e41c3df2af4a0ec5ca15dcc70c5",
            "id": 35,
            "name": "ContractMessage",
            "nameLocation": "715:15:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "738:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "731:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "731:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "new_contract",
                  "nameLocation": "755:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "747:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "747:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "730:38:3"
            },
            "src": "709:60:3"
          },
          {
            "canonicalName": "Swip3.Assets",
            "id": 38,
            "members": [
              {
                "id": 36,
                "name": "NFT",
                "nameLocation": "788:3:3",
                "nodeType": "EnumValue",
                "src": "788:3:3"
              },
              {
                "id": 37,
                "name": "COIN",
                "nameLocation": "793:4:3",
                "nodeType": "EnumValue",
                "src": "793:4:3"
              }
            ],
            "name": "Assets",
            "nameLocation": "780:6:3",
            "nodeType": "EnumDefinition",
            "src": "775:23:3"
          },
          {
            "canonicalName": "Swip3.Coins",
            "id": 42,
            "members": [
              {
                "id": 39,
                "name": "BITCOIN",
                "nameLocation": "815:7:3",
                "nodeType": "EnumValue",
                "src": "815:7:3"
              },
              {
                "id": 40,
                "name": "ETHEREUM",
                "nameLocation": "824:8:3",
                "nodeType": "EnumValue",
                "src": "824:8:3"
              },
              {
                "id": 41,
                "name": "CARDANO",
                "nameLocation": "834:7:3",
                "nodeType": "EnumValue",
                "src": "834:7:3"
              }
            ],
            "name": "Coins",
            "nameLocation": "808:5:3",
            "nodeType": "EnumDefinition",
            "src": "803:39:3"
          },
          {
            "canonicalName": "Swip3.NFTProps",
            "id": 47,
            "members": [
              {
                "constant": false,
                "id": 44,
                "mutability": "mutable",
                "name": "factory",
                "nameLocation": "881:7:3",
                "nodeType": "VariableDeclaration",
                "scope": 47,
                "src": "873:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 43,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "873:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46,
                "mutability": "mutable",
                "name": "token_id",
                "nameLocation": "906:8:3",
                "nodeType": "VariableDeclaration",
                "scope": 47,
                "src": "898:16:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 45,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "898:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "NFTProps",
            "nameLocation": "855:8:3",
            "nodeType": "StructDefinition",
            "scope": 427,
            "src": "848:73:3",
            "visibility": "public"
          },
          {
            "canonicalName": "Swip3.CoinPops",
            "id": 53,
            "members": [
              {
                "constant": false,
                "id": 50,
                "mutability": "mutable",
                "name": "coin_type",
                "nameLocation": "958:9:3",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "952:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Coins_$42",
                  "typeString": "enum Swip3.Coins"
                },
                "typeName": {
                  "id": 49,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 48,
                    "name": "Coins",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 42,
                    "src": "952:5:3"
                  },
                  "referencedDeclaration": 42,
                  "src": "952:5:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Coins_$42",
                    "typeString": "enum Swip3.Coins"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 52,
                "mutability": "mutable",
                "name": "value",
                "nameLocation": "985:5:3",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "977:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 51,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "977:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "CoinPops",
            "nameLocation": "934:8:3",
            "nodeType": "StructDefinition",
            "scope": 427,
            "src": "927:70:3",
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 54,
              "nodeType": "StructuredDocumentation",
              "src": "1003:33:3",
              "text": "Feature isn't yet implemented"
            },
            "errorSelector": "bbea06c0",
            "id": 56,
            "name": "unimplemented_service",
            "nameLocation": "1047:21:3",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1068:2:3"
            },
            "src": "1041:30:3"
          },
          {
            "body": {
              "id": 75,
              "nodeType": "Block",
              "src": "1100:105:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 61,
                                "name": "gates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22,
                                "src": "1126:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_LendingPoolGate_$1101_$dyn_storage",
                                  "typeString": "contract LendingPoolGate[] storage ref"
                                }
                              },
                              "id": 66,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 62,
                                  "name": "gate_ids",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29,
                                  "src": "1132:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 65,
                                "indexExpression": {
                                  "expression": {
                                    "id": 63,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1141:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 64,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1141:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1132:20:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1126:27:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LendingPoolGate_$1101",
                                "typeString": "contract LendingPoolGate"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LendingPoolGate_$1101",
                                "typeString": "contract LendingPoolGate"
                              }
                            ],
                            "id": 60,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1118:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 59,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1118:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 67,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1118:36:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 68,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1158:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 69,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1158:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1118:50:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "47617465206e6f74206f776e6564",
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1170:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_240ccd52cb62c8a687cdcd727ec892e362551d265a499f35a52a13a382f750f2",
                          "typeString": "literal_string \"Gate not owned\""
                        },
                        "value": "Gate not owned"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_240ccd52cb62c8a687cdcd727ec892e362551d265a499f35a52a13a382f750f2",
                          "typeString": "literal_string \"Gate not owned\""
                        }
                      ],
                      "id": 58,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1110:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1110:77:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "1110:77:3"
                },
                {
                  "id": 74,
                  "nodeType": "PlaceholderStatement",
                  "src": "1197:1:3"
                }
              ]
            },
            "id": 76,
            "name": "inGates",
            "nameLocation": "1091:7:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1098:2:3"
            },
            "src": "1082:123:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 98,
              "nodeType": "Block",
              "src": "1225:168:3",
              "statements": [
                {
                  "expression": {
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 79,
                      "name": "Swip3_deployer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "1235:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 82,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1260:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 83,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1260:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1252:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 80,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1252:8:3",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 84,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1252:19:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1235:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "1235:36:3"
                },
                {
                  "expression": {
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87,
                      "name": "gate_max_nuser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "1281:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31303030",
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1298:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1000"
                    },
                    "src": "1281:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "1281:21:3"
                },
                {
                  "expression": {
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 91,
                      "name": "lending_pool_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "1312:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307864393134354343453532443338366632353439313765343831654234346539393433463339313338",
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1343:42:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0xd9145CCE52D386f254917e481eB44e9943F39138"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 93,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1335:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 92,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1335:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 95,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1335:51:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1312:74:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "1312:74:3"
                }
              ]
            },
            "id": 99,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1223:2:3"
            },
            "returnParameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1225:0:3"
            },
            "scope": 427,
            "src": "1212:181:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 212,
              "nodeType": "Block",
              "src": "1991:690:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 109,
                        "name": "free_gates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "2005:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2005:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2026:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2005:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 166,
                  "nodeType": "IfStatement",
                  "src": "2001:366:3",
                  "trueBody": {
                    "id": 165,
                    "nodeType": "Block",
                    "src": "2028:339:3",
                    "statements": [
                      {
                        "assignments": [
                          115
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 115,
                            "mutability": "mutable",
                            "name": "new_gate",
                            "nameLocation": "2058:8:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 165,
                            "src": "2042:24:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LendingPoolGate_$1101",
                              "typeString": "contract LendingPoolGate"
                            },
                            "typeName": {
                              "id": 114,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 113,
                                "name": "LendingPoolGate",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1101,
                                "src": "2042:15:3"
                              },
                              "referencedDeclaration": 1101,
                              "src": "2042:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LendingPoolGate_$1101",
                                "typeString": "contract LendingPoolGate"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 122,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 119,
                              "name": "gate_max_nuser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "2089:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 120,
                              "name": "lending_pool_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16,
                              "src": "2105:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2069:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$_t_address_$returns$_t_contract$_LendingPoolGate_$1101_$",
                              "typeString": "function (uint256,address) returns (contract LendingPoolGate)"
                            },
                            "typeName": {
                              "id": 117,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 116,
                                "name": "LendingPoolGate",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1101,
                                "src": "2073:15:3"
                              },
                              "referencedDeclaration": 1101,
                              "src": "2073:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LendingPoolGate_$1101",
                                "typeString": "contract LendingPoolGate"
                              }
                            }
                          },
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2069:57:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LendingPoolGate_$1101",
                            "typeString": "contract LendingPoolGate"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2042:84:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 126,
                              "name": "new_gate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 115,
                              "src": "2151:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LendingPoolGate_$1101",
                                "typeString": "contract LendingPoolGate"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LendingPoolGate_$1101",
                                "typeString": "contract LendingPoolGate"
                              }
                            ],
                            "expression": {
                              "id": 123,
                              "name": "gates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22,
                              "src": "2140:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_LendingPoolGate_$1101_$dyn_storage",
                                "typeString": "contract LendingPoolGate[] storage ref"
                              }
                            },
                            "id": 125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "2140:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_LendingPoolGate_$1101_$dyn_storage_ptr_$_t_contract$_LendingPoolGate_$1101_$returns$__$bound_to$_t_array$_t_contract$_LendingPoolGate_$1101_$dyn_storage_ptr_$",
                              "typeString": "function (contract LendingPoolGate[] storage pointer,contract LendingPoolGate)"
                            }
                          },
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2140:20:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 128,
                        "nodeType": "ExpressionStatement",
                        "src": "2140:20:3"
                      },
                      {
                        "expression": {
                          "id": 140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 129,
                              "name": "gate_ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "2174:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 134,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "id": 132,
                                  "name": "new_gate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 115,
                                  "src": "2191:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LendingPoolGate_$1101",
                                    "typeString": "contract LendingPoolGate"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LendingPoolGate_$1101",
                                    "typeString": "contract LendingPoolGate"
                                  }
                                ],
                                "id": 131,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2183:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 130,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2183:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 133,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2183:17:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2174:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 138,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2221:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 135,
                                  "name": "gates",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22,
                                  "src": "2204:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_LendingPoolGate_$1101_$dyn_storage",
                                    "typeString": "contract LendingPoolGate[] storage ref"
                                  }
                                },
                                "id": 136,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "2204:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 137,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1153,
                              "src": "2204:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2204:19:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2174:49:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 141,
                        "nodeType": "ExpressionStatement",
                        "src": "2174:49:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "31",
                                  "id": 148,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2270:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  }
                                ],
                                "expression": {
                                  "expression": {
                                    "id": 145,
                                    "name": "gates",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22,
                                    "src": "2253:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_LendingPoolGate_$1101_$dyn_storage",
                                      "typeString": "contract LendingPoolGate[] storage ref"
                                    }
                                  },
                                  "id": 146,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "2253:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 147,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1153,
                                "src": "2253:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 149,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2253:19:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 142,
                              "name": "free_gates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "2237:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "2237:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2237:36:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 151,
                        "nodeType": "ExpressionStatement",
                        "src": "2237:36:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 161,
                                  "name": "new_gate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 115,
                                  "src": "2346:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LendingPoolGate_$1101",
                                    "typeString": "contract LendingPoolGate"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LendingPoolGate_$1101",
                                    "typeString": "contract LendingPoolGate"
                                  }
                                ],
                                "id": 160,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2338:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 159,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2338:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 162,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2338:17:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 155,
                                      "name": "lending_pool_address",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 16,
                                      "src": "2307:20:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 154,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2299:8:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_payable_$",
                                      "typeString": "type(address payable)"
                                    },
                                    "typeName": {
                                      "id": 153,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2299:8:3",
                                      "stateMutability": "payable",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 156,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2299:29:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 152,
                                "name": "LendingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 780,
                                "src": "2287:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_LendingPool_$780_$",
                                  "typeString": "type(contract LendingPool)"
                                }
                              },
                              "id": 157,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2287:42:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LendingPool_$780",
                                "typeString": "contract LendingPool"
                              }
                            },
                            "id": 158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addGate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 559,
                            "src": "2287:50:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2287:69:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 164,
                        "nodeType": "ExpressionStatement",
                        "src": "2287:69:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 168,
                            "name": "free_gates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "2384:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2384:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2405:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2384:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 167,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "2377:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2377:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 173,
                  "nodeType": "ExpressionStatement",
                  "src": "2377:30:3"
                },
                {
                  "assignments": [
                    176
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 176,
                      "mutability": "mutable",
                      "name": "free_gate",
                      "nameLocation": "2434:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 212,
                      "src": "2418:25:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LendingPoolGate_$1101",
                        "typeString": "contract LendingPoolGate"
                      },
                      "typeName": {
                        "id": 175,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 174,
                          "name": "LendingPoolGate",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1101,
                          "src": "2418:15:3"
                        },
                        "referencedDeclaration": 1101,
                        "src": "2418:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LendingPoolGate_$1101",
                          "typeString": "contract LendingPoolGate"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 186,
                  "initialValue": {
                    "baseExpression": {
                      "id": 177,
                      "name": "gates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "2446:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_LendingPoolGate_$1101_$dyn_storage",
                        "typeString": "contract LendingPoolGate[] storage ref"
                      }
                    },
                    "id": 185,
                    "indexExpression": {
                      "baseExpression": {
                        "id": 178,
                        "name": "free_gates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "2452:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 184,
                      "indexExpression": {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2485:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "expression": {
                              "id": 179,
                              "name": "free_gates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "2463:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2463:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1153,
                          "src": "2463:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2463:24:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2452:36:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2446:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LendingPoolGate_$1101",
                      "typeString": "contract LendingPoolGate"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2418:71:3"
                },
                {
                  "assignments": [
                    188,
                    190
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 188,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "2508:2:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 212,
                      "src": "2500:10:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 187,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2500:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 190,
                      "mutability": "mutable",
                      "name": "stat",
                      "nameLocation": "2517:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 212,
                      "src": "2512:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 189,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2512:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 195,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 193,
                        "name": "contract_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102,
                        "src": "2552:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 191,
                        "name": "free_gate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 176,
                        "src": "2525:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LendingPoolGate_$1101",
                          "typeString": "contract LendingPoolGate"
                        }
                      },
                      "id": 192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "append2WhiteList",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 996,
                      "src": "2525:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$_t_bool_$",
                        "typeString": "function (address) external returns (uint256,bool)"
                      }
                    },
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2525:44:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(uint256,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2499:70:3"
                },
                {
                  "condition": {
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2584:5:3",
                    "subExpression": {
                      "id": 196,
                      "name": "stat",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 190,
                      "src": "2585:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 204,
                  "nodeType": "IfStatement",
                  "src": "2580:51:3",
                  "trueBody": {
                    "id": 203,
                    "nodeType": "Block",
                    "src": "2590:41:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 198,
                              "name": "free_gates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "2604:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pop",
                            "nodeType": "MemberAccess",
                            "src": "2604:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer)"
                            }
                          },
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2604:16:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 202,
                        "nodeType": "ExpressionStatement",
                        "src": "2604:16:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "id": 207,
                            "name": "free_gate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 176,
                            "src": "2657:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LendingPoolGate_$1101",
                              "typeString": "contract LendingPoolGate"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LendingPoolGate_$1101",
                              "typeString": "contract LendingPoolGate"
                            }
                          ],
                          "id": 206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2649:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 205,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2649:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2649:18:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 209,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 188,
                        "src": "2669:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 210,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2648:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                      "typeString": "tuple(address,uint256)"
                    }
                  },
                  "functionReturnParameters": 108,
                  "id": 211,
                  "nodeType": "Return",
                  "src": "2641:31:3"
                }
              ]
            },
            "documentation": {
              "id": 100,
              "nodeType": "StructuredDocumentation",
              "src": "1589:285:3",
              "text": "@notice Find a free lending pool for contract_address\n @dev checks if already existing gates have more space other wise creats more\n @param contract_address address to be added to a white list\n @return tuple retruns address of lending pool along with token id"
            },
            "id": 213,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "matchWithLendingPool",
            "nameLocation": "1888:20:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102,
                  "mutability": "mutable",
                  "name": "contract_address",
                  "nameLocation": "1917:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "1909:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1909:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1908:26:3"
            },
            "returnParameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 105,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "1969:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1969:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 107,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "1978:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1978:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1968:18:3"
            },
            "scope": 427,
            "src": "1879:802:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 326,
              "nodeType": "Block",
              "src": "3293:1589:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Assets_$38",
                      "typeString": "enum Swip3.Assets"
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 228,
                      "name": "asset_type",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 217,
                      "src": "3307:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Assets_$38",
                        "typeString": "enum Swip3.Assets"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 229,
                        "name": "Assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "3321:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Assets_$38_$",
                          "typeString": "type(enum Swip3.Assets)"
                        }
                      },
                      "id": 230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "COIN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37,
                      "src": "3321:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Assets_$38",
                        "typeString": "enum Swip3.Assets"
                      }
                    },
                    "src": "3307:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_Assets_$38",
                        "typeString": "enum Swip3.Assets"
                      },
                      "id": 311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 308,
                        "name": "asset_type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 217,
                        "src": "4566:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Assets_$38",
                          "typeString": "enum Swip3.Assets"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 309,
                          "name": "Assets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "4580:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Assets_$38_$",
                            "typeString": "type(enum Swip3.Assets)"
                          }
                        },
                        "id": 310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "NFT",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36,
                        "src": "4580:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Assets_$38",
                          "typeString": "enum Swip3.Assets"
                        }
                      },
                      "src": "4566:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 323,
                      "nodeType": "Block",
                      "src": "4820:55:3",
                      "statements": [
                        {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 320,
                              "name": "unimplemented_service",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56,
                              "src": "4841:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4841:23:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 322,
                          "nodeType": "RevertStatement",
                          "src": "4834:30:3"
                        }
                      ]
                    },
                    "id": 324,
                    "nodeType": "IfStatement",
                    "src": "4562:313:3",
                    "trueBody": {
                      "id": 319,
                      "nodeType": "Block",
                      "src": "4591:216:3",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 313,
                                "name": "nft_data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 220,
                                "src": "4743:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NFTProps_$47_memory_ptr",
                                  "typeString": "struct Swip3.NFTProps memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_NFTProps_$47_memory_ptr",
                                  "typeString": "struct Swip3.NFTProps memory"
                                }
                              ],
                              "id": 312,
                              "name": "evaluateNFTStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 378,
                              "src": "4726:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_NFTProps_$47_memory_ptr_$returns$_t_uint256_$",
                                "typeString": "function (struct Swip3.NFTProps memory) returns (uint256)"
                              }
                            },
                            "id": 314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4726:26:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 315,
                          "nodeType": "ExpressionStatement",
                          "src": "4726:26:3"
                        },
                        {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 316,
                              "name": "unimplemented_service",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56,
                              "src": "4773:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4773:23:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 318,
                          "nodeType": "RevertStatement",
                          "src": "4766:30:3"
                        }
                      ]
                    }
                  },
                  "id": 325,
                  "nodeType": "IfStatement",
                  "src": "3303:1572:3",
                  "trueBody": {
                    "id": 307,
                    "nodeType": "Block",
                    "src": "3333:1215:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Coins_$42",
                            "typeString": "enum Swip3.Coins"
                          },
                          "id": 236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 232,
                              "name": "coin_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 223,
                              "src": "3351:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CoinPops_$53_memory_ptr",
                                "typeString": "struct Swip3.CoinPops memory"
                              }
                            },
                            "id": 233,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "coin_type",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50,
                            "src": "3351:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Coins_$42",
                              "typeString": "enum Swip3.Coins"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 234,
                              "name": "Coins",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42,
                              "src": "3375:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Coins_$42_$",
                                "typeString": "type(enum Swip3.Coins)"
                              }
                            },
                            "id": 235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ETHEREUM",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40,
                            "src": "3375:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Coins_$42",
                              "typeString": "enum Swip3.Coins"
                            }
                          },
                          "src": "3351:38:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 305,
                          "nodeType": "Block",
                          "src": "4293:244:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 302,
                                  "name": "unimplemented_service",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 56,
                                  "src": "4499:21:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 303,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4499:23:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 304,
                              "nodeType": "RevertStatement",
                              "src": "4492:30:3"
                            }
                          ]
                        },
                        "id": 306,
                        "nodeType": "IfStatement",
                        "src": "3347:1190:3",
                        "trueBody": {
                          "id": 301,
                          "nodeType": "Block",
                          "src": "3390:886:3",
                          "statements": [
                            {
                              "assignments": [
                                238,
                                240
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 238,
                                  "mutability": "mutable",
                                  "name": "credit_limit",
                                  "nameLocation": "3501:12:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 301,
                                  "src": "3493:20:3",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 237,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3493:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 240,
                                  "mutability": "mutable",
                                  "name": "APR",
                                  "nameLocation": "3523:3:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 301,
                                  "src": "3515:11:3",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 239,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3515:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 243,
                              "initialValue": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 241,
                                  "name": "evaluateCoinStake",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 399,
                                  "src": "3530:17:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$",
                                    "typeString": "function () view returns (uint256,uint256)"
                                  }
                                },
                                "id": 242,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3530:19:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                  "typeString": "tuple(uint256,uint256)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3492:57:3"
                            },
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 244,
                                  "name": "lockStake",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 403,
                                  "src": "3651:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                    "typeString": "function ()"
                                  }
                                },
                                "id": 245,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3651:11:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 246,
                              "nodeType": "ExpressionStatement",
                              "src": "3651:11:3"
                            },
                            {
                              "assignments": [
                                249
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 249,
                                  "mutability": "mutable",
                                  "name": "user_contract",
                                  "nameLocation": "3694:13:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 301,
                                  "src": "3680:27:3",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Swip3Customer_$1612",
                                    "typeString": "contract Swip3Customer"
                                  },
                                  "typeName": {
                                    "id": 248,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 247,
                                      "name": "Swip3Customer",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 1612,
                                      "src": "3680:13:3"
                                    },
                                    "referencedDeclaration": 1612,
                                    "src": "3680:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Swip3Customer_$1612",
                                      "typeString": "contract Swip3Customer"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 269,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_rational_2592000_by_1",
                                          "typeString": "int_const 2592000"
                                        },
                                        "id": 258,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "hexValue": "3330",
                                          "id": 256,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "3748:2:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_30_by_1",
                                            "typeString": "int_const 30"
                                          },
                                          "value": "30"
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "hexValue": "3836343030",
                                          "id": 257,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "3753:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_86400_by_1",
                                            "typeString": "int_const 86400"
                                          },
                                          "value": "86400"
                                        },
                                        "src": "3748:10:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2592000_by_1",
                                          "typeString": "int_const 2592000"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_2592000_by_1",
                                          "typeString": "int_const 2592000"
                                        }
                                      ],
                                      "expression": {
                                        "expression": {
                                          "id": 253,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "3728:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 254,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "3728:15:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 255,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "add",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1128,
                                      "src": "3728:19:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 259,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3728:31:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 262,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "3822:4:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Swip3_$427",
                                          "typeString": "contract Swip3"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Swip3_$427",
                                          "typeString": "contract Swip3"
                                        }
                                      ],
                                      "id": 261,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3814:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 260,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3814:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 263,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3814:13:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 264,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3882:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 265,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3882:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 266,
                                    "name": "credit_limit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 238,
                                    "src": "3894:12:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 267,
                                    "name": "APR",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 240,
                                    "src": "3961:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 252,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "3710:17:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_contract$_Swip3Customer_$1612_$",
                                    "typeString": "function (uint256,address,address,uint256,uint256) returns (contract Swip3Customer)"
                                  },
                                  "typeName": {
                                    "id": 251,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 250,
                                      "name": "Swip3Customer",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 1612,
                                      "src": "3714:13:3"
                                    },
                                    "referencedDeclaration": 1612,
                                    "src": "3714:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Swip3Customer_$1612",
                                      "typeString": "contract Swip3Customer"
                                    }
                                  }
                                },
                                "id": 268,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3710:255:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Swip3Customer_$1612",
                                  "typeString": "contract Swip3Customer"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3680:285:3"
                            },
                            {
                              "assignments": [
                                271,
                                273
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 271,
                                  "mutability": "mutable",
                                  "name": "gate",
                                  "nameLocation": "3992:4:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 301,
                                  "src": "3984:12:3",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 270,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3984:7:3",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 273,
                                  "mutability": "mutable",
                                  "name": "id",
                                  "nameLocation": "4006:2:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 301,
                                  "src": "3998:10:3",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 272,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3998:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 280,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 277,
                                        "name": "user_contract",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 249,
                                        "src": "4041:13:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Swip3Customer_$1612",
                                          "typeString": "contract Swip3Customer"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Swip3Customer_$1612",
                                          "typeString": "contract Swip3Customer"
                                        }
                                      ],
                                      "id": 276,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4033:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 275,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4033:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 278,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4033:22:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 274,
                                  "name": "matchWithLendingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 213,
                                  "src": "4012:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$_t_uint256_$",
                                    "typeString": "function (address) returns (address,uint256)"
                                  }
                                },
                                "id": 279,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4012:44:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                  "typeString": "tuple(address,uint256)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3983:73:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 284,
                                    "name": "gate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 271,
                                    "src": "4097:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 285,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 273,
                                    "src": "4103:2:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 281,
                                    "name": "user_contract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 249,
                                    "src": "4074:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Swip3Customer_$1612",
                                      "typeString": "contract Swip3Customer"
                                    }
                                  },
                                  "id": 283,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "activate",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1420,
                                  "src": "4074:22:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256) external"
                                  }
                                },
                                "id": 286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4074:32:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 287,
                              "nodeType": "ExpressionStatement",
                              "src": "4074:32:3"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "hexValue": "5573657220636f6e74726163742063726561746564206174",
                                    "id": 289,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4162:26:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_ab12e55550b194cd61d0e10ffe74460f3e898949e99f2101fb006488628abcbb",
                                      "typeString": "literal_string \"User contract created at\""
                                    },
                                    "value": "User contract created at"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 292,
                                        "name": "user_contract",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 249,
                                        "src": "4198:13:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Swip3Customer_$1612",
                                          "typeString": "contract Swip3Customer"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Swip3Customer_$1612",
                                          "typeString": "contract Swip3Customer"
                                        }
                                      ],
                                      "id": 291,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4190:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 290,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4190:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 293,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4190:22:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_ab12e55550b194cd61d0e10ffe74460f3e898949e99f2101fb006488628abcbb",
                                      "typeString": "literal_string \"User contract created at\""
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 288,
                                  "name": "ContractMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35,
                                  "src": "4146:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                                    "typeString": "function (string memory,address)"
                                  }
                                },
                                "id": 294,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4146:67:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 295,
                              "nodeType": "EmitStatement",
                              "src": "4141:72:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 298,
                                    "name": "user_contract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 249,
                                    "src": "4246:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Swip3Customer_$1612",
                                      "typeString": "contract Swip3Customer"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Swip3Customer_$1612",
                                      "typeString": "contract Swip3Customer"
                                    }
                                  ],
                                  "id": 297,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4238:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 296,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4238:7:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 299,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4238:22:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "functionReturnParameters": 227,
                              "id": 300,
                              "nodeType": "Return",
                              "src": "4231:29:3"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 214,
              "nodeType": "StructuredDocumentation",
              "src": "2688:411:3",
              "text": "@notice Creates a contract between swip3 protocol and user\n @dev Puts asset in escrow and depending on that calculates credit\n @param asset_type the staked asset, either nft or coin\n @param nft_data if the staked asset is nft this infomation should be filled\n @param coin_data if the staked asset is coin this infromation should be filled\n @return returns contract address"
            },
            "functionSelector": "f9aa9e06",
            "id": 327,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initateContract",
            "nameLocation": "3113:15:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 217,
                  "mutability": "mutable",
                  "name": "asset_type",
                  "nameLocation": "3137:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 327,
                  "src": "3130:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Assets_$38",
                    "typeString": "enum Swip3.Assets"
                  },
                  "typeName": {
                    "id": 216,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 215,
                      "name": "Assets",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 38,
                      "src": "3130:6:3"
                    },
                    "referencedDeclaration": 38,
                    "src": "3130:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Assets_$38",
                      "typeString": "enum Swip3.Assets"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 220,
                  "mutability": "mutable",
                  "name": "nft_data",
                  "nameLocation": "3165:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 327,
                  "src": "3149:24:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NFTProps_$47_memory_ptr",
                    "typeString": "struct Swip3.NFTProps"
                  },
                  "typeName": {
                    "id": 219,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 218,
                      "name": "NFTProps",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 47,
                      "src": "3149:8:3"
                    },
                    "referencedDeclaration": 47,
                    "src": "3149:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NFTProps_$47_storage_ptr",
                      "typeString": "struct Swip3.NFTProps"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 223,
                  "mutability": "mutable",
                  "name": "coin_data",
                  "nameLocation": "3220:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 327,
                  "src": "3204:25:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CoinPops_$53_memory_ptr",
                    "typeString": "struct Swip3.CoinPops"
                  },
                  "typeName": {
                    "id": 222,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 221,
                      "name": "CoinPops",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 53,
                      "src": "3204:8:3"
                    },
                    "referencedDeclaration": 53,
                    "src": "3204:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CoinPops_$53_storage_ptr",
                      "typeString": "struct Swip3.CoinPops"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3129:101:3"
            },
            "returnParameters": {
              "id": 227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 226,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 327,
                  "src": "3280:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 225,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3280:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3279:9:3"
            },
            "scope": 427,
            "src": "3104:1778:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 377,
              "nodeType": "Block",
              "src": "4987:428:3",
              "statements": [
                {
                  "assignments": [
                    336,
                    338
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 336,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "5011:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 377,
                      "src": "5006:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 335,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5006:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 338,
                      "mutability": "mutable",
                      "name": "returnData",
                      "nameLocation": "5033:10:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 377,
                      "src": "5020:23:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 337,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5020:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 349,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6f776e65724f662875696e7432353629",
                            "id": 344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5094:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_6352211e6566aa027e75ac9dbf2423197fbd9b82b9d981a3ab367d355866aa1c",
                              "typeString": "literal_string \"ownerOf(uint256)\""
                            },
                            "value": "ownerOf(uint256)"
                          },
                          {
                            "expression": {
                              "id": 345,
                              "name": "nft_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 330,
                              "src": "5114:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NFTProps_$47_memory_ptr",
                                "typeString": "struct Swip3.NFTProps memory"
                              }
                            },
                            "id": 346,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "token_id",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46,
                            "src": "5114:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_6352211e6566aa027e75ac9dbf2423197fbd9b82b9d981a3ab367d355866aa1c",
                              "typeString": "literal_string \"ownerOf(uint256)\""
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 342,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5070:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "5070:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5070:62:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 339,
                          "name": "nft_data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 330,
                          "src": "5048:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NFTProps_$47_memory_ptr",
                            "typeString": "struct Swip3.NFTProps memory"
                          }
                        },
                        "id": 340,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "factory",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44,
                        "src": "5048:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "5048:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5048:85:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5005:128:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 351,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 336,
                        "src": "5152:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e465420636f6e7472616374206861736e277420726573706f6e646564",
                        "id": 352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5161:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_41ad6305f543808350bd7bbc01594ed6082bfceaad28949f27378ca6d9ecfc60",
                          "typeString": "literal_string \"NFT contract hasn't responded\""
                        },
                        "value": "NFT contract hasn't responded"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_41ad6305f543808350bd7bbc01594ed6082bfceaad28949f27378ca6d9ecfc60",
                          "typeString": "literal_string \"NFT contract hasn't responded\""
                        }
                      ],
                      "id": 350,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5143:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5143:50:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 354,
                  "nodeType": "ExpressionStatement",
                  "src": "5143:50:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 358,
                              "name": "returnData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 338,
                              "src": "5222:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 360,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5235:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 359,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5235:7:3",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 361,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5234:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            ],
                            "expression": {
                              "id": 356,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "5211:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 357,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "5211:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5211:33:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 365,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "5256:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Swip3_$427",
                                "typeString": "contract Swip3"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Swip3_$427",
                                "typeString": "contract Swip3"
                              }
                            ],
                            "id": 364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5248:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 363,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5248:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5248:13:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5211:50:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e4654206e6f74207472616e7366657272656420746f20736d61727420636f6e7472616374",
                        "id": 368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5263:39:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e45b0ae9bd3a4b28697d0e5585b560c8476205cbce9c552528c4ff35bb169e4",
                          "typeString": "literal_string \"NFT not transferred to smart contract\""
                        },
                        "value": "NFT not transferred to smart contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e45b0ae9bd3a4b28697d0e5585b560c8476205cbce9c552528c4ff35bb169e4",
                          "typeString": "literal_string \"NFT not transferred to smart contract\""
                        }
                      ],
                      "id": 355,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5203:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5203:100:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 370,
                  "nodeType": "ExpressionStatement",
                  "src": "5203:100:3"
                },
                {
                  "assignments": [
                    372
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 372,
                      "mutability": "mutable",
                      "name": "credit_limit",
                      "nameLocation": "5359:12:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 377,
                      "src": "5351:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 371,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5351:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 374,
                  "initialValue": {
                    "hexValue": "31303030",
                    "id": 373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5374:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000_by_1",
                      "typeString": "int_const 1000"
                    },
                    "value": "1000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5351:27:3"
                },
                {
                  "expression": {
                    "id": 375,
                    "name": "credit_limit",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 372,
                    "src": "5396:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 334,
                  "id": 376,
                  "nodeType": "Return",
                  "src": "5389:19:3"
                }
              ]
            },
            "id": 378,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "evaluateNFTStake",
            "nameLocation": "4897:16:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 330,
                  "mutability": "mutable",
                  "name": "nft_data",
                  "nameLocation": "4930:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 378,
                  "src": "4914:24:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NFTProps_$47_memory_ptr",
                    "typeString": "struct Swip3.NFTProps"
                  },
                  "typeName": {
                    "id": 329,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 328,
                      "name": "NFTProps",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 47,
                      "src": "4914:8:3"
                    },
                    "referencedDeclaration": 47,
                    "src": "4914:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NFTProps_$47_storage_ptr",
                      "typeString": "struct Swip3.NFTProps"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4913:26:3"
            },
            "returnParameters": {
              "id": 334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 333,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 378,
                  "src": "4974:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 332,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4974:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4973:9:3"
            },
            "scope": 427,
            "src": "4888:527:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 398,
              "nodeType": "Block",
              "src": "5518:149:3",
              "statements": [
                {
                  "assignments": [
                    386
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 386,
                      "mutability": "mutable",
                      "name": "credit_limit",
                      "nameLocation": "5573:12:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 398,
                      "src": "5565:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 385,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5565:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 389,
                  "initialValue": {
                    "expression": {
                      "id": 387,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "5588:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "src": "5588:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5565:32:3"
                },
                {
                  "assignments": [
                    391
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 391,
                      "mutability": "mutable",
                      "name": "APR",
                      "nameLocation": "5615:3:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 398,
                      "src": "5607:11:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 390,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5607:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 393,
                  "initialValue": {
                    "hexValue": "3230",
                    "id": 392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5621:2:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20_by_1",
                      "typeString": "int_const 20"
                    },
                    "value": "20"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5607:16:3"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 394,
                        "name": "credit_limit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 386,
                        "src": "5642:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 395,
                        "name": "APR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 391,
                        "src": "5656:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 396,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5641:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 384,
                  "id": 397,
                  "nodeType": "Return",
                  "src": "5634:26:3"
                }
              ]
            },
            "id": 399,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "evaluateCoinStake",
            "nameLocation": "5430:17:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5447:2:3"
            },
            "returnParameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 381,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 399,
                  "src": "5496:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 380,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5496:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 383,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 399,
                  "src": "5505:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 382,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5505:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5495:18:3"
            },
            "scope": 427,
            "src": "5421:246:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 402,
              "nodeType": "Block",
              "src": "5710:38:3",
              "statements": []
            },
            "id": 403,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lockStake",
            "nameLocation": "5682:9:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5691:2:3"
            },
            "returnParameters": {
              "id": 401,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5710:0:3"
            },
            "scope": 427,
            "src": "5673:75:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 417,
              "nodeType": "Block",
              "src": "5804:54:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 411,
                          "name": "gate_ids",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "5830:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 414,
                        "indexExpression": {
                          "expression": {
                            "id": 412,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5839:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5839:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5830:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 408,
                        "name": "free_gates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "5814:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5814:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5814:37:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 416,
                  "nodeType": "ExpressionStatement",
                  "src": "5814:37:3"
                }
              ]
            },
            "functionSelector": "fab6cf59",
            "id": 418,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 406,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 405,
                  "name": "inGates",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 76,
                  "src": "5786:7:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "5786:7:3"
              }
            ],
            "name": "updateGateState",
            "nameLocation": "5763:15:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5778:2:3"
            },
            "returnParameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5804:0:3"
            },
            "scope": 427,
            "src": "5754:104:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 421,
              "nodeType": "Block",
              "src": "5891:7:3",
              "statements": []
            },
            "id": 422,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 419,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5871:2:3"
            },
            "returnParameters": {
              "id": 420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5891:0:3"
            },
            "scope": 427,
            "src": "5864:34:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 425,
              "nodeType": "Block",
              "src": "5931:7:3",
              "statements": []
            },
            "id": 426,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5911:2:3"
            },
            "returnParameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5931:0:3"
            },
            "scope": 427,
            "src": "5903:35:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 428,
        "src": "421:5531:3",
        "usedErrors": [
          56
        ]
      }
    ],
    "src": "0:5952:3"
  },
  "bytecode": "608060405234801561001057600080fd5b50600080546001600160a01b031990811633179091556103e86002556001805490911673d9145cce52d386f254917e481eb44e9943f391381790556120c98061005a6000396000f3fe6080604052600436106100565760003560e01c80630a334bfd1461005f578063818579ef14610088578063c8b5ec1e146100b5578063d59ffccd146100ed578063f9aa9e061461010d578063fab6cf591461012057005b3661005d57005b005b34801561006b57600080fd5b5061007560025481565b6040519081526020015b60405180910390f35b34801561009457600080fd5b506100756100a336600461089d565b60056020526000908152604090205481565b3480156100c157600080fd5b506001546100d5906001600160a01b031681565b6040516001600160a01b03909116815260200161007f565b3480156100f957600080fd5b506000546100d5906001600160a01b031681565b6100d561011b3660046108f1565b610135565b34801561012c57600080fd5b5061005d610321565b6000600184600181111561014b5761014b610991565b036102de5760018251600281111561016557610165610991565b036102c557346014600061017c4262278d006103e1565b3033858560405161018c9061086b565b9485526001600160a01b0393841660208601529290911660408401526060830152608082015260a001604051809103906000f0801580156101d1573d6000803e3d6000fd5b5090506000806101e083610437565b60405163ca11be6960e01b81526001600160a01b038084166004830152602482018390529294509092509084169063ca11be6990604401600060405180830381600087803b15801561023157600080fd5b505af1158015610245573d6000803e3d6000fd5b5050604080518181526018818301527f5573657220636f6e74726163742063726561746564206174000000000000000060608201526001600160a01b038716602082015290517fb758e6c0d2c9aeca50f129afc686c8ae28726e41c3df2af4a0ec5ca15dcc70c59350908190036080019150a1829550505050505061031a565b6040516302efa81b60e61b815260040160405180910390fd5b60008460018111156102f2576102f2610991565b036102c5576103008361069a565b506040516302efa81b60e61b815260040160405180910390fd5b9392505050565b33600081815260056020526040902054600380549091908110610346576103466109a7565b6000918252602090912001546001600160a01b03161461039e5760405162461bcd60e51b815260206004820152600e60248201526d11d85d19481b9bdd081bdddb995960921b60448201526064015b60405180910390fd5b336000908152600560205260408120546004805460018101825592527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b90910155565b60006103ed82846109d3565b9050828110156104315760405162461bcd60e51b815260206004820152600f60248201526e1059191a5d1a5bdb8819985a5b1959608a1b6044820152606401610395565b92915050565b6004546000908190810361059057600254600154604051600092916001600160a01b03169061046590610878565b9182526001600160a01b03166020820152604001604051809103906000f080158015610495573d6000803e3d6000fd5b50600380546001808201835560008390527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90910180546001600160a01b0319166001600160a01b03851617905590549192506104f2919061081a565b6001600160a01b03821660009081526005602052604090205560035460049061051c90600161081a565b81546001808201845560009384526020909320015554604051631e23271d60e01b81526001600160a01b03838116600483015290911690631e23271d90602401600060405180830381600087803b15801561057657600080fd5b505af115801561058a573d6000803e3d6000fd5b50505050505b6004546000036105a2576105a26109eb565b600480546000916003916105b790600161081a565b815481106105c7576105c76109a7565b9060005260206000200154815481106105e2576105e26109a7565b60009182526020822001546040516318baa4f960e11b81526001600160a01b03878116600483015290911692508190839063317549f29060240160408051808303816000875af115801561063a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065e9190610a01565b915091508061068f57600480548061067857610678610a36565b600190038181906000526020600020016000905590555b509094909350915050565b600080600083600001516001600160a01b031684602001516040516024016106c491815260200190565b60408051601f198184030181529181526020820180516001600160e01b03166331a9108f60e11b179052516106f99190610a4c565b6000604051808303816000865af19150503d8060008114610736576040519150601f19603f3d011682016040523d82523d6000602084013e61073b565b606091505b50915091508161078d5760405162461bcd60e51b815260206004820152601d60248201527f4e465420636f6e7472616374206861736e277420726573706f6e6465640000006044820152606401610395565b306001600160a01b0316818060200190518101906107ab9190610a87565b6001600160a01b03161461080f5760405162461bcd60e51b815260206004820152602560248201527f4e4654206e6f74207472616e7366657272656420746f20736d61727420636f6e6044820152641d1c9858dd60da1b6064820152608401610395565b506103e89392505050565b6000828211156108615760405162461bcd60e51b815260206004820152601260248201527114dd589cdd1c9858dd1a5bdb8819985a5b1960721b6044820152606401610395565b61031a8284610aa4565b610c1180610abc83390190565b6109c7806116cd83390190565b6001600160a01b038116811461089a57600080fd5b50565b6000602082840312156108af57600080fd5b813561031a81610885565b6040805190810167ffffffffffffffff811182821017156108eb57634e487b7160e01b600052604160045260246000fd5b60405290565b600080600083850360a081121561090757600080fd5b84356002811061091657600080fd5b93506040601f198201121561092a57600080fd5b6109326108ba565b602086013561094081610885565b81526040868101356020830152909350605f198201121561096057600080fd5b506109696108ba565b60608501356003811061097b57600080fd5b8152608094909401356020850152509093909250565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156109e6576109e66109bd565b500190565b634e487b7160e01b600052600160045260246000fd5b60008060408385031215610a1457600080fd5b8251915060208301518015158114610a2b57600080fd5b809150509250929050565b634e487b7160e01b600052603160045260246000fd5b6000825160005b81811015610a6d5760208186018101518583015201610a53565b81811115610a7c576000828501525b509190910192915050565b600060208284031215610a9957600080fd5b815161031a81610885565b600082821015610ab657610ab66109bd565b50039056fe608060405234801561001057600080fd5b50604051610c11380380610c1183398101604081905261002f9161010f565b7fa224651db1c118154a1c45f82025442a97acadb5db9e887d7098aa23e98fa10d60405161008e906020808252601c908201527f41206368696c64206a757374206f70656e656420697473206579657300000000604082015260600190565b60405180910390a1600080546001600160a01b039485166001600160a01b031991821617909155600180549590941694169390931782556002939093556005805460ff19908116909155600693909355600a91909155600c805490921617905561015e565b80516001600160a01b038116811461010a57600080fd5b919050565b600080600080600060a0868803121561012757600080fd5b85519450610137602087016100f3565b9350610145604087016100f3565b6060870151608090970151959894975095949392505050565b610aa48061016d6000396000f3fe60806040526004361061009a5760003560e01c80639f0c592e116100615780639f0c592e14610117578063a6601f2e14610147578063ae0aba8c1461015c578063c19d93fb14610164578063ca11be691461018b578063d12abd8a1461010257005b806307cc692f146100a35780630c08bf88146100cb5780633b7104f2146100e057806378706079146100ec578063804d6b381461010257005b366100a157005b005b3480156100af57600080fd5b506100b86101ab565b6040519081526020015b60405180910390f35b3480156100d757600080fd5b506100a16101c9565b3480156100a157600080fd5b3480156100f857600080fd5b506100b860025481565b34801561010e57600080fd5b506100a16103a6565b34801561012357600080fd5b5061013761013236600461092f565b610459565b60405190151581526020016100c2565b34801561015357600080fd5b506100a1610611565b6100a16106dd565b34801561017057600080fd5b5060055461017e9060ff1681565b6040516100c2919061097d565b34801561019757600080fd5b506100a16101a636600461092f565b6107a1565b60006101c460075460065461088e90919063ffffffff16565b905090565b6000546001600160a01b03163314806101ec57506001546001600160a01b031633145b6102115760405162461bcd60e51b8152600401610208906109a5565b60405180910390fd5b600160055460ff16600381111561022a5761022a610967565b1480610237575060025442115b1561026957600580546001919060ff191682805b0217905550604051630407b05b60e31b815260040160405180910390fd5b600260055460ff16600381111561028257610282610967565b1461029f5760405162461bcd60e51b8152600401610208906109d0565b600754156103035760405162461bcd60e51b815260206004820152602b60248201527f42616c616e6365206d7573742062652030206265666f7265207465726d69616e60448201526a1d1a5b99c818481919585b60aa1b6064820152608401610208565b600b541561036c5760405162461bcd60e51b815260206004820152603060248201527f546865726520697320756e77697468647261776d206d6f6e65792e205769746860448201526f6472617720796f7572206d6f6e65792160801b6064820152608401610208565b6005805460ff191660031790556040517f6d0d90585834980bd0e5603341ff50b06349c11e0bf9241d03f6d065f12a262b90600090a1565b565b6000546001600160a01b03163314806103c957506001546001600160a01b031633145b6103e55760405162461bcd60e51b8152600401610208906109a5565b600160055460ff1660038111156103fe576103fe610967565b148061040b575060025442115b1561042357600580546001919060ff1916828061024b565b600260055460ff16600381111561043c5761043c610967565b146103a45760405162461bcd60e51b8152600401610208906109d0565b600080546001600160a01b031633148061047d57506001546001600160a01b031633145b6104995760405162461bcd60e51b8152600401610208906109a5565b600160055460ff1660038111156104b2576104b2610967565b14806104bf575060025442115b156104d757600580546001919060ff1916828061024b565b600260055460ff1660038111156104f0576104f0610967565b1461050d5760405162461bcd60e51b8152600401610208906109d0565b6105156101ab565b82111561056f5760405162461bcd60e51b815260206004820152602260248201527f4e6f20617661696c61626c652063726564697420666f722074686973206379636044820152616c6560f01b6064820152608401610208565b6003546004805460405163bc134ae360e01b8152918201526001600160a01b03858116602483015260448201859052600092169063bc134ae3906064016020604051808303816000875af11580156105cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ef9190610a07565b905080156106085760075461060490846108df565b6007555b90505b92915050565b6000546001600160a01b0316331461066b5760405162461bcd60e51b815260206004820181905260248201527f4f6e6c7920757365722063616e206163636573732074686973206d6574686f646044820152606401610208565b600260055460ff16600381111561068457610684610967565b146106a15760405162461bcd60e51b8152600401610208906109d0565b600b80546000918290556040519091339183156108fc0291849190818181858888f193505050501580156106d9573d6000803e3d6000fd5b5050565b6000546001600160a01b031633146107375760405162461bcd60e51b815260206004820181905260248201527f4f6e6c7920757365722063616e206163636573732074686973206d6574686f646044820152606401610208565b600260055460ff16600381111561075057610750610967565b1461076d5760405162461bcd60e51b8152600401610208906109d0565b60075434111561078f5760075461078590349061088e565b600b556000600755565b60075461079c903461088e565b600755565b6001546001600160a01b031633146108065760405162461bcd60e51b815260206004820152602260248201527f4f6e6c7920706172656e742063616e206163636573732074686973206d6574686044820152611bd960f21b6064820152608401610208565b600380546001600160a01b0319166001600160a01b038416179055600481905560058054600260ff19909116179055604080516020808252601290820152711248185b481b9bddc81858dd1a5d985d195960721b8183015290517fa224651db1c118154a1c45f82025442a97acadb5db9e887d7098aa23e98fa10d9181900360600190a15050565b6000828211156108d55760405162461bcd60e51b815260206004820152601260248201527114dd589cdd1c9858dd1a5bdb8819985a5b1960721b6044820152606401610208565b6106088284610a3f565b60006108eb8284610a56565b90508281101561060b5760405162461bcd60e51b815260206004820152600f60248201526e1059191a5d1a5bdb8819985a5b1959608a1b6044820152606401610208565b6000806040838503121561094257600080fd5b82356001600160a01b038116811461095957600080fd5b946020939093013593505050565b634e487b7160e01b600052602160045260246000fd5b602081016004831061099f57634e487b7160e01b600052602160045260246000fd5b91905290565b6020808252601190820152702ab730baba3437b934bd32b2103ab9b2b960791b604082015260600190565b6020808252601b908201527f436f6e74726163742073746174652069736e2774206163746976650000000000604082015260600190565b600060208284031215610a1957600080fd5b8151801515811461060857600080fd5b634e487b7160e01b600052601160045260246000fd5b600082821015610a5157610a51610a29565b500390565b60008219821115610a6957610a69610a29565b50019056fea264697066735822122049ddffa047dd9f1775b20910c53521b01323d26752c5e1a54702224bfb4110be64736f6c634300080d0033608060405234801561001057600080fd5b506040516109c73803806109c783398101604081905261002f916100d5565b60008054336001600160a01b0319918216811783556003859055600480549092166001600160a01b03851617909155604080516060808252601c908201527f4c656e64696e6720706f6f6c2067617465206372656174656420627900000000608082015260208101929092528101919091527f2cce1494b4ef3c5682648d5c4bbf147548f403fc2ac218e41ec797babdb0acb59060a00160405180910390a15050610112565b600080604083850312156100e857600080fd5b825160208401519092506001600160a01b038116811461010757600080fd5b809150509250929050565b6108a6806101216000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063ac4460021161005b578063ac446002146100f1578063bc134ae3146100fb578063cbc20f301461011e578063f984ead81461013157600080fd5b8063317549f21461008257806389f78c8e146100af5780639dc61d4f146100c6575b600080fd5b610095610090366004610726565b610144565b604080519283529015156020830152015b60405180910390f35b6100b860035481565b6040519081526020016100a6565b6000546100d9906001600160a01b031681565b6040516001600160a01b0390911681526020016100a6565b6100f961037e565b005b61010e610109366004610741565b6103c3565b60405190151581526020016100a6565b6100f961012c366004610776565b610554565b6004546100d9906001600160a01b031681565b6000805481906001600160a01b0316331461017a5760405162461bcd60e51b81526004016101719061078f565b60405180910390fd5b600354600154108061018d575060025415155b6101ce5760405162461bcd60e51b815260206004820152601260248201527115da1a5d19481b1a5cdd081a5cc8199d5b1b60721b6044820152606401610171565b600254156102c75760028054600091906101e99060016106b2565b815481106101f9576101f96107dc565b90600052602060002001549050836001828154811061021a5761021a6107dc565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506002805480610259576102596107f2565b600190038181906000526020600020016000905590557f2cce1494b4ef3c5682648d5c4bbf147548f403fc2ac218e41ec797babdb0acb584826040516102a0929190610808565b60405180910390a1600354600154829111806102bd575060025415155b9250925050915091565b60018054808201825560008290527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b03861617905580547f2cce1494b4ef3c5682648d5c4bbf147548f403fc2ac218e41ec797babdb0acb591859161033f916106b2565b60405161034d929190610808565b60405180910390a160018054610362916106b2565b6003546001541080610375575060025415155b91509150915091565b33600081815260056020526040808220805490839055905190929183156108fc02918491818181858888f193505050501580156103bf573d6000803e3d6000fd5b5050565b600154600090849081106103d657600080fd5b60006001600160a01b0316600182815481106103f4576103f46107dc565b6000918252602090912001546001600160a01b0316036104495760405162461bcd60e51b815260206004820152601060248201526f11195b195d19590810dbdb9d1c9858dd60821b6044820152606401610171565b6001818154811061045c5761045c6107dc565b6000918252602090912001546001600160a01b031633146104e55760405162461bcd60e51b815260206004820152603f60248201527f536d61727420636f6e7472616374206e6f7420616c6c6f77656420746f20776960448201527f746864726177206d6f6e6579207468726f7567687420746869732067617465006064820152608401610171565b60048054604051633607999b60e01b81529182018590526001600160a01b0386811660248401521690633607999b90604401600060405180830381600087803b15801561053157600080fd5b505af1158015610545573d6000803e3d6000fd5b50600198975050505050505050565b6000546001600160a01b0316331461057e5760405162461bcd60e51b81526004016101719061078f565b60015481106105c35760405162461bcd60e51b8152602060048201526011602482015270151bdad95b881b9bdd0818dc99585d1959607a1b6044820152606401610171565b60006001600160a01b0316600182815481106105e1576105e16107dc565b6000918252602090912001546001600160a01b0316036106435760405162461bcd60e51b815260206004820152601760248201527f6163636f756e7420616c72656164792064656c657465640000000000000000006044820152606401610171565b600060018281548110610658576106586107dc565b6000918252602082200180546001600160a01b0319166001600160a01b0393909316929092179091556002805460018101825591527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0155565b6000828211156106f95760405162461bcd60e51b815260206004820152601260248201527114dd589cdd1c9858dd1a5bdb8819985a5b1960721b6044820152606401610171565b610703828461084b565b9392505050565b80356001600160a01b038116811461072157600080fd5b919050565b60006020828403121561073857600080fd5b6107038261070a565b60008060006060848603121561075657600080fd5b833592506107666020850161070a565b9150604084013590509250925092565b60006020828403121561078857600080fd5b5035919050565b6020808252602d908201527f4f6e6c79206372656174696e6720636f6e74726163742063616e2063616c6c2060408201526c3a3434b990333ab731ba34b7b760991b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b6060808252601390820152721059191959081d1bc81dda1a5d19481b1a5cdd606a1b60808201526001600160a01b03929092166020830152604082015260a00190565b60008282101561086b57634e487b7160e01b600052601160045260246000fd5b50039056fea2646970667358221220f4d49cce88c6670d812898cecda62f9d2453c200f7be4a17573f13aea47a526264736f6c634300080d0033a2646970667358221220aa05b13bd31c1f2a70b190b0cc56ad70738b9ae536ffa2072833a3053705811e64736f6c634300080d0033",
  "bytecodeSha1": "9f724a1fd1267caa12192f5ab8576f0afa5dbea7",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "Swip3",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "2": {
        "SafeMath.add": {
          "25": [
            188,
            194,
            true
          ]
        },
        "SafeMath.sub": {
          "26": [
            332,
            338,
            true
          ]
        }
      },
      "3": {
        "Swip3.evaluateNFTStake": {
          "23": [
            5152,
            5159,
            true
          ],
          "24": [
            5211,
            5261,
            true
          ]
        },
        "Swip3.initateContract": {
          "18": [
            3307,
            3332,
            false
          ],
          "19": [
            3351,
            3389,
            false
          ],
          "20": [
            4566,
            4590,
            false
          ]
        },
        "Swip3.matchWithLendingPool": {
          "21": [
            2005,
            2027,
            false
          ],
          "22": [
            2585,
            2589,
            false
          ]
        }
      },
      "4": {}
    },
    "statements": {
      "0": {},
      "1": {},
      "2": {
        "SafeMath.add": {
          "5": [
            161,
            170
          ],
          "6": [
            180,
            214
          ]
        },
        "SafeMath.sub": {
          "16": [
            324,
            361
          ],
          "17": [
            371,
            380
          ]
        }
      },
      "3": {
        "Swip3.evaluateNFTStake": {
          "14": [
            5143,
            5193
          ],
          "15": [
            5203,
            5303
          ]
        },
        "Swip3.initateContract": {
          "0": [
            4074,
            4106
          ],
          "1": [
            4141,
            4213
          ],
          "2": [
            4231,
            4260
          ],
          "3": [
            4726,
            4752
          ]
        },
        "Swip3.matchWithLendingPool": {
          "7": [
            2140,
            2160
          ],
          "8": [
            2174,
            2223
          ],
          "9": [
            2237,
            2273
          ],
          "10": [
            2287,
            2356
          ],
          "11": [
            2377,
            2407
          ],
          "12": [
            2604,
            2620
          ],
          "13": [
            2641,
            2672
          ]
        },
        "Swip3.updateGateState": {
          "4": [
            5814,
            5851
          ]
        }
      },
      "4": {}
    }
  },
  "dependencies": [
    "LendingPool",
    "LendingPoolGate",
    "SafeMath",
    "Swip3Customer"
  ],
  "deployedBytecode": "6080604052600436106100565760003560e01c80630a334bfd1461005f578063818579ef14610088578063c8b5ec1e146100b5578063d59ffccd146100ed578063f9aa9e061461010d578063fab6cf591461012057005b3661005d57005b005b34801561006b57600080fd5b5061007560025481565b6040519081526020015b60405180910390f35b34801561009457600080fd5b506100756100a336600461089d565b60056020526000908152604090205481565b3480156100c157600080fd5b506001546100d5906001600160a01b031681565b6040516001600160a01b03909116815260200161007f565b3480156100f957600080fd5b506000546100d5906001600160a01b031681565b6100d561011b3660046108f1565b610135565b34801561012c57600080fd5b5061005d610321565b6000600184600181111561014b5761014b610991565b036102de5760018251600281111561016557610165610991565b036102c557346014600061017c4262278d006103e1565b3033858560405161018c9061086b565b9485526001600160a01b0393841660208601529290911660408401526060830152608082015260a001604051809103906000f0801580156101d1573d6000803e3d6000fd5b5090506000806101e083610437565b60405163ca11be6960e01b81526001600160a01b038084166004830152602482018390529294509092509084169063ca11be6990604401600060405180830381600087803b15801561023157600080fd5b505af1158015610245573d6000803e3d6000fd5b5050604080518181526018818301527f5573657220636f6e74726163742063726561746564206174000000000000000060608201526001600160a01b038716602082015290517fb758e6c0d2c9aeca50f129afc686c8ae28726e41c3df2af4a0ec5ca15dcc70c59350908190036080019150a1829550505050505061031a565b6040516302efa81b60e61b815260040160405180910390fd5b60008460018111156102f2576102f2610991565b036102c5576103008361069a565b506040516302efa81b60e61b815260040160405180910390fd5b9392505050565b33600081815260056020526040902054600380549091908110610346576103466109a7565b6000918252602090912001546001600160a01b03161461039e5760405162461bcd60e51b815260206004820152600e60248201526d11d85d19481b9bdd081bdddb995960921b60448201526064015b60405180910390fd5b336000908152600560205260408120546004805460018101825592527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b90910155565b60006103ed82846109d3565b9050828110156104315760405162461bcd60e51b815260206004820152600f60248201526e1059191a5d1a5bdb8819985a5b1959608a1b6044820152606401610395565b92915050565b6004546000908190810361059057600254600154604051600092916001600160a01b03169061046590610878565b9182526001600160a01b03166020820152604001604051809103906000f080158015610495573d6000803e3d6000fd5b50600380546001808201835560008390527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90910180546001600160a01b0319166001600160a01b03851617905590549192506104f2919061081a565b6001600160a01b03821660009081526005602052604090205560035460049061051c90600161081a565b81546001808201845560009384526020909320015554604051631e23271d60e01b81526001600160a01b03838116600483015290911690631e23271d90602401600060405180830381600087803b15801561057657600080fd5b505af115801561058a573d6000803e3d6000fd5b50505050505b6004546000036105a2576105a26109eb565b600480546000916003916105b790600161081a565b815481106105c7576105c76109a7565b9060005260206000200154815481106105e2576105e26109a7565b60009182526020822001546040516318baa4f960e11b81526001600160a01b03878116600483015290911692508190839063317549f29060240160408051808303816000875af115801561063a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065e9190610a01565b915091508061068f57600480548061067857610678610a36565b600190038181906000526020600020016000905590555b509094909350915050565b600080600083600001516001600160a01b031684602001516040516024016106c491815260200190565b60408051601f198184030181529181526020820180516001600160e01b03166331a9108f60e11b179052516106f99190610a4c565b6000604051808303816000865af19150503d8060008114610736576040519150601f19603f3d011682016040523d82523d6000602084013e61073b565b606091505b50915091508161078d5760405162461bcd60e51b815260206004820152601d60248201527f4e465420636f6e7472616374206861736e277420726573706f6e6465640000006044820152606401610395565b306001600160a01b0316818060200190518101906107ab9190610a87565b6001600160a01b03161461080f5760405162461bcd60e51b815260206004820152602560248201527f4e4654206e6f74207472616e7366657272656420746f20736d61727420636f6e6044820152641d1c9858dd60da1b6064820152608401610395565b506103e89392505050565b6000828211156108615760405162461bcd60e51b815260206004820152601260248201527114dd589cdd1c9858dd1a5bdb8819985a5b1960721b6044820152606401610395565b61031a8284610aa4565b610c1180610abc83390190565b6109c7806116cd83390190565b6001600160a01b038116811461089a57600080fd5b50565b6000602082840312156108af57600080fd5b813561031a81610885565b6040805190810167ffffffffffffffff811182821017156108eb57634e487b7160e01b600052604160045260246000fd5b60405290565b600080600083850360a081121561090757600080fd5b84356002811061091657600080fd5b93506040601f198201121561092a57600080fd5b6109326108ba565b602086013561094081610885565b81526040868101356020830152909350605f198201121561096057600080fd5b506109696108ba565b60608501356003811061097b57600080fd5b8152608094909401356020850152509093909250565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156109e6576109e66109bd565b500190565b634e487b7160e01b600052600160045260246000fd5b60008060408385031215610a1457600080fd5b8251915060208301518015158114610a2b57600080fd5b809150509250929050565b634e487b7160e01b600052603160045260246000fd5b6000825160005b81811015610a6d5760208186018101518583015201610a53565b81811115610a7c576000828501525b509190910192915050565b600060208284031215610a9957600080fd5b815161031a81610885565b600082821015610ab657610ab66109bd565b50039056fe608060405234801561001057600080fd5b50604051610c11380380610c1183398101604081905261002f9161010f565b7fa224651db1c118154a1c45f82025442a97acadb5db9e887d7098aa23e98fa10d60405161008e906020808252601c908201527f41206368696c64206a757374206f70656e656420697473206579657300000000604082015260600190565b60405180910390a1600080546001600160a01b039485166001600160a01b031991821617909155600180549590941694169390931782556002939093556005805460ff19908116909155600693909355600a91909155600c805490921617905561015e565b80516001600160a01b038116811461010a57600080fd5b919050565b600080600080600060a0868803121561012757600080fd5b85519450610137602087016100f3565b9350610145604087016100f3565b6060870151608090970151959894975095949392505050565b610aa48061016d6000396000f3fe60806040526004361061009a5760003560e01c80639f0c592e116100615780639f0c592e14610117578063a6601f2e14610147578063ae0aba8c1461015c578063c19d93fb14610164578063ca11be691461018b578063d12abd8a1461010257005b806307cc692f146100a35780630c08bf88146100cb5780633b7104f2146100e057806378706079146100ec578063804d6b381461010257005b366100a157005b005b3480156100af57600080fd5b506100b86101ab565b6040519081526020015b60405180910390f35b3480156100d757600080fd5b506100a16101c9565b3480156100a157600080fd5b3480156100f857600080fd5b506100b860025481565b34801561010e57600080fd5b506100a16103a6565b34801561012357600080fd5b5061013761013236600461092f565b610459565b60405190151581526020016100c2565b34801561015357600080fd5b506100a1610611565b6100a16106dd565b34801561017057600080fd5b5060055461017e9060ff1681565b6040516100c2919061097d565b34801561019757600080fd5b506100a16101a636600461092f565b6107a1565b60006101c460075460065461088e90919063ffffffff16565b905090565b6000546001600160a01b03163314806101ec57506001546001600160a01b031633145b6102115760405162461bcd60e51b8152600401610208906109a5565b60405180910390fd5b600160055460ff16600381111561022a5761022a610967565b1480610237575060025442115b1561026957600580546001919060ff191682805b0217905550604051630407b05b60e31b815260040160405180910390fd5b600260055460ff16600381111561028257610282610967565b1461029f5760405162461bcd60e51b8152600401610208906109d0565b600754156103035760405162461bcd60e51b815260206004820152602b60248201527f42616c616e6365206d7573742062652030206265666f7265207465726d69616e60448201526a1d1a5b99c818481919585b60aa1b6064820152608401610208565b600b541561036c5760405162461bcd60e51b815260206004820152603060248201527f546865726520697320756e77697468647261776d206d6f6e65792e205769746860448201526f6472617720796f7572206d6f6e65792160801b6064820152608401610208565b6005805460ff191660031790556040517f6d0d90585834980bd0e5603341ff50b06349c11e0bf9241d03f6d065f12a262b90600090a1565b565b6000546001600160a01b03163314806103c957506001546001600160a01b031633145b6103e55760405162461bcd60e51b8152600401610208906109a5565b600160055460ff1660038111156103fe576103fe610967565b148061040b575060025442115b1561042357600580546001919060ff1916828061024b565b600260055460ff16600381111561043c5761043c610967565b146103a45760405162461bcd60e51b8152600401610208906109d0565b600080546001600160a01b031633148061047d57506001546001600160a01b031633145b6104995760405162461bcd60e51b8152600401610208906109a5565b600160055460ff1660038111156104b2576104b2610967565b14806104bf575060025442115b156104d757600580546001919060ff1916828061024b565b600260055460ff1660038111156104f0576104f0610967565b1461050d5760405162461bcd60e51b8152600401610208906109d0565b6105156101ab565b82111561056f5760405162461bcd60e51b815260206004820152602260248201527f4e6f20617661696c61626c652063726564697420666f722074686973206379636044820152616c6560f01b6064820152608401610208565b6003546004805460405163bc134ae360e01b8152918201526001600160a01b03858116602483015260448201859052600092169063bc134ae3906064016020604051808303816000875af11580156105cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ef9190610a07565b905080156106085760075461060490846108df565b6007555b90505b92915050565b6000546001600160a01b0316331461066b5760405162461bcd60e51b815260206004820181905260248201527f4f6e6c7920757365722063616e206163636573732074686973206d6574686f646044820152606401610208565b600260055460ff16600381111561068457610684610967565b146106a15760405162461bcd60e51b8152600401610208906109d0565b600b80546000918290556040519091339183156108fc0291849190818181858888f193505050501580156106d9573d6000803e3d6000fd5b5050565b6000546001600160a01b031633146107375760405162461bcd60e51b815260206004820181905260248201527f4f6e6c7920757365722063616e206163636573732074686973206d6574686f646044820152606401610208565b600260055460ff16600381111561075057610750610967565b1461076d5760405162461bcd60e51b8152600401610208906109d0565b60075434111561078f5760075461078590349061088e565b600b556000600755565b60075461079c903461088e565b600755565b6001546001600160a01b031633146108065760405162461bcd60e51b815260206004820152602260248201527f4f6e6c7920706172656e742063616e206163636573732074686973206d6574686044820152611bd960f21b6064820152608401610208565b600380546001600160a01b0319166001600160a01b038416179055600481905560058054600260ff19909116179055604080516020808252601290820152711248185b481b9bddc81858dd1a5d985d195960721b8183015290517fa224651db1c118154a1c45f82025442a97acadb5db9e887d7098aa23e98fa10d9181900360600190a15050565b6000828211156108d55760405162461bcd60e51b815260206004820152601260248201527114dd589cdd1c9858dd1a5bdb8819985a5b1960721b6044820152606401610208565b6106088284610a3f565b60006108eb8284610a56565b90508281101561060b5760405162461bcd60e51b815260206004820152600f60248201526e1059191a5d1a5bdb8819985a5b1959608a1b6044820152606401610208565b6000806040838503121561094257600080fd5b82356001600160a01b038116811461095957600080fd5b946020939093013593505050565b634e487b7160e01b600052602160045260246000fd5b602081016004831061099f57634e487b7160e01b600052602160045260246000fd5b91905290565b6020808252601190820152702ab730baba3437b934bd32b2103ab9b2b960791b604082015260600190565b6020808252601b908201527f436f6e74726163742073746174652069736e2774206163746976650000000000604082015260600190565b600060208284031215610a1957600080fd5b8151801515811461060857600080fd5b634e487b7160e01b600052601160045260246000fd5b600082821015610a5157610a51610a29565b500390565b60008219821115610a6957610a69610a29565b50019056fea264697066735822122049ddffa047dd9f1775b20910c53521b01323d26752c5e1a54702224bfb4110be64736f6c634300080d0033608060405234801561001057600080fd5b506040516109c73803806109c783398101604081905261002f916100d5565b60008054336001600160a01b0319918216811783556003859055600480549092166001600160a01b03851617909155604080516060808252601c908201527f4c656e64696e6720706f6f6c2067617465206372656174656420627900000000608082015260208101929092528101919091527f2cce1494b4ef3c5682648d5c4bbf147548f403fc2ac218e41ec797babdb0acb59060a00160405180910390a15050610112565b600080604083850312156100e857600080fd5b825160208401519092506001600160a01b038116811461010757600080fd5b809150509250929050565b6108a6806101216000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063ac4460021161005b578063ac446002146100f1578063bc134ae3146100fb578063cbc20f301461011e578063f984ead81461013157600080fd5b8063317549f21461008257806389f78c8e146100af5780639dc61d4f146100c6575b600080fd5b610095610090366004610726565b610144565b604080519283529015156020830152015b60405180910390f35b6100b860035481565b6040519081526020016100a6565b6000546100d9906001600160a01b031681565b6040516001600160a01b0390911681526020016100a6565b6100f961037e565b005b61010e610109366004610741565b6103c3565b60405190151581526020016100a6565b6100f961012c366004610776565b610554565b6004546100d9906001600160a01b031681565b6000805481906001600160a01b0316331461017a5760405162461bcd60e51b81526004016101719061078f565b60405180910390fd5b600354600154108061018d575060025415155b6101ce5760405162461bcd60e51b815260206004820152601260248201527115da1a5d19481b1a5cdd081a5cc8199d5b1b60721b6044820152606401610171565b600254156102c75760028054600091906101e99060016106b2565b815481106101f9576101f96107dc565b90600052602060002001549050836001828154811061021a5761021a6107dc565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506002805480610259576102596107f2565b600190038181906000526020600020016000905590557f2cce1494b4ef3c5682648d5c4bbf147548f403fc2ac218e41ec797babdb0acb584826040516102a0929190610808565b60405180910390a1600354600154829111806102bd575060025415155b9250925050915091565b60018054808201825560008290527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b03861617905580547f2cce1494b4ef3c5682648d5c4bbf147548f403fc2ac218e41ec797babdb0acb591859161033f916106b2565b60405161034d929190610808565b60405180910390a160018054610362916106b2565b6003546001541080610375575060025415155b91509150915091565b33600081815260056020526040808220805490839055905190929183156108fc02918491818181858888f193505050501580156103bf573d6000803e3d6000fd5b5050565b600154600090849081106103d657600080fd5b60006001600160a01b0316600182815481106103f4576103f46107dc565b6000918252602090912001546001600160a01b0316036104495760405162461bcd60e51b815260206004820152601060248201526f11195b195d19590810dbdb9d1c9858dd60821b6044820152606401610171565b6001818154811061045c5761045c6107dc565b6000918252602090912001546001600160a01b031633146104e55760405162461bcd60e51b815260206004820152603f60248201527f536d61727420636f6e7472616374206e6f7420616c6c6f77656420746f20776960448201527f746864726177206d6f6e6579207468726f7567687420746869732067617465006064820152608401610171565b60048054604051633607999b60e01b81529182018590526001600160a01b0386811660248401521690633607999b90604401600060405180830381600087803b15801561053157600080fd5b505af1158015610545573d6000803e3d6000fd5b50600198975050505050505050565b6000546001600160a01b0316331461057e5760405162461bcd60e51b81526004016101719061078f565b60015481106105c35760405162461bcd60e51b8152602060048201526011602482015270151bdad95b881b9bdd0818dc99585d1959607a1b6044820152606401610171565b60006001600160a01b0316600182815481106105e1576105e16107dc565b6000918252602090912001546001600160a01b0316036106435760405162461bcd60e51b815260206004820152601760248201527f6163636f756e7420616c72656164792064656c657465640000000000000000006044820152606401610171565b600060018281548110610658576106586107dc565b6000918252602082200180546001600160a01b0319166001600160a01b0393909316929092179091556002805460018101825591527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0155565b6000828211156106f95760405162461bcd60e51b815260206004820152601260248201527114dd589cdd1c9858dd1a5bdb8819985a5b1960721b6044820152606401610171565b610703828461084b565b9392505050565b80356001600160a01b038116811461072157600080fd5b919050565b60006020828403121561073857600080fd5b6107038261070a565b60008060006060848603121561075657600080fd5b833592506107666020850161070a565b9150604084013590509250925092565b60006020828403121561078857600080fd5b5035919050565b6020808252602d908201527f4f6e6c79206372656174696e6720636f6e74726163742063616e2063616c6c2060408201526c3a3434b990333ab731ba34b7b760991b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b6060808252601390820152721059191959081d1bc81dda1a5d19481b1a5cdd606a1b60808201526001600160a01b03929092166020830152604082015260a00190565b60008282101561086b57634e487b7160e01b600052601160045260246000fd5b50039056fea2646970667358221220f4d49cce88c6670d812898cecda62f9d2453c200f7be4a17573f13aea47a526264736f6c634300080d0033a2646970667358221220aa05b13bd31c1f2a70b190b0cc56ad70738b9ae536ffa2072833a3053705811e64736f6c634300080d0033",
  "deployedSourceMap": "421:5531:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;559:29;;;;;;;;;;;;;;;;;;;160:25:5;;;148:2;133:18;559:29:3;;;;;;;;659:43;;;;;;;;;;-1:-1:-1;659:43:3;;;;;:::i;:::-;;;;;;;;;;;;;;518:35;;;;;;;;;;-1:-1:-1;518:35:3;;;;-1:-1:-1;;;;;518:35:3;;;;;;-1:-1:-1;;;;;748:32:5;;;730:51;;718:2;703:18;518:35:3;584:203:5;475:37:3;;;;;;;;;;-1:-1:-1;475:37:3;;;;-1:-1:-1;;;;;475:37:3;;;3104:1778;;;;;;:::i;:::-;;:::i;5754:104::-;;;;;;;;;;;;;:::i;3104:1778::-;3280:7;3321:11;3307:10;:25;;;;;;;;:::i;:::-;;3303:1572;;3375:14;3351:19;;:38;;;;;;;;:::i;:::-;;3347:1190;;5588:9;5621:2;3493:20;3728:31;:15;3748:10;3728:19;:31::i;:::-;3822:4;3882:10;3894:12;3961:3;3710:255;;;;;:::i;:::-;2789:25:5;;;-1:-1:-1;;;;;2888:15:5;;;2883:2;2868:18;;2861:43;2940:15;;;;2935:2;2920:18;;2913:43;2987:2;2972:18;;2965:34;3030:3;3015:19;;3008:35;2776:3;2761:19;3710:255:3;;;;;;;;;;;;;;;;;;;;;;;3680:285;;3984:12;3998:10;4012:44;4041:13;4012:20;:44::i;:::-;4074:32;;-1:-1:-1;;;4074:32:3;;-1:-1:-1;;;;;3246:32:5;;;4074::3;;;3228:51:5;3295:18;;;3288:34;;;3983:73:3;;-1:-1:-1;3983:73:3;;-1:-1:-1;4074:22:3;;;;;;3201:18:5;;4074:32:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4146:67:3;;;3545:21:5;;;3602:2;3582:18;;;3575:30;3641:26;3636:2;3621:18;;3614:54;-1:-1:-1;;;;;3742:32:5;;3735:4;3720:20;;3713:62;4146:67:3;;;;-1:-1:-1;4146:67:3;;;;3700:3:5;4146:67:3;;-1:-1:-1;4146:67:3;4246:13;4231:29;;;;;;;;;3347:1190;4499:23;;-1:-1:-1;;;4499:23:3;;;;;;;;;;;3303:1572;4580:10;4566;:24;;;;;;;;:::i;:::-;;4562:313;;4726:26;4743:8;4726:16;:26::i;:::-;;4773:23;;-1:-1:-1;;;4773:23:3;;;;;;;;;;;4562:313;3104:1778;;;;;:::o;5754:104::-;1158:10;1132:20;;;;:8;:20;;;;;;1126:5;:27;;:5;;1132:20;1126:27;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;1126:27:3;1118:50;1110:77;;;;-1:-1:-1;;;1110:77:3;;4120:2:5;1110:77:3;;;4102:21:5;4159:2;4139:18;;;4132:30;-1:-1:-1;;;4178:18:5;;;4171:44;4232:18;;1110:77:3;;;;;;;;;5839:10:::1;5830:20;::::0;;;:8:::1;:20;::::0;;;;;5814:10:::1;:37:::0;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;5754:104::o;82:157:2:-;140:9;165:5;169:1;165;:5;:::i;:::-;161:9;;193:1;188;:6;;180:34;;;;-1:-1:-1;;;180:34:2;;4728:2:5;180:34:2;;;4710:21:5;4767:2;4747:18;;;4740:30;-1:-1:-1;;;4786:18:5;;;4779:45;4841:18;;180:34:2;4526:339:5;180:34:2;82:157;;;;:::o;1879:802:3:-;2005:10;:17;1969:7;;;;2005:22;;2001:366;;2089:14;;2105:20;;2069:57;;2042:24;;2089:14;-1:-1:-1;;;;;2105:20:3;;2069:57;;;:::i;:::-;5044:25:5;;;-1:-1:-1;;;;;5105:32:5;5100:2;5085:18;;5078:60;5032:2;5017:18;2069:57:3;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2140:5:3;:20;;;;;;;;-1:-1:-1;2140:20:3;;;;;;;;;-1:-1:-1;;;;;;2140:20:3;-1:-1:-1;;;;;2140:20:3;;;;;2204:12;;2140:20;;-1:-1:-1;2204:19:3;;:12;:16;:19::i;:::-;-1:-1:-1;;;;;2174:27:3;;;;;;:8;:27;;;;;:49;2253:5;:12;2237:10;;2253:19;;2270:1;2253:16;:19::i;:::-;2237:36;;;;;;;;-1:-1:-1;2237:36:3;;;;;;;;;2307:20;2287:69;;-1:-1:-1;;;2287:69:3;;-1:-1:-1;;;;;748:32:5;;;2287:69:3;;;730:51:5;2307:20:3;;;;2287:50;;703:18:5;;2287:69:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2028:339;2001:366;2384:10;:17;2405:1;2384:22;2377:30;;;;:::i;:::-;2452:10;2463:17;;2418:25;;2446:5;;2463:24;;2485:1;2463:21;:24::i;:::-;2452:36;;;;;;;;:::i;:::-;;;;;;;;;2446:43;;;;;;;;:::i;:::-;;;;;;;;;;2525:44;;-1:-1:-1;;;2525:44:3;;-1:-1:-1;;;;;748:32:5;;;2525:44:3;;;730:51:5;2446:43:3;;;;-1:-1:-1;2446:43:3;;;;2525:26;;703:18:5;;2525:44:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2499:70;;;;2585:4;2580:51;;2604:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;2580:51;-1:-1:-1;2657:9:3;;2669:2;;-1:-1:-1;1879:802:3;-1:-1:-1;;1879:802:3:o;4888:527::-;4974:7;5006:12;5020:23;5048:8;:16;;;-1:-1:-1;;;;;5048:21:3;5114:8;:17;;;5070:62;;;;;;160:25:5;;148:2;133:18;;14:177;5070:62:3;;;;-1:-1:-1;;5070:62:3;;;;;;;;;;;;;;-1:-1:-1;;;;;5070:62:3;-1:-1:-1;;;5070:62:3;;;5048:85;;;5070:62;5048:85;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5005:128;;;;5152:7;5143:50;;;;-1:-1:-1;;;5143:50:3;;6389:2:5;5143:50:3;;;6371:21:5;6428:2;6408:18;;;6401:30;6467:31;6447:18;;;6440:59;6516:18;;5143:50:3;6187:353:5;5143:50:3;5256:4;-1:-1:-1;;;;;5211:50:3;5222:10;5211:33;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5211:50:3;;5203:100;;;;-1:-1:-1;;;5203:100:3;;7011:2:5;5203:100:3;;;6993:21:5;7050:2;7030:18;;;7023:30;7089:34;7069:18;;;7062:62;-1:-1:-1;;;7140:18:5;;;7133:35;7185:19;;5203:100:3;6809:401:5;5203:100:3;-1:-1:-1;5374:4:3;;4888:527;-1:-1:-1;;;4888:527:3:o;245:160:2:-;303:9;337:1;332;:6;;324:37;;;;-1:-1:-1;;;324:37:2;;7417:2:5;324:37:2;;;7399:21:5;7456:2;7436:18;;;7429:30;-1:-1:-1;;;7475:18:5;;;7468:48;7533:18;;324:37:2;7215:342:5;324:37:2;375:5;379:1;375;:5;:::i;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;196:131:5:-;-1:-1:-1;;;;;271:31:5;;261:42;;251:70;;317:1;314;307:12;251:70;196:131;:::o;332:247::-;391:6;444:2;432:9;423:7;419:23;415:32;412:52;;;460:1;457;450:12;412:52;499:9;486:23;518:31;543:5;518:31;:::i;1016:349::-;1083:4;1077:11;;;1115:17;;1162:18;1147:34;;1183:22;;;1144:62;1141:185;;;1248:10;1243:3;1239:20;1236:1;1229:31;1283:4;1280:1;1273:15;1311:4;1308:1;1301:15;1141:185;1342:4;1335:24;1016:349;:::o;1370:1023::-;1504:6;1512;1520;1564:9;1555:7;1551:23;1594:3;1590:2;1586:12;1583:32;;;1611:1;1608;1601:12;1583:32;1650:9;1637:23;1689:1;1682:5;1679:12;1669:40;;1705:1;1702;1695:12;1669:40;1728:5;-1:-1:-1;1767:4:5;-1:-1:-1;;1749:16:5;;1745:27;1742:47;;;1785:1;1782;1775:12;1742:47;1813:17;;:::i;:::-;1882:2;1871:9;1867:18;1854:32;1895:33;1920:7;1895:33;:::i;:::-;1937:24;;2023:4;2008:20;;;1995:34;1990:2;1977:16;;1970:60;1944:7;;-1:-1:-1;;;2072:16:5;;2068:27;2065:47;;;2108:1;2105;2098:12;2065:47;;2136:17;;:::i;:::-;2205:2;2194:9;2190:18;2177:32;2240:1;2231:7;2228:14;2218:42;;2256:1;2253;2246:12;2218:42;2269:24;;2355:3;2340:19;;;;2327:33;2322:2;2309:16;;2302:59;-1:-1:-1;1370:1023:5;;;;-1:-1:-1;1370:1023:5:o;2398:127::-;2459:10;2454:3;2450:20;2447:1;2440:31;2490:4;2487:1;2480:15;2514:4;2511:1;2504:15;3786:127;3847:10;3842:3;3838:20;3835:1;3828:31;3878:4;3875:1;3868:15;3902:4;3899:1;3892:15;4261:127;4322:10;4317:3;4313:20;4310:1;4303:31;4353:4;4350:1;4343:15;4377:4;4374:1;4367:15;4393:128;4433:3;4464:1;4460:6;4457:1;4454:13;4451:39;;;4470:18;;:::i;:::-;-1:-1:-1;4506:9:5;;4393:128::o;5149:127::-;5210:10;5205:3;5201:20;5198:1;5191:31;5241:4;5238:1;5231:15;5265:4;5262:1;5255:15;5281:338;5357:6;5365;5418:2;5406:9;5397:7;5393:23;5389:32;5386:52;;;5434:1;5431;5424:12;5386:52;5463:9;5457:16;5447:26;;5516:2;5505:9;5501:18;5495:25;5563:5;5556:13;5549:21;5542:5;5539:32;5529:60;;5585:1;5582;5575:12;5529:60;5608:5;5598:15;;;5281:338;;;;;:::o;5624:127::-;5685:10;5680:3;5676:20;5673:1;5666:31;5716:4;5713:1;5706:15;5740:4;5737:1;5730:15;5756:426;5885:3;5923:6;5917:13;5948:1;5958:129;5972:6;5969:1;5966:13;5958:129;;;6070:4;6054:14;;;6050:25;;6044:32;6031:11;;;6024:53;5987:12;5958:129;;;6105:6;6102:1;6099:13;6096:48;;;6140:1;6131:6;6126:3;6122:16;6115:27;6096:48;-1:-1:-1;6160:16:5;;;;;5756:426;-1:-1:-1;;5756:426:5:o;6545:259::-;6623:6;6676:2;6664:9;6655:7;6651:23;6647:32;6644:52;;;6692:1;6689;6682:12;6644:52;6724:9;6718:16;6743:31;6768:5;6743:31;:::i;7562:125::-;7602:4;7630:1;7627;7624:8;7621:34;;;7635:18;;:::i;:::-;-1:-1:-1;7672:9:5;;7562:125::o",
  "language": "Solidity",
  "natspec": {
    "author": "Hileamlak Yitayew",
    "details": "Uses the Swip3Customer iterface to create Swip3 customer contracts",
    "errors": {
      "unimplemented_service()": [
        {
          "notice": "Feature isn't yet implemented"
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "initateContract(uint8,(address,uint256),(uint8,uint256))": {
        "details": "Puts asset in escrow and depending on that calculates credit",
        "notice": "Creates a contract between swip3 protocol and user",
        "params": {
          "asset_type": "the staked asset, either nft or coin",
          "coin_data": "if the staked asset is coin this infromation should be filled",
          "nft_data": "if the staked asset is nft this infomation should be filled"
        },
        "returns": {
          "_0": "returns contract address"
        }
      }
    },
    "notice": "Creates Swip3contracts between users and iself",
    "title": "Swip3",
    "version": 1
  },
  "offset": [
    421,
    5952
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x56 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA334BFD EQ PUSH2 0x5F JUMPI DUP1 PUSH4 0x818579EF EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0xC8B5EC1E EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xD59FFCCD EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xF9AA9E06 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0xFAB6CF59 EQ PUSH2 0x120 JUMPI STOP JUMPDEST CALLDATASIZE PUSH2 0x5D JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x75 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x75 PUSH2 0xA3 CALLDATASIZE PUSH1 0x4 PUSH2 0x89D JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0xD5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x7F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0xD5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xD5 PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x8F1 JUMP JUMPDEST PUSH2 0x135 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D PUSH2 0x321 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x14B JUMPI PUSH2 0x14B PUSH2 0x991 JUMP JUMPDEST SUB PUSH2 0x2DE JUMPI PUSH1 0x1 DUP3 MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x165 JUMPI PUSH2 0x165 PUSH2 0x991 JUMP JUMPDEST SUB PUSH2 0x2C5 JUMPI CALLVALUE PUSH1 0x14 PUSH1 0x0 PUSH2 0x17C TIMESTAMP PUSH3 0x278D00 PUSH2 0x3E1 JUMP JUMPDEST ADDRESS CALLER DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x18C SWAP1 PUSH2 0x86B JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x1D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x1E0 DUP4 PUSH2 0x437 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xCA11BE69 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE SWAP3 SWAP5 POP SWAP1 SWAP3 POP SWAP1 DUP5 AND SWAP1 PUSH4 0xCA11BE69 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x245 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP2 DUP2 MSTORE PUSH1 0x18 DUP2 DUP4 ADD MSTORE PUSH32 0x5573657220636F6E747261637420637265617465642061740000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH32 0xB758E6C0D2C9AECA50F129AFC686C8AE28726E41C3DF2AF4A0EC5CA15DCC70C5 SWAP4 POP SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP2 POP LOG1 DUP3 SWAP6 POP POP POP POP POP POP PUSH2 0x31A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2EFA81B PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2F2 JUMPI PUSH2 0x2F2 PUSH2 0x991 JUMP JUMPDEST SUB PUSH2 0x2C5 JUMPI PUSH2 0x300 DUP4 PUSH2 0x69A JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x2EFA81B PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x3 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0x346 JUMPI PUSH2 0x346 PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x39E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x11D85D19481B9BDD081BDDDB9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP3 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3ED DUP3 DUP5 PUSH2 0x9D3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x431 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1059191A5D1A5BDB8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x395 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SUB PUSH2 0x590 JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x465 SWAP1 PUSH2 0x878 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x495 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE PUSH1 0x0 DUP4 SWAP1 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE SWAP1 SLOAD SWAP2 SWAP3 POP PUSH2 0x4F2 SWAP2 SWAP1 PUSH2 0x81A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x3 SLOAD PUSH1 0x4 SWAP1 PUSH2 0x51C SWAP1 PUSH1 0x1 PUSH2 0x81A JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 KECCAK256 ADD SSTORE SLOAD PUSH1 0x40 MLOAD PUSH4 0x1E23271D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x1E23271D SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x58A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SUB PUSH2 0x5A2 JUMPI PUSH2 0x5A2 PUSH2 0x9EB JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 PUSH2 0x5B7 SWAP1 PUSH1 0x1 PUSH2 0x81A JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x5C7 JUMPI PUSH2 0x5C7 PUSH2 0x9A7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x5E2 JUMPI PUSH2 0x5E2 PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x18BAA4F9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP3 POP DUP2 SWAP1 DUP4 SWAP1 PUSH4 0x317549F2 SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x63A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x65E SWAP2 SWAP1 PUSH2 0xA01 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 PUSH2 0x68F JUMPI PUSH1 0x4 DUP1 SLOAD DUP1 PUSH2 0x678 JUMPI PUSH2 0x678 PUSH2 0xA36 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE JUMPDEST POP SWAP1 SWAP5 SWAP1 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x6C4 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x31A9108F PUSH1 0xE1 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x6F9 SWAP2 SWAP1 PUSH2 0xA4C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x736 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x73B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x78D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E465420636F6E7472616374206861736E277420726573706F6E646564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x395 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x7AB SWAP2 SWAP1 PUSH2 0xA87 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x80F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E4654206E6F74207472616E7366657272656420746F20736D61727420636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1D1C9858DD PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x395 JUMP JUMPDEST POP PUSH2 0x3E8 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x861 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x14DD589CDD1C9858DD1A5BDB8819985A5B19 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x395 JUMP JUMPDEST PUSH2 0x31A DUP3 DUP5 PUSH2 0xAA4 JUMP JUMPDEST PUSH2 0xC11 DUP1 PUSH2 0xABC DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH2 0x9C7 DUP1 PUSH2 0x16CD DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x89A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x31A DUP2 PUSH2 0x885 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x8EB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP6 SUB PUSH1 0xA0 DUP2 SLT ISZERO PUSH2 0x907 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0x916 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 POP PUSH1 0x40 PUSH1 0x1F NOT DUP3 ADD SLT ISZERO PUSH2 0x92A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x932 PUSH2 0x8BA JUMP JUMPDEST PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x940 DUP2 PUSH2 0x885 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x40 DUP7 DUP2 ADD CALLDATALOAD PUSH1 0x20 DUP4 ADD MSTORE SWAP1 SWAP4 POP PUSH1 0x5F NOT DUP3 ADD SLT ISZERO PUSH2 0x960 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x969 PUSH2 0x8BA JUMP JUMPDEST PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x97B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x80 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD PUSH1 0x20 DUP6 ADD MSTORE POP SWAP1 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x9E6 JUMPI PUSH2 0x9E6 PUSH2 0x9BD JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD SWAP2 POP PUSH1 0x20 DUP4 ADD MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xA2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA6D JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0xA53 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xA7C JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x31A DUP2 PUSH2 0x885 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xAB6 JUMPI PUSH2 0xAB6 PUSH2 0x9BD JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xC11 CODESIZE SUB DUP1 PUSH2 0xC11 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x10F JUMP JUMPDEST PUSH32 0xA224651DB1C118154A1C45F82025442A97ACADB5DB9E887D7098AA23E98FA10D PUSH1 0x40 MLOAD PUSH2 0x8E SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x41206368696C64206A757374206F70656E656420697473206579657300000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP6 SWAP1 SWAP5 AND SWAP5 AND SWAP4 SWAP1 SWAP4 OR DUP3 SSTORE PUSH1 0x2 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x6 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0xA SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xC DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH2 0x15E JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 MLOAD SWAP5 POP PUSH2 0x137 PUSH1 0x20 DUP8 ADD PUSH2 0xF3 JUMP JUMPDEST SWAP4 POP PUSH2 0x145 PUSH1 0x40 DUP8 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x80 SWAP1 SWAP8 ADD MLOAD SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xAA4 DUP1 PUSH2 0x16D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9F0C592E GT PUSH2 0x61 JUMPI DUP1 PUSH4 0x9F0C592E EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0xA6601F2E EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0xAE0ABA8C EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0xC19D93FB EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0xCA11BE69 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0xD12ABD8A EQ PUSH2 0x102 JUMPI STOP JUMPDEST DUP1 PUSH4 0x7CC692F EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0xC08BF88 EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0x3B7104F2 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x78706079 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x804D6B38 EQ PUSH2 0x102 JUMPI STOP JUMPDEST CALLDATASIZE PUSH2 0xA1 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB8 PUSH2 0x1AB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA1 PUSH2 0x1C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB8 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA1 PUSH2 0x3A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x137 PUSH2 0x132 CALLDATASIZE PUSH1 0x4 PUSH2 0x92F JUMP JUMPDEST PUSH2 0x459 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x153 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA1 PUSH2 0x611 JUMP JUMPDEST PUSH2 0xA1 PUSH2 0x6DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x17E SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC2 SWAP2 SWAP1 PUSH2 0x97D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA1 PUSH2 0x1A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x92F JUMP JUMPDEST PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C4 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH2 0x88E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x1EC JUMPI POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x211 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x208 SWAP1 PUSH2 0x9A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x22A JUMPI PUSH2 0x22A PUSH2 0x967 JUMP JUMPDEST EQ DUP1 PUSH2 0x237 JUMPI POP PUSH1 0x2 SLOAD TIMESTAMP GT JUMPDEST ISZERO PUSH2 0x269 JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0xFF NOT AND DUP3 DUP1 JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH4 0x407B05B PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x282 JUMPI PUSH2 0x282 PUSH2 0x967 JUMP JUMPDEST EQ PUSH2 0x29F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x208 SWAP1 PUSH2 0x9D0 JUMP JUMPDEST PUSH1 0x7 SLOAD ISZERO PUSH2 0x303 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42616C616E6365206D7573742062652030206265666F7265207465726D69616E PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1D1A5B99C818481919585B PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x208 JUMP JUMPDEST PUSH1 0xB SLOAD ISZERO PUSH2 0x36C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865726520697320756E77697468647261776D206D6F6E65792E2057697468 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x6472617720796F7572206D6F6E657921 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x208 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x6D0D90585834980BD0E5603341FF50B06349C11E0BF9241D03F6D065F12A262B SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x3C9 JUMPI POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x3E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x208 SWAP1 PUSH2 0x9A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3FE JUMPI PUSH2 0x3FE PUSH2 0x967 JUMP JUMPDEST EQ DUP1 PUSH2 0x40B JUMPI POP PUSH1 0x2 SLOAD TIMESTAMP GT JUMPDEST ISZERO PUSH2 0x423 JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0xFF NOT AND DUP3 DUP1 PUSH2 0x24B JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x43C JUMPI PUSH2 0x43C PUSH2 0x967 JUMP JUMPDEST EQ PUSH2 0x3A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x208 SWAP1 PUSH2 0x9D0 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x47D JUMPI POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x499 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x208 SWAP1 PUSH2 0x9A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4B2 JUMPI PUSH2 0x4B2 PUSH2 0x967 JUMP JUMPDEST EQ DUP1 PUSH2 0x4BF JUMPI POP PUSH1 0x2 SLOAD TIMESTAMP GT JUMPDEST ISZERO PUSH2 0x4D7 JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0xFF NOT AND DUP3 DUP1 PUSH2 0x24B JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4F0 JUMPI PUSH2 0x4F0 PUSH2 0x967 JUMP JUMPDEST EQ PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x208 SWAP1 PUSH2 0x9D0 JUMP JUMPDEST PUSH2 0x515 PUSH2 0x1AB JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x56F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20617661696C61626C652063726564697420666F72207468697320637963 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6C65 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x208 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xBC134AE3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0xBC134AE3 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5EF SWAP2 SWAP1 PUSH2 0xA07 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x608 JUMPI PUSH1 0x7 SLOAD PUSH2 0x604 SWAP1 DUP5 PUSH2 0x8DF JUMP JUMPDEST PUSH1 0x7 SSTORE JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x66B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920757365722063616E206163636573732074686973206D6574686F64 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x208 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x684 JUMPI PUSH2 0x684 PUSH2 0x967 JUMP JUMPDEST EQ PUSH2 0x6A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x208 SWAP1 PUSH2 0x9D0 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 CALLER SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x737 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920757365722063616E206163636573732074686973206D6574686F64 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x208 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x750 JUMPI PUSH2 0x750 PUSH2 0x967 JUMP JUMPDEST EQ PUSH2 0x76D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x208 SWAP1 PUSH2 0x9D0 JUMP JUMPDEST PUSH1 0x7 SLOAD CALLVALUE GT ISZERO PUSH2 0x78F JUMPI PUSH1 0x7 SLOAD PUSH2 0x785 SWAP1 CALLVALUE SWAP1 PUSH2 0x88E JUMP JUMPDEST PUSH1 0xB SSTORE PUSH1 0x0 PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x79C SWAP1 CALLVALUE PUSH2 0x88E JUMP JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x806 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920706172656E742063616E206163636573732074686973206D657468 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1BD9 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x208 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x2 PUSH1 0xFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x1248185B481B9BDDC81858DD1A5D985D1959 PUSH1 0x72 SHL DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0xA224651DB1C118154A1C45F82025442A97ACADB5DB9E887D7098AA23E98FA10D SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x8D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x14DD589CDD1C9858DD1A5BDB8819985A5B19 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x208 JUMP JUMPDEST PUSH2 0x608 DUP3 DUP5 PUSH2 0xA3F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EB DUP3 DUP5 PUSH2 0xA56 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x60B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1059191A5D1A5BDB8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x208 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x942 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x959 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x4 DUP4 LT PUSH2 0x99F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x2AB730BABA3437B934BD32B2103AB9B2B9 PUSH1 0x79 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x436F6E74726163742073746174652069736E2774206163746976650000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x608 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xA51 JUMPI PUSH2 0xA51 PUSH2 0xA29 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xA69 JUMPI PUSH2 0xA69 PUSH2 0xA29 JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 0xDD SELFDESTRUCT LOG0 SELFBALANCE 0xDD SWAP16 OR PUSH22 0xB20910C53521B01323D26752C5E1A54702224BFB4110 0xBE PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x9C7 CODESIZE SUB DUP1 PUSH2 0x9C7 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xD5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR DUP4 SSTORE PUSH1 0x3 DUP6 SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x4C656E64696E6720706F6F6C2067617465206372656174656420627900000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x2CCE1494B4EF3C5682648D5C4BBF147548F403FC2AC218E41EC797BABDB0ACB5 SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH2 0x112 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x8A6 DUP1 PUSH2 0x121 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAC446002 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xAC446002 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0xBC134AE3 EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0xCBC20F30 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0xF984EAD8 EQ PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x317549F2 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x89F78C8E EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x9DC61D4F EQ PUSH2 0xC6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x726 JUMP JUMPDEST PUSH2 0x144 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB8 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xD9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA6 JUMP JUMPDEST PUSH2 0xF9 PUSH2 0x37E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10E PUSH2 0x109 CALLDATASIZE PUSH1 0x4 PUSH2 0x741 JUMP JUMPDEST PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA6 JUMP JUMPDEST PUSH2 0xF9 PUSH2 0x12C CALLDATASIZE PUSH1 0x4 PUSH2 0x776 JUMP JUMPDEST PUSH2 0x554 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xD9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x17A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x171 SWAP1 PUSH2 0x78F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD LT DUP1 PUSH2 0x18D JUMPI POP PUSH1 0x2 SLOAD ISZERO ISZERO JUMPDEST PUSH2 0x1CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x15DA1A5D19481B1A5CDD081A5CC8199D5B1B PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x171 JUMP JUMPDEST PUSH1 0x2 SLOAD ISZERO PUSH2 0x2C7 JUMPI PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 SWAP2 SWAP1 PUSH2 0x1E9 SWAP1 PUSH1 0x1 PUSH2 0x6B2 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1F9 JUMPI PUSH2 0x1F9 PUSH2 0x7DC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP4 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x21A JUMPI PUSH2 0x21A PUSH2 0x7DC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP1 SLOAD DUP1 PUSH2 0x259 JUMPI PUSH2 0x259 PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE PUSH32 0x2CCE1494B4EF3C5682648D5C4BBF147548F403FC2AC218E41EC797BABDB0ACB5 DUP5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x2A0 SWAP3 SWAP2 SWAP1 PUSH2 0x808 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD DUP3 SWAP2 GT DUP1 PUSH2 0x2BD JUMPI POP PUSH1 0x2 SLOAD ISZERO ISZERO JUMPDEST SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH1 0x0 DUP3 SWAP1 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE DUP1 SLOAD PUSH32 0x2CCE1494B4EF3C5682648D5C4BBF147548F403FC2AC218E41EC797BABDB0ACB5 SWAP2 DUP6 SWAP2 PUSH2 0x33F SWAP2 PUSH2 0x6B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34D SWAP3 SWAP2 SWAP1 PUSH2 0x808 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP1 SLOAD PUSH2 0x362 SWAP2 PUSH2 0x6B2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD LT DUP1 PUSH2 0x375 JUMPI POP PUSH1 0x2 SLOAD ISZERO ISZERO JUMPDEST SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD SWAP1 DUP4 SWAP1 SSTORE SWAP1 MLOAD SWAP1 SWAP3 SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3F4 JUMPI PUSH2 0x3F4 PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x449 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x11195B195D19590810DBDB9D1C9858DD PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x171 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x45C JUMPI PUSH2 0x45C PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536D61727420636F6E7472616374206E6F7420616C6C6F77656420746F207769 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746864726177206D6F6E6579207468726F756768742074686973206761746500 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x171 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3607999B PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x24 DUP5 ADD MSTORE AND SWAP1 PUSH4 0x3607999B SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x545 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x57E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x171 SWAP1 PUSH2 0x78F JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 LT PUSH2 0x5C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x151BDAD95B881B9BDD0818DC99585D1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x171 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5E1 JUMPI PUSH2 0x5E1 PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x643 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6163636F756E7420616C72656164792064656C65746564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x171 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x658 JUMPI PUSH2 0x658 PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP2 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x6F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x14DD589CDD1C9858DD1A5BDB8819985A5B19 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x171 JUMP JUMPDEST PUSH2 0x703 DUP3 DUP5 PUSH2 0x84B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x721 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x738 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x703 DUP3 PUSH2 0x70A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x756 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x766 PUSH1 0x20 DUP6 ADD PUSH2 0x70A JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x788 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206372656174696E6720636F6E74726163742063616E2063616C6C20 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x3A3434B990333AB731BA34B7B7 PUSH1 0x99 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x1059191959081D1BC81DDA1A5D19481B1A5CDD PUSH1 0x6A SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x86B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL 0xD4 SWAP13 0xCE DUP9 0xC6 PUSH8 0xD812898CECDA62F SWAP14 0x24 MSTORE8 0xC2 STOP 0xF7 0xBE 0x4A OR JUMPI EXTCODEHASH SGT 0xAE LOG4 PUSH27 0x526264736F6C634300080D0033A2646970667358221220AA05B13B 0xD3 SHR 0x1F 0x2A PUSH17 0xB190B0CC56AD70738B9AE536FFA2072833 LOG3 SDIV CALLDATACOPY SDIV DUP2 0x1E PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        421,
        5952
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "LT",
      "path": "3"
    },
    "9": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x56"
    },
    "12": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "13": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "SHR",
      "path": "3"
    },
    "19": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "DUP1",
      "path": "3"
    },
    "20": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA334BFD"
    },
    "25": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "EQ",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5F"
    },
    "29": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "30": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "DUP1",
      "path": "3"
    },
    "31": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x818579EF"
    },
    "36": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "EQ",
      "path": "3"
    },
    "37": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x88"
    },
    "40": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "41": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "DUP1",
      "path": "3"
    },
    "42": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xC8B5EC1E"
    },
    "47": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "EQ",
      "path": "3"
    },
    "48": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB5"
    },
    "51": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "52": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "DUP1",
      "path": "3"
    },
    "53": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xD59FFCCD"
    },
    "58": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "EQ",
      "path": "3"
    },
    "59": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xED"
    },
    "62": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "63": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "DUP1",
      "path": "3"
    },
    "64": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF9AA9E06"
    },
    "69": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "EQ",
      "path": "3"
    },
    "70": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10D"
    },
    "73": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "74": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "DUP1",
      "path": "3"
    },
    "75": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFAB6CF59"
    },
    "80": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "EQ",
      "path": "3"
    },
    "81": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x120"
    },
    "84": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "85": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "STOP",
      "path": "3"
    },
    "86": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "87": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "88": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5D"
    },
    "91": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "92": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "STOP",
      "path": "3"
    },
    "93": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "94": {
      "fn": null,
      "offset": [
        421,
        5952
      ],
      "op": "STOP",
      "path": "3"
    },
    "95": {
      "offset": [
        559,
        588
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "96": {
      "fn": null,
      "offset": [
        559,
        588
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "97": {
      "fn": null,
      "offset": [
        559,
        588
      ],
      "op": "DUP1",
      "path": "3"
    },
    "98": {
      "fn": null,
      "offset": [
        559,
        588
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "99": {
      "fn": null,
      "offset": [
        559,
        588
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6B"
    },
    "102": {
      "fn": null,
      "offset": [
        559,
        588
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "103": {
      "fn": null,
      "offset": [
        559,
        588
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "105": {
      "fn": null,
      "offset": [
        559,
        588
      ],
      "op": "DUP1",
      "path": "3"
    },
    "106": {
      "fn": null,
      "offset": [
        559,
        588
      ],
      "op": "REVERT",
      "path": "3"
    },
    "107": {
      "fn": null,
      "offset": [
        559,
        588
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "108": {
      "fn": null,
      "offset": [
        559,
        588
      ],
      "op": "POP",
      "path": "3"
    },
    "109": {
      "fn": null,
      "offset": [
        559,
        588
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x75"
    },
    "112": {
      "fn": null,
      "offset": [
        559,
        588
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "114": {
      "fn": null,
      "offset": [
        559,
        588
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "115": {
      "fn": null,
      "offset": [
        559,
        588
      ],
      "op": "DUP2",
      "path": "3"
    },
    "116": {
      "fn": null,
      "offset": [
        559,
        588
      ],
      "op": "JUMP",
      "path": "3"
    },
    "117": {
      "fn": null,
      "offset": [
        559,
        588
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "118": {
      "fn": null,
      "offset": [
        559,
        588
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "120": {
      "fn": null,
      "offset": [
        559,
        588
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "121": {
      "op": "SWAP1"
    },
    "122": {
      "op": "DUP2"
    },
    "123": {
      "op": "MSTORE"
    },
    "124": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "126": {
      "op": "ADD"
    },
    "127": {
      "offset": [
        559,
        588
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "128": {
      "fn": null,
      "offset": [
        559,
        588
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "130": {
      "fn": null,
      "offset": [
        559,
        588
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "131": {
      "fn": null,
      "offset": [
        559,
        588
      ],
      "op": "DUP1",
      "path": "3"
    },
    "132": {
      "fn": null,
      "offset": [
        559,
        588
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "133": {
      "fn": null,
      "offset": [
        559,
        588
      ],
      "op": "SUB",
      "path": "3"
    },
    "134": {
      "fn": null,
      "offset": [
        559,
        588
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "135": {
      "fn": null,
      "offset": [
        559,
        588
      ],
      "op": "RETURN",
      "path": "3"
    },
    "136": {
      "offset": [
        659,
        702
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "137": {
      "fn": null,
      "offset": [
        659,
        702
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "138": {
      "fn": null,
      "offset": [
        659,
        702
      ],
      "op": "DUP1",
      "path": "3"
    },
    "139": {
      "fn": null,
      "offset": [
        659,
        702
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "140": {
      "fn": null,
      "offset": [
        659,
        702
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x94"
    },
    "143": {
      "fn": null,
      "offset": [
        659,
        702
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "144": {
      "fn": null,
      "offset": [
        659,
        702
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "146": {
      "fn": null,
      "offset": [
        659,
        702
      ],
      "op": "DUP1",
      "path": "3"
    },
    "147": {
      "fn": null,
      "offset": [
        659,
        702
      ],
      "op": "REVERT",
      "path": "3"
    },
    "148": {
      "fn": null,
      "offset": [
        659,
        702
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "149": {
      "op": "POP"
    },
    "150": {
      "offset": [
        659,
        702
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x75"
    },
    "153": {
      "fn": null,
      "offset": [
        659,
        702
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA3"
    },
    "156": {
      "fn": null,
      "offset": [
        659,
        702
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "157": {
      "fn": null,
      "offset": [
        659,
        702
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "159": {
      "fn": null,
      "offset": [
        659,
        702
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x89D"
    },
    "162": {
      "fn": null,
      "jump": "i",
      "offset": [
        659,
        702
      ],
      "op": "JUMP",
      "path": "3"
    },
    "163": {
      "fn": null,
      "offset": [
        659,
        702
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "164": {
      "fn": null,
      "offset": [
        659,
        702
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "166": {
      "fn": null,
      "offset": [
        659,
        702
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "168": {
      "fn": null,
      "offset": [
        659,
        702
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "169": {
      "fn": null,
      "offset": [
        659,
        702
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "171": {
      "fn": null,
      "offset": [
        659,
        702
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "172": {
      "fn": null,
      "offset": [
        659,
        702
      ],
      "op": "DUP2",
      "path": "3"
    },
    "173": {
      "fn": null,
      "offset": [
        659,
        702
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "174": {
      "fn": null,
      "offset": [
        659,
        702
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "176": {
      "fn": null,
      "offset": [
        659,
        702
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "177": {
      "fn": null,
      "offset": [
        659,
        702
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "178": {
      "fn": null,
      "offset": [
        659,
        702
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "179": {
      "fn": null,
      "offset": [
        659,
        702
      ],
      "op": "DUP2",
      "path": "3"
    },
    "180": {
      "fn": null,
      "offset": [
        659,
        702
      ],
      "op": "JUMP",
      "path": "3"
    },
    "181": {
      "offset": [
        518,
        553
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "182": {
      "fn": null,
      "offset": [
        518,
        553
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "183": {
      "fn": null,
      "offset": [
        518,
        553
      ],
      "op": "DUP1",
      "path": "3"
    },
    "184": {
      "fn": null,
      "offset": [
        518,
        553
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "185": {
      "fn": null,
      "offset": [
        518,
        553
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC1"
    },
    "188": {
      "fn": null,
      "offset": [
        518,
        553
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "189": {
      "fn": null,
      "offset": [
        518,
        553
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "191": {
      "fn": null,
      "offset": [
        518,
        553
      ],
      "op": "DUP1",
      "path": "3"
    },
    "192": {
      "fn": null,
      "offset": [
        518,
        553
      ],
      "op": "REVERT",
      "path": "3"
    },
    "193": {
      "fn": null,
      "offset": [
        518,
        553
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "194": {
      "op": "POP"
    },
    "195": {
      "offset": [
        518,
        553
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "197": {
      "fn": null,
      "offset": [
        518,
        553
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "198": {
      "fn": null,
      "offset": [
        518,
        553
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD5"
    },
    "201": {
      "fn": null,
      "offset": [
        518,
        553
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "206": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "208": {
      "op": "SHL"
    },
    "209": {
      "op": "SUB"
    },
    "210": {
      "offset": [
        518,
        553
      ],
      "op": "AND",
      "path": "3"
    },
    "211": {
      "fn": null,
      "offset": [
        518,
        553
      ],
      "op": "DUP2",
      "path": "3"
    },
    "212": {
      "fn": null,
      "offset": [
        518,
        553
      ],
      "op": "JUMP",
      "path": "3"
    },
    "213": {
      "fn": null,
      "offset": [
        518,
        553
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "214": {
      "fn": null,
      "offset": [
        518,
        553
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "216": {
      "fn": null,
      "offset": [
        518,
        553
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "221": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "223": {
      "op": "SHL"
    },
    "224": {
      "op": "SUB"
    },
    "225": {
      "op": "SWAP1"
    },
    "226": {
      "op": "SWAP2"
    },
    "227": {
      "op": "AND"
    },
    "228": {
      "op": "DUP2"
    },
    "229": {
      "op": "MSTORE"
    },
    "230": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "232": {
      "op": "ADD"
    },
    "233": {
      "offset": [
        518,
        553
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7F"
    },
    "236": {
      "op": "JUMP"
    },
    "237": {
      "offset": [
        475,
        512
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "238": {
      "fn": null,
      "offset": [
        475,
        512
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "239": {
      "fn": null,
      "offset": [
        475,
        512
      ],
      "op": "DUP1",
      "path": "3"
    },
    "240": {
      "fn": null,
      "offset": [
        475,
        512
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "241": {
      "fn": null,
      "offset": [
        475,
        512
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF9"
    },
    "244": {
      "fn": null,
      "offset": [
        475,
        512
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "245": {
      "fn": null,
      "offset": [
        475,
        512
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "247": {
      "fn": null,
      "offset": [
        475,
        512
      ],
      "op": "DUP1",
      "path": "3"
    },
    "248": {
      "fn": null,
      "offset": [
        475,
        512
      ],
      "op": "REVERT",
      "path": "3"
    },
    "249": {
      "fn": null,
      "offset": [
        475,
        512
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "250": {
      "op": "POP"
    },
    "251": {
      "offset": [
        475,
        512
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "253": {
      "fn": null,
      "offset": [
        475,
        512
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "254": {
      "fn": null,
      "offset": [
        475,
        512
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD5"
    },
    "257": {
      "fn": null,
      "offset": [
        475,
        512
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "262": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "264": {
      "op": "SHL"
    },
    "265": {
      "op": "SUB"
    },
    "266": {
      "offset": [
        475,
        512
      ],
      "op": "AND",
      "path": "3"
    },
    "267": {
      "fn": null,
      "offset": [
        475,
        512
      ],
      "op": "DUP2",
      "path": "3"
    },
    "268": {
      "fn": null,
      "offset": [
        475,
        512
      ],
      "op": "JUMP",
      "path": "3"
    },
    "269": {
      "fn": "Swip3.initateContract",
      "offset": [
        3104,
        4882
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "270": {
      "fn": "Swip3.initateContract",
      "offset": [
        3104,
        4882
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD5"
    },
    "273": {
      "fn": "Swip3.initateContract",
      "offset": [
        3104,
        4882
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11B"
    },
    "276": {
      "fn": "Swip3.initateContract",
      "offset": [
        3104,
        4882
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "277": {
      "fn": "Swip3.initateContract",
      "offset": [
        3104,
        4882
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "279": {
      "fn": "Swip3.initateContract",
      "offset": [
        3104,
        4882
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8F1"
    },
    "282": {
      "fn": "Swip3.initateContract",
      "jump": "i",
      "offset": [
        3104,
        4882
      ],
      "op": "JUMP",
      "path": "3"
    },
    "283": {
      "fn": "Swip3.initateContract",
      "offset": [
        3104,
        4882
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "284": {
      "fn": "Swip3.initateContract",
      "offset": [
        3104,
        4882
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x135"
    },
    "287": {
      "fn": "Swip3.initateContract",
      "jump": "i",
      "offset": [
        3104,
        4882
      ],
      "op": "JUMP",
      "path": "3"
    },
    "288": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5754,
        5858
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "289": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5754,
        5858
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "290": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5754,
        5858
      ],
      "op": "DUP1",
      "path": "3"
    },
    "291": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5754,
        5858
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "292": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5754,
        5858
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12C"
    },
    "295": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5754,
        5858
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "296": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5754,
        5858
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "298": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5754,
        5858
      ],
      "op": "DUP1",
      "path": "3"
    },
    "299": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5754,
        5858
      ],
      "op": "REVERT",
      "path": "3"
    },
    "300": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5754,
        5858
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "301": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5754,
        5858
      ],
      "op": "POP",
      "path": "3"
    },
    "302": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5754,
        5858
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5D"
    },
    "305": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5754,
        5858
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x321"
    },
    "308": {
      "fn": "Swip3.updateGateState",
      "jump": "i",
      "offset": [
        5754,
        5858
      ],
      "op": "JUMP",
      "path": "3"
    },
    "309": {
      "fn": "Swip3.initateContract",
      "offset": [
        3104,
        4882
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "310": {
      "fn": "Swip3.initateContract",
      "offset": [
        3280,
        3287
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "312": {
      "fn": "Swip3.initateContract",
      "offset": [
        3321,
        3332
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "314": {
      "fn": "Swip3.initateContract",
      "offset": [
        3307,
        3317
      ],
      "op": "DUP5",
      "path": "3"
    },
    "315": {
      "fn": "Swip3.initateContract",
      "offset": [
        3307,
        3332
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "317": {
      "fn": "Swip3.initateContract",
      "offset": [
        3307,
        3332
      ],
      "op": "DUP2",
      "path": "3"
    },
    "318": {
      "fn": "Swip3.initateContract",
      "offset": [
        3307,
        3332
      ],
      "op": "GT",
      "path": "3"
    },
    "319": {
      "fn": "Swip3.initateContract",
      "offset": [
        3307,
        3332
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "320": {
      "fn": "Swip3.initateContract",
      "offset": [
        3307,
        3332
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14B"
    },
    "323": {
      "fn": "Swip3.initateContract",
      "offset": [
        3307,
        3332
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "324": {
      "fn": "Swip3.initateContract",
      "offset": [
        3307,
        3332
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14B"
    },
    "327": {
      "fn": "Swip3.initateContract",
      "offset": [
        3307,
        3332
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x991"
    },
    "330": {
      "fn": "Swip3.initateContract",
      "jump": "i",
      "offset": [
        3307,
        3332
      ],
      "op": "JUMP",
      "path": "3"
    },
    "331": {
      "fn": "Swip3.initateContract",
      "offset": [
        3307,
        3332
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "332": {
      "branch": 18,
      "fn": "Swip3.initateContract",
      "offset": [
        3307,
        3332
      ],
      "op": "SUB",
      "path": "3"
    },
    "333": {
      "fn": "Swip3.initateContract",
      "offset": [
        3303,
        4875
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DE"
    },
    "336": {
      "branch": 18,
      "fn": "Swip3.initateContract",
      "offset": [
        3303,
        4875
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "337": {
      "fn": "Swip3.initateContract",
      "offset": [
        3375,
        3389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "339": {
      "fn": "Swip3.initateContract",
      "offset": [
        3351,
        3370
      ],
      "op": "DUP3",
      "path": "3"
    },
    "340": {
      "fn": "Swip3.initateContract",
      "offset": [
        3351,
        3370
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "341": {
      "fn": "Swip3.initateContract",
      "offset": [
        3351,
        3389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "343": {
      "fn": "Swip3.initateContract",
      "offset": [
        3351,
        3389
      ],
      "op": "DUP2",
      "path": "3"
    },
    "344": {
      "fn": "Swip3.initateContract",
      "offset": [
        3351,
        3389
      ],
      "op": "GT",
      "path": "3"
    },
    "345": {
      "fn": "Swip3.initateContract",
      "offset": [
        3351,
        3389
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "346": {
      "fn": "Swip3.initateContract",
      "offset": [
        3351,
        3389
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x165"
    },
    "349": {
      "fn": "Swip3.initateContract",
      "offset": [
        3351,
        3389
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "350": {
      "fn": "Swip3.initateContract",
      "offset": [
        3351,
        3389
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x165"
    },
    "353": {
      "fn": "Swip3.initateContract",
      "offset": [
        3351,
        3389
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x991"
    },
    "356": {
      "fn": "Swip3.initateContract",
      "jump": "i",
      "offset": [
        3351,
        3389
      ],
      "op": "JUMP",
      "path": "3"
    },
    "357": {
      "fn": "Swip3.initateContract",
      "offset": [
        3351,
        3389
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "358": {
      "branch": 19,
      "fn": "Swip3.initateContract",
      "offset": [
        3351,
        3389
      ],
      "op": "SUB",
      "path": "3"
    },
    "359": {
      "fn": "Swip3.initateContract",
      "offset": [
        3347,
        4537
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C5"
    },
    "362": {
      "branch": 19,
      "fn": "Swip3.initateContract",
      "offset": [
        3347,
        4537
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "363": {
      "fn": "Swip3.evaluateCoinStake",
      "offset": [
        5588,
        5597
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "364": {
      "fn": "Swip3.evaluateCoinStake",
      "offset": [
        5621,
        5623
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x14"
    },
    "366": {
      "fn": "Swip3.initateContract",
      "offset": [
        3493,
        3513
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "368": {
      "fn": "Swip3.initateContract",
      "offset": [
        3728,
        3759
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17C"
    },
    "371": {
      "fn": "Swip3.initateContract",
      "offset": [
        3728,
        3743
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "372": {
      "fn": "Swip3.initateContract",
      "offset": [
        3748,
        3758
      ],
      "op": "PUSH3",
      "path": "3",
      "value": "0x278D00"
    },
    "376": {
      "fn": "Swip3.initateContract",
      "offset": [
        3728,
        3747
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E1"
    },
    "379": {
      "fn": "Swip3.initateContract",
      "jump": "i",
      "offset": [
        3728,
        3759
      ],
      "op": "JUMP",
      "path": "3"
    },
    "380": {
      "fn": "Swip3.initateContract",
      "offset": [
        3728,
        3759
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "381": {
      "fn": "Swip3.initateContract",
      "offset": [
        3822,
        3826
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "382": {
      "fn": "Swip3.initateContract",
      "offset": [
        3882,
        3892
      ],
      "op": "CALLER",
      "path": "3"
    },
    "383": {
      "fn": "Swip3.initateContract",
      "offset": [
        3894,
        3906
      ],
      "op": "DUP6",
      "path": "3"
    },
    "384": {
      "fn": "Swip3.initateContract",
      "offset": [
        3961,
        3964
      ],
      "op": "DUP6",
      "path": "3"
    },
    "385": {
      "fn": "Swip3.initateContract",
      "offset": [
        3710,
        3965
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "387": {
      "fn": "Swip3.initateContract",
      "offset": [
        3710,
        3965
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "388": {
      "fn": "Swip3.initateContract",
      "offset": [
        3710,
        3965
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18C"
    },
    "391": {
      "fn": "Swip3.initateContract",
      "offset": [
        3710,
        3965
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "392": {
      "fn": "Swip3.initateContract",
      "offset": [
        3710,
        3965
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x86B"
    },
    "395": {
      "fn": "Swip3.initateContract",
      "jump": "i",
      "offset": [
        3710,
        3965
      ],
      "op": "JUMP",
      "path": "3"
    },
    "396": {
      "fn": "Swip3.initateContract",
      "offset": [
        3710,
        3965
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "397": {
      "op": "SWAP5"
    },
    "398": {
      "op": "DUP6"
    },
    "399": {
      "op": "MSTORE"
    },
    "400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "404": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "406": {
      "op": "SHL"
    },
    "407": {
      "op": "SUB"
    },
    "408": {
      "op": "SWAP4"
    },
    "409": {
      "op": "DUP5"
    },
    "410": {
      "op": "AND"
    },
    "411": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "413": {
      "op": "DUP7"
    },
    "414": {
      "op": "ADD"
    },
    "415": {
      "op": "MSTORE"
    },
    "416": {
      "op": "SWAP3"
    },
    "417": {
      "op": "SWAP1"
    },
    "418": {
      "op": "SWAP2"
    },
    "419": {
      "op": "AND"
    },
    "420": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "422": {
      "op": "DUP5"
    },
    "423": {
      "op": "ADD"
    },
    "424": {
      "op": "MSTORE"
    },
    "425": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "427": {
      "op": "DUP4"
    },
    "428": {
      "op": "ADD"
    },
    "429": {
      "op": "MSTORE"
    },
    "430": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "432": {
      "op": "DUP3"
    },
    "433": {
      "op": "ADD"
    },
    "434": {
      "op": "MSTORE"
    },
    "435": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "437": {
      "op": "ADD"
    },
    "438": {
      "fn": "Swip3.initateContract",
      "offset": [
        3710,
        3965
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "440": {
      "fn": "Swip3.initateContract",
      "offset": [
        3710,
        3965
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "441": {
      "fn": "Swip3.initateContract",
      "offset": [
        3710,
        3965
      ],
      "op": "DUP1",
      "path": "3"
    },
    "442": {
      "fn": "Swip3.initateContract",
      "offset": [
        3710,
        3965
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "443": {
      "fn": "Swip3.initateContract",
      "offset": [
        3710,
        3965
      ],
      "op": "SUB",
      "path": "3"
    },
    "444": {
      "fn": "Swip3.initateContract",
      "offset": [
        3710,
        3965
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "445": {
      "fn": "Swip3.initateContract",
      "offset": [
        3710,
        3965
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "447": {
      "fn": "Swip3.initateContract",
      "offset": [
        3710,
        3965
      ],
      "op": "CREATE",
      "path": "3"
    },
    "448": {
      "fn": "Swip3.initateContract",
      "offset": [
        3710,
        3965
      ],
      "op": "DUP1",
      "path": "3"
    },
    "449": {
      "fn": "Swip3.initateContract",
      "offset": [
        3710,
        3965
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "450": {
      "fn": "Swip3.initateContract",
      "offset": [
        3710,
        3965
      ],
      "op": "DUP1",
      "path": "3"
    },
    "451": {
      "fn": "Swip3.initateContract",
      "offset": [
        3710,
        3965
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "452": {
      "fn": "Swip3.initateContract",
      "offset": [
        3710,
        3965
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D1"
    },
    "455": {
      "fn": "Swip3.initateContract",
      "offset": [
        3710,
        3965
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "456": {
      "fn": "Swip3.initateContract",
      "offset": [
        3710,
        3965
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "457": {
      "fn": "Swip3.initateContract",
      "offset": [
        3710,
        3965
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "459": {
      "fn": "Swip3.initateContract",
      "offset": [
        3710,
        3965
      ],
      "op": "DUP1",
      "path": "3"
    },
    "460": {
      "fn": "Swip3.initateContract",
      "offset": [
        3710,
        3965
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "461": {
      "fn": "Swip3.initateContract",
      "offset": [
        3710,
        3965
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "462": {
      "fn": "Swip3.initateContract",
      "offset": [
        3710,
        3965
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "464": {
      "fn": "Swip3.initateContract",
      "offset": [
        3710,
        3965
      ],
      "op": "REVERT",
      "path": "3"
    },
    "465": {
      "fn": "Swip3.initateContract",
      "offset": [
        3710,
        3965
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "466": {
      "fn": "Swip3.initateContract",
      "offset": [
        3710,
        3965
      ],
      "op": "POP",
      "path": "3"
    },
    "467": {
      "fn": "Swip3.initateContract",
      "offset": [
        3680,
        3965
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "468": {
      "fn": "Swip3.initateContract",
      "offset": [
        3680,
        3965
      ],
      "op": "POP",
      "path": "3"
    },
    "469": {
      "fn": "Swip3.initateContract",
      "offset": [
        3984,
        3996
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "471": {
      "fn": "Swip3.initateContract",
      "offset": [
        3998,
        4008
      ],
      "op": "DUP1",
      "path": "3"
    },
    "472": {
      "fn": "Swip3.initateContract",
      "offset": [
        4012,
        4056
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E0"
    },
    "475": {
      "fn": "Swip3.initateContract",
      "offset": [
        4041,
        4054
      ],
      "op": "DUP4",
      "path": "3"
    },
    "476": {
      "fn": "Swip3.initateContract",
      "offset": [
        4012,
        4032
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x437"
    },
    "479": {
      "fn": "Swip3.initateContract",
      "jump": "i",
      "offset": [
        4012,
        4056
      ],
      "op": "JUMP",
      "path": "3"
    },
    "480": {
      "fn": "Swip3.initateContract",
      "offset": [
        4012,
        4056
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "481": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 0,
      "value": "0x40"
    },
    "483": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "484": {
      "op": "PUSH4",
      "value": "0xCA11BE69"
    },
    "489": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "491": {
      "op": "SHL"
    },
    "492": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "DUP2",
      "path": "3"
    },
    "493": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "498": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "500": {
      "op": "SHL"
    },
    "501": {
      "op": "SUB"
    },
    "502": {
      "op": "DUP1"
    },
    "503": {
      "op": "DUP5"
    },
    "504": {
      "op": "AND"
    },
    "505": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "507": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "DUP4",
      "path": "3"
    },
    "508": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "ADD",
      "path": "3"
    },
    "509": {
      "op": "MSTORE"
    },
    "510": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "512": {
      "op": "DUP3"
    },
    "513": {
      "op": "ADD"
    },
    "514": {
      "op": "DUP4"
    },
    "515": {
      "op": "SWAP1"
    },
    "516": {
      "op": "MSTORE"
    },
    "517": {
      "fn": "Swip3.initateContract",
      "offset": [
        3983,
        4056
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "518": {
      "fn": "Swip3.initateContract",
      "offset": [
        3983,
        4056
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "519": {
      "op": "POP"
    },
    "520": {
      "fn": "Swip3.initateContract",
      "offset": [
        3983,
        4056
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "521": {
      "fn": "Swip3.initateContract",
      "offset": [
        3983,
        4056
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "522": {
      "op": "POP"
    },
    "523": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4096
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "524": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4096
      ],
      "op": "DUP5",
      "path": "3"
    },
    "525": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4096
      ],
      "op": "AND",
      "path": "3"
    },
    "526": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4096
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "527": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4096
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xCA11BE69"
    },
    "532": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4096
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "533": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "535": {
      "op": "ADD"
    },
    "536": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "538": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "540": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "541": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "DUP1",
      "path": "3"
    },
    "542": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "DUP4",
      "path": "3"
    },
    "543": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "SUB",
      "path": "3"
    },
    "544": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "DUP2",
      "path": "3"
    },
    "545": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "547": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "DUP8",
      "path": "3"
    },
    "548": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "DUP1",
      "path": "3"
    },
    "549": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "550": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "551": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "DUP1",
      "path": "3"
    },
    "552": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "553": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x231"
    },
    "556": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "557": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "559": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "DUP1",
      "path": "3"
    },
    "560": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "REVERT",
      "path": "3"
    },
    "561": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "562": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "POP",
      "path": "3"
    },
    "563": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "GAS",
      "path": "3"
    },
    "564": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "CALL",
      "path": "3"
    },
    "565": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "566": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "DUP1",
      "path": "3"
    },
    "567": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "568": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x245"
    },
    "571": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "572": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "573": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "575": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "DUP1",
      "path": "3"
    },
    "576": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "577": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "578": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "580": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "REVERT",
      "path": "3"
    },
    "581": {
      "fn": "Swip3.initateContract",
      "offset": [
        4074,
        4106
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "582": {
      "op": "POP"
    },
    "583": {
      "op": "POP"
    },
    "584": {
      "fn": "Swip3.initateContract",
      "offset": [
        4146,
        4213
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 1,
      "value": "0x40"
    },
    "586": {
      "fn": "Swip3.initateContract",
      "offset": [
        4146,
        4213
      ],
      "op": "DUP1",
      "path": "3"
    },
    "587": {
      "fn": "Swip3.initateContract",
      "offset": [
        4146,
        4213
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "588": {
      "op": "DUP2"
    },
    "589": {
      "op": "DUP2"
    },
    "590": {
      "op": "MSTORE"
    },
    "591": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "593": {
      "op": "DUP2"
    },
    "594": {
      "op": "DUP4"
    },
    "595": {
      "op": "ADD"
    },
    "596": {
      "op": "MSTORE"
    },
    "597": {
      "op": "PUSH32",
      "value": "0x5573657220636F6E747261637420637265617465642061740000000000000000"
    },
    "630": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "632": {
      "op": "DUP3"
    },
    "633": {
      "op": "ADD"
    },
    "634": {
      "op": "MSTORE"
    },
    "635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "639": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "641": {
      "op": "SHL"
    },
    "642": {
      "op": "SUB"
    },
    "643": {
      "op": "DUP8"
    },
    "644": {
      "op": "AND"
    },
    "645": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "647": {
      "op": "DUP3"
    },
    "648": {
      "op": "ADD"
    },
    "649": {
      "op": "MSTORE"
    },
    "650": {
      "fn": "Swip3.initateContract",
      "offset": [
        4146,
        4213
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "651": {
      "fn": "Swip3.initateContract",
      "offset": [
        4146,
        4213
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "652": {
      "fn": "Swip3.initateContract",
      "offset": [
        4146,
        4213
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xB758E6C0D2C9AECA50F129AFC686C8AE28726E41C3DF2AF4A0EC5CA15DCC70C5"
    },
    "685": {
      "fn": "Swip3.initateContract",
      "offset": [
        4146,
        4213
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "686": {
      "op": "POP"
    },
    "687": {
      "fn": "Swip3.initateContract",
      "offset": [
        4146,
        4213
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "688": {
      "fn": "Swip3.initateContract",
      "offset": [
        4146,
        4213
      ],
      "op": "DUP2",
      "path": "3"
    },
    "689": {
      "fn": "Swip3.initateContract",
      "offset": [
        4146,
        4213
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "690": {
      "fn": "Swip3.initateContract",
      "offset": [
        4146,
        4213
      ],
      "op": "SUB",
      "path": "3"
    },
    "691": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "693": {
      "fn": "Swip3.initateContract",
      "offset": [
        4146,
        4213
      ],
      "op": "ADD",
      "path": "3"
    },
    "694": {
      "fn": "Swip3.initateContract",
      "offset": [
        4146,
        4213
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "695": {
      "op": "POP"
    },
    "696": {
      "fn": "Swip3.initateContract",
      "offset": [
        4146,
        4213
      ],
      "op": "LOG1",
      "path": "3"
    },
    "697": {
      "fn": "Swip3.initateContract",
      "offset": [
        4246,
        4259
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 2
    },
    "698": {
      "fn": "Swip3.initateContract",
      "offset": [
        4231,
        4260
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "699": {
      "fn": "Swip3.initateContract",
      "offset": [
        4231,
        4260
      ],
      "op": "POP",
      "path": "3"
    },
    "700": {
      "fn": "Swip3.initateContract",
      "offset": [
        4231,
        4260
      ],
      "op": "POP",
      "path": "3"
    },
    "701": {
      "fn": "Swip3.initateContract",
      "offset": [
        4231,
        4260
      ],
      "op": "POP",
      "path": "3"
    },
    "702": {
      "fn": "Swip3.initateContract",
      "offset": [
        4231,
        4260
      ],
      "op": "POP",
      "path": "3"
    },
    "703": {
      "fn": "Swip3.initateContract",
      "offset": [
        4231,
        4260
      ],
      "op": "POP",
      "path": "3"
    },
    "704": {
      "fn": "Swip3.initateContract",
      "offset": [
        4231,
        4260
      ],
      "op": "POP",
      "path": "3"
    },
    "705": {
      "fn": "Swip3.initateContract",
      "offset": [
        4231,
        4260
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x31A"
    },
    "708": {
      "fn": "Swip3.initateContract",
      "offset": [
        4231,
        4260
      ],
      "op": "JUMP",
      "path": "3"
    },
    "709": {
      "fn": "Swip3.initateContract",
      "offset": [
        3347,
        4537
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "710": {
      "fn": "Swip3.initateContract",
      "offset": [
        4499,
        4522
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "712": {
      "fn": "Swip3.initateContract",
      "offset": [
        4499,
        4522
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "713": {
      "op": "PUSH4",
      "value": "0x2EFA81B"
    },
    "718": {
      "op": "PUSH1",
      "value": "0xE6"
    },
    "720": {
      "op": "SHL"
    },
    "721": {
      "fn": "Swip3.initateContract",
      "offset": [
        4499,
        4522
      ],
      "op": "DUP2",
      "path": "3"
    },
    "722": {
      "fn": "Swip3.initateContract",
      "offset": [
        4499,
        4522
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "723": {
      "fn": "Swip3.initateContract",
      "offset": [
        4499,
        4522
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "725": {
      "fn": "Swip3.initateContract",
      "offset": [
        4499,
        4522
      ],
      "op": "ADD",
      "path": "3"
    },
    "726": {
      "fn": "Swip3.initateContract",
      "offset": [
        4499,
        4522
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "728": {
      "fn": "Swip3.initateContract",
      "offset": [
        4499,
        4522
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "729": {
      "fn": "Swip3.initateContract",
      "offset": [
        4499,
        4522
      ],
      "op": "DUP1",
      "path": "3"
    },
    "730": {
      "fn": "Swip3.initateContract",
      "offset": [
        4499,
        4522
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "731": {
      "fn": "Swip3.initateContract",
      "offset": [
        4499,
        4522
      ],
      "op": "SUB",
      "path": "3"
    },
    "732": {
      "fn": "Swip3.initateContract",
      "offset": [
        4499,
        4522
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "733": {
      "fn": "Swip3.initateContract",
      "offset": [
        4499,
        4522
      ],
      "op": "REVERT",
      "path": "3"
    },
    "734": {
      "fn": "Swip3.initateContract",
      "offset": [
        3303,
        4875
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "735": {
      "fn": "Swip3.initateContract",
      "offset": [
        4580,
        4590
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "737": {
      "fn": "Swip3.initateContract",
      "offset": [
        4566,
        4576
      ],
      "op": "DUP5",
      "path": "3"
    },
    "738": {
      "fn": "Swip3.initateContract",
      "offset": [
        4566,
        4590
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "740": {
      "fn": "Swip3.initateContract",
      "offset": [
        4566,
        4590
      ],
      "op": "DUP2",
      "path": "3"
    },
    "741": {
      "fn": "Swip3.initateContract",
      "offset": [
        4566,
        4590
      ],
      "op": "GT",
      "path": "3"
    },
    "742": {
      "fn": "Swip3.initateContract",
      "offset": [
        4566,
        4590
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "743": {
      "fn": "Swip3.initateContract",
      "offset": [
        4566,
        4590
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F2"
    },
    "746": {
      "fn": "Swip3.initateContract",
      "offset": [
        4566,
        4590
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "747": {
      "fn": "Swip3.initateContract",
      "offset": [
        4566,
        4590
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F2"
    },
    "750": {
      "fn": "Swip3.initateContract",
      "offset": [
        4566,
        4590
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x991"
    },
    "753": {
      "fn": "Swip3.initateContract",
      "jump": "i",
      "offset": [
        4566,
        4590
      ],
      "op": "JUMP",
      "path": "3"
    },
    "754": {
      "fn": "Swip3.initateContract",
      "offset": [
        4566,
        4590
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "755": {
      "branch": 20,
      "fn": "Swip3.initateContract",
      "offset": [
        4566,
        4590
      ],
      "op": "SUB",
      "path": "3"
    },
    "756": {
      "fn": "Swip3.initateContract",
      "offset": [
        4562,
        4875
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C5"
    },
    "759": {
      "branch": 20,
      "fn": "Swip3.initateContract",
      "offset": [
        4562,
        4875
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "760": {
      "fn": "Swip3.initateContract",
      "offset": [
        4726,
        4752
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 3,
      "value": "0x300"
    },
    "763": {
      "fn": "Swip3.initateContract",
      "offset": [
        4743,
        4751
      ],
      "op": "DUP4",
      "path": "3"
    },
    "764": {
      "fn": "Swip3.initateContract",
      "offset": [
        4726,
        4742
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x69A"
    },
    "767": {
      "fn": "Swip3.initateContract",
      "jump": "i",
      "offset": [
        4726,
        4752
      ],
      "op": "JUMP",
      "path": "3"
    },
    "768": {
      "fn": "Swip3.initateContract",
      "offset": [
        4726,
        4752
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "769": {
      "fn": "Swip3.initateContract",
      "offset": [
        4726,
        4752
      ],
      "op": "POP",
      "path": "3"
    },
    "770": {
      "fn": "Swip3.initateContract",
      "offset": [
        4773,
        4796
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "772": {
      "fn": "Swip3.initateContract",
      "offset": [
        4773,
        4796
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "773": {
      "op": "PUSH4",
      "value": "0x2EFA81B"
    },
    "778": {
      "op": "PUSH1",
      "value": "0xE6"
    },
    "780": {
      "op": "SHL"
    },
    "781": {
      "fn": "Swip3.initateContract",
      "offset": [
        4773,
        4796
      ],
      "op": "DUP2",
      "path": "3"
    },
    "782": {
      "fn": "Swip3.initateContract",
      "offset": [
        4773,
        4796
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "783": {
      "fn": "Swip3.initateContract",
      "offset": [
        4773,
        4796
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "785": {
      "fn": "Swip3.initateContract",
      "offset": [
        4773,
        4796
      ],
      "op": "ADD",
      "path": "3"
    },
    "786": {
      "fn": "Swip3.initateContract",
      "offset": [
        4773,
        4796
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "788": {
      "fn": "Swip3.initateContract",
      "offset": [
        4773,
        4796
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "789": {
      "fn": "Swip3.initateContract",
      "offset": [
        4773,
        4796
      ],
      "op": "DUP1",
      "path": "3"
    },
    "790": {
      "fn": "Swip3.initateContract",
      "offset": [
        4773,
        4796
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "791": {
      "fn": "Swip3.initateContract",
      "offset": [
        4773,
        4796
      ],
      "op": "SUB",
      "path": "3"
    },
    "792": {
      "fn": "Swip3.initateContract",
      "offset": [
        4773,
        4796
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "793": {
      "fn": "Swip3.initateContract",
      "offset": [
        4773,
        4796
      ],
      "op": "REVERT",
      "path": "3"
    },
    "794": {
      "fn": "Swip3.initateContract",
      "offset": [
        4562,
        4875
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "795": {
      "fn": "Swip3.initateContract",
      "offset": [
        3104,
        4882
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "796": {
      "fn": "Swip3.initateContract",
      "offset": [
        3104,
        4882
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "797": {
      "fn": "Swip3.initateContract",
      "offset": [
        3104,
        4882
      ],
      "op": "POP",
      "path": "3"
    },
    "798": {
      "fn": "Swip3.initateContract",
      "offset": [
        3104,
        4882
      ],
      "op": "POP",
      "path": "3"
    },
    "799": {
      "fn": "Swip3.initateContract",
      "offset": [
        3104,
        4882
      ],
      "op": "POP",
      "path": "3"
    },
    "800": {
      "fn": "Swip3.initateContract",
      "jump": "o",
      "offset": [
        3104,
        4882
      ],
      "op": "JUMP",
      "path": "3"
    },
    "801": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5754,
        5858
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "802": {
      "offset": [
        1158,
        1168
      ],
      "op": "CALLER",
      "path": "3"
    },
    "803": {
      "offset": [
        1132,
        1152
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "805": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1132,
        1152
      ],
      "op": "DUP2",
      "path": "3"
    },
    "806": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1132,
        1152
      ],
      "op": "DUP2",
      "path": "3"
    },
    "807": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1132,
        1152
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "808": {
      "offset": [
        1132,
        1140
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "810": {
      "offset": [
        1132,
        1152
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "812": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1132,
        1152
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "813": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1132,
        1152
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "815": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1132,
        1152
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "816": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1132,
        1152
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "817": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1132,
        1152
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "818": {
      "offset": [
        1126,
        1131
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "820": {
      "offset": [
        1126,
        1153
      ],
      "op": "DUP1",
      "path": "3"
    },
    "821": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1126,
        1153
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "822": {
      "offset": [
        1126,
        1131
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "823": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1126,
        1131
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "824": {
      "offset": [
        1132,
        1152
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "825": {
      "offset": [
        1126,
        1153
      ],
      "op": "DUP2",
      "path": "3"
    },
    "826": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1126,
        1153
      ],
      "op": "LT",
      "path": "3"
    },
    "827": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1126,
        1153
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x346"
    },
    "830": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1126,
        1153
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "831": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1126,
        1153
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x346"
    },
    "834": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1126,
        1153
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9A7"
    },
    "837": {
      "fn": "Swip3.updateGateState",
      "jump": "i",
      "offset": [
        1126,
        1153
      ],
      "op": "JUMP",
      "path": "3"
    },
    "838": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1126,
        1153
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "839": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1126,
        1153
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "841": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1126,
        1153
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "842": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1126,
        1153
      ],
      "op": "DUP3",
      "path": "3"
    },
    "843": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1126,
        1153
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "844": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1126,
        1153
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "846": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1126,
        1153
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "847": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1126,
        1153
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "848": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1126,
        1153
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "849": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1126,
        1153
      ],
      "op": "ADD",
      "path": "3"
    },
    "850": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1126,
        1153
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "855": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "857": {
      "op": "SHL"
    },
    "858": {
      "op": "SUB"
    },
    "859": {
      "offset": [
        1126,
        1153
      ],
      "op": "AND",
      "path": "3"
    },
    "860": {
      "offset": [
        1118,
        1168
      ],
      "op": "EQ",
      "path": "3"
    },
    "861": {
      "offset": [
        1110,
        1187
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x39E"
    },
    "864": {
      "offset": [
        1110,
        1187
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "865": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1110,
        1187
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "867": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1110,
        1187
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "868": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "872": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "874": {
      "op": "SHL"
    },
    "875": {
      "offset": [
        1110,
        1187
      ],
      "op": "DUP2",
      "path": "3"
    },
    "876": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1110,
        1187
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "877": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "879": {
      "offset": [
        1110,
        1187
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "881": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1110,
        1187
      ],
      "op": "DUP3",
      "path": "3"
    },
    "882": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1110,
        1187
      ],
      "op": "ADD",
      "path": "3"
    },
    "883": {
      "op": "MSTORE"
    },
    "884": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "886": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "888": {
      "op": "DUP3"
    },
    "889": {
      "op": "ADD"
    },
    "890": {
      "op": "MSTORE"
    },
    "891": {
      "op": "PUSH14",
      "value": "0x11D85D19481B9BDD081BDDDB9959"
    },
    "906": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "908": {
      "op": "SHL"
    },
    "909": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "911": {
      "op": "DUP3"
    },
    "912": {
      "op": "ADD"
    },
    "913": {
      "op": "MSTORE"
    },
    "914": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "916": {
      "op": "ADD"
    },
    "917": {
      "offset": [
        1110,
        1187
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "918": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1110,
        1187
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "920": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1110,
        1187
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "921": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1110,
        1187
      ],
      "op": "DUP1",
      "path": "3"
    },
    "922": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1110,
        1187
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "923": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1110,
        1187
      ],
      "op": "SUB",
      "path": "3"
    },
    "924": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1110,
        1187
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "925": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1110,
        1187
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "3"
    },
    "926": {
      "fn": "Swip3.updateGateState",
      "offset": [
        1110,
        1187
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "927": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5839,
        5849
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 4
    },
    "928": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5830,
        5850
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "930": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5830,
        5850
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "931": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5830,
        5850
      ],
      "op": "DUP2",
      "path": "3"
    },
    "932": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5830,
        5850
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "933": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5830,
        5838
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "935": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5830,
        5850
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "937": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5830,
        5850
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "938": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5830,
        5850
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "940": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5830,
        5850
      ],
      "op": "DUP2",
      "path": "3"
    },
    "941": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5830,
        5850
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "942": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5830,
        5850
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "943": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5814,
        5824
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "945": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5814,
        5851
      ],
      "op": "DUP1",
      "path": "3"
    },
    "946": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5814,
        5851
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "947": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5814,
        5851
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "949": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5814,
        5851
      ],
      "op": "DUP2",
      "path": "3"
    },
    "950": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5814,
        5851
      ],
      "op": "ADD",
      "path": "3"
    },
    "951": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5814,
        5851
      ],
      "op": "DUP3",
      "path": "3"
    },
    "952": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5814,
        5851
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "953": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5814,
        5851
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "954": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5814,
        5851
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "955": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5814,
        5851
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
    },
    "988": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5814,
        5851
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "989": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5814,
        5851
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "990": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5814,
        5851
      ],
      "op": "ADD",
      "path": "3"
    },
    "991": {
      "fn": "Swip3.updateGateState",
      "offset": [
        5814,
        5851
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "992": {
      "fn": "Swip3.updateGateState",
      "jump": "o",
      "offset": [
        5754,
        5858
      ],
      "op": "JUMP",
      "path": "3"
    },
    "993": {
      "fn": "SafeMath.add",
      "offset": [
        82,
        239
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "994": {
      "fn": "SafeMath.add",
      "offset": [
        140,
        149
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "996": {
      "fn": "SafeMath.add",
      "offset": [
        165,
        170
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 5,
      "value": "0x3ED"
    },
    "999": {
      "fn": "SafeMath.add",
      "offset": [
        169,
        170
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1000": {
      "fn": "SafeMath.add",
      "offset": [
        165,
        166
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1001": {
      "fn": "SafeMath.add",
      "offset": [
        165,
        170
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9D3"
    },
    "1004": {
      "fn": "SafeMath.add",
      "jump": "i",
      "offset": [
        165,
        170
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1005": {
      "fn": "SafeMath.add",
      "offset": [
        165,
        170
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1006": {
      "fn": "SafeMath.add",
      "offset": [
        161,
        170
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1007": {
      "fn": "SafeMath.add",
      "offset": [
        161,
        170
      ],
      "op": "POP",
      "path": "2"
    },
    "1008": {
      "fn": "SafeMath.add",
      "offset": [
        193,
        194
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 6
    },
    "1009": {
      "fn": "SafeMath.add",
      "offset": [
        188,
        189
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1010": {
      "fn": "SafeMath.add",
      "offset": [
        188,
        194
      ],
      "op": "LT",
      "path": "2"
    },
    "1011": {
      "branch": 25,
      "fn": "SafeMath.add",
      "offset": [
        188,
        194
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1012": {
      "fn": "SafeMath.add",
      "offset": [
        180,
        214
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x431"
    },
    "1015": {
      "branch": 25,
      "fn": "SafeMath.add",
      "offset": [
        180,
        214
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1016": {
      "fn": "SafeMath.add",
      "offset": [
        180,
        214
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1018": {
      "fn": "SafeMath.add",
      "offset": [
        180,
        214
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1019": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1025": {
      "op": "SHL"
    },
    "1026": {
      "fn": "SafeMath.add",
      "offset": [
        180,
        214
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1027": {
      "fn": "SafeMath.add",
      "offset": [
        180,
        214
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1028": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1030": {
      "fn": "SafeMath.add",
      "offset": [
        180,
        214
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1032": {
      "fn": "SafeMath.add",
      "offset": [
        180,
        214
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1033": {
      "fn": "SafeMath.add",
      "offset": [
        180,
        214
      ],
      "op": "ADD",
      "path": "2"
    },
    "1034": {
      "op": "MSTORE"
    },
    "1035": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "1037": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1039": {
      "op": "DUP3"
    },
    "1040": {
      "op": "ADD"
    },
    "1041": {
      "op": "MSTORE"
    },
    "1042": {
      "op": "PUSH15",
      "value": "0x1059191A5D1A5BDB8819985A5B1959"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "1060": {
      "op": "SHL"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1063": {
      "op": "DUP3"
    },
    "1064": {
      "op": "ADD"
    },
    "1065": {
      "op": "MSTORE"
    },
    "1066": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1068": {
      "op": "ADD"
    },
    "1069": {
      "fn": "SafeMath.add",
      "offset": [
        180,
        214
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x395"
    },
    "1072": {
      "op": "JUMP"
    },
    "1073": {
      "fn": "SafeMath.add",
      "offset": [
        180,
        214
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1074": {
      "fn": "SafeMath.add",
      "offset": [
        82,
        239
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1075": {
      "fn": "SafeMath.add",
      "offset": [
        82,
        239
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1076": {
      "fn": "SafeMath.add",
      "offset": [
        82,
        239
      ],
      "op": "POP",
      "path": "2"
    },
    "1077": {
      "fn": "SafeMath.add",
      "offset": [
        82,
        239
      ],
      "op": "POP",
      "path": "2"
    },
    "1078": {
      "fn": "SafeMath.add",
      "jump": "o",
      "offset": [
        82,
        239
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1079": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        1879,
        2681
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1080": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2005,
        2015
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1082": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2005,
        2022
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1083": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        1969,
        1976
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1085": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        1969,
        1976
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1086": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        1969,
        1976
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1087": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        1969,
        1976
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1088": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2005,
        2027
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1089": {
      "branch": 21,
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2005,
        2027
      ],
      "op": "SUB",
      "path": "3"
    },
    "1090": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2001,
        2367
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x590"
    },
    "1093": {
      "branch": 21,
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2001,
        2367
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1094": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2089,
        2103
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1096": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2089,
        2103
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1097": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2105,
        2125
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1099": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2105,
        2125
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1100": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2069,
        2126
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1102": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2069,
        2126
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1103": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2042,
        2066
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1105": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2042,
        2066
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1106": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2089,
        2103
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1113": {
      "op": "SHL"
    },
    "1114": {
      "op": "SUB"
    },
    "1115": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2105,
        2125
      ],
      "op": "AND",
      "path": "3"
    },
    "1116": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2105,
        2125
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1117": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2069,
        2126
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x465"
    },
    "1120": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2069,
        2126
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1121": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2069,
        2126
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x878"
    },
    "1124": {
      "fn": "Swip3.matchWithLendingPool",
      "jump": "i",
      "offset": [
        2069,
        2126
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1125": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2069,
        2126
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1126": {
      "op": "SWAP2"
    },
    "1127": {
      "op": "DUP3"
    },
    "1128": {
      "op": "MSTORE"
    },
    "1129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1133": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1135": {
      "op": "SHL"
    },
    "1136": {
      "op": "SUB"
    },
    "1137": {
      "op": "AND"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1140": {
      "op": "DUP3"
    },
    "1141": {
      "op": "ADD"
    },
    "1142": {
      "op": "MSTORE"
    },
    "1143": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1145": {
      "op": "ADD"
    },
    "1146": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2069,
        2126
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1148": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2069,
        2126
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1149": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2069,
        2126
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1150": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2069,
        2126
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1151": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2069,
        2126
      ],
      "op": "SUB",
      "path": "3"
    },
    "1152": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2069,
        2126
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1153": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2069,
        2126
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1155": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2069,
        2126
      ],
      "op": "CREATE",
      "path": "3"
    },
    "1156": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2069,
        2126
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1157": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2069,
        2126
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1158": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2069,
        2126
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1159": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2069,
        2126
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1160": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2069,
        2126
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x495"
    },
    "1163": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2069,
        2126
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1164": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2069,
        2126
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1165": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2069,
        2126
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1167": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2069,
        2126
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1168": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2069,
        2126
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1169": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2069,
        2126
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1170": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2069,
        2126
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1172": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2069,
        2126
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1173": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2069,
        2126
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1174": {
      "op": "POP"
    },
    "1175": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2140,
        2145
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 7,
      "value": "0x3"
    },
    "1177": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2140,
        2160
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1178": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2140,
        2160
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1179": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2140,
        2160
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1181": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2140,
        2160
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1182": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2140,
        2160
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1183": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2140,
        2160
      ],
      "op": "ADD",
      "path": "3"
    },
    "1184": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2140,
        2160
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1185": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2140,
        2160
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1186": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1188": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2140,
        2160
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1189": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2140,
        2160
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1190": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2140,
        2160
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1191": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2140,
        2160
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
    },
    "1224": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2140,
        2160
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1225": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2140,
        2160
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1226": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2140,
        2160
      ],
      "op": "ADD",
      "path": "3"
    },
    "1227": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2140,
        2160
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1228": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2140,
        2160
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1233": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1235": {
      "op": "SHL"
    },
    "1236": {
      "op": "SUB"
    },
    "1237": {
      "op": "NOT"
    },
    "1238": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2140,
        2160
      ],
      "op": "AND",
      "path": "3"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1245": {
      "op": "SHL"
    },
    "1246": {
      "op": "SUB"
    },
    "1247": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2140,
        2160
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1248": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2140,
        2160
      ],
      "op": "AND",
      "path": "3"
    },
    "1249": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2140,
        2160
      ],
      "op": "OR",
      "path": "3"
    },
    "1250": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2140,
        2160
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1251": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2140,
        2160
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1252": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2204,
        2216
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 8
    },
    "1253": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2204,
        2216
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1254": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2140,
        2160
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1255": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2140,
        2160
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1256": {
      "op": "POP"
    },
    "1257": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2204,
        2223
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4F2"
    },
    "1260": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2204,
        2223
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1261": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2204,
        2216
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1262": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2204,
        2220
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x81A"
    },
    "1265": {
      "fn": "Swip3.matchWithLendingPool",
      "jump": "i",
      "offset": [
        2204,
        2223
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1266": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2204,
        2223
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1271": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1273": {
      "op": "SHL"
    },
    "1274": {
      "op": "SUB"
    },
    "1275": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2174,
        2201
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1276": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2174,
        2201
      ],
      "op": "AND",
      "path": "3"
    },
    "1277": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2174,
        2201
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1279": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2174,
        2201
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1280": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2174,
        2201
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1281": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2174,
        2201
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1282": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2174,
        2182
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "1284": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2174,
        2201
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1286": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2174,
        2201
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1287": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2174,
        2201
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1289": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2174,
        2201
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1290": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2174,
        2201
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1291": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2174,
        2223
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1292": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2253,
        2258
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 9,
      "value": "0x3"
    },
    "1294": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2253,
        2265
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1295": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2237,
        2247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1297": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2237,
        2247
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1298": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2253,
        2272
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x51C"
    },
    "1301": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2253,
        2272
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1302": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2270,
        2271
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1304": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2253,
        2269
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x81A"
    },
    "1307": {
      "fn": "Swip3.matchWithLendingPool",
      "jump": "i",
      "offset": [
        2253,
        2272
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1308": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2253,
        2272
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1309": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2237,
        2273
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1310": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2237,
        2273
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1311": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2237,
        2273
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1313": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2237,
        2273
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1314": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2237,
        2273
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1315": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2237,
        2273
      ],
      "op": "ADD",
      "path": "3"
    },
    "1316": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2237,
        2273
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1317": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2237,
        2273
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1318": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1320": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2237,
        2273
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1321": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2237,
        2273
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1322": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2237,
        2273
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1323": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2237,
        2273
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1325": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2237,
        2273
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1326": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2237,
        2273
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1327": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2237,
        2273
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1328": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2237,
        2273
      ],
      "op": "ADD",
      "path": "3"
    },
    "1329": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2237,
        2273
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1330": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2307,
        2327
      ],
      "op": "SLOAD",
      "path": "3",
      "statement": 10
    },
    "1331": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1333": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1334": {
      "op": "PUSH4",
      "value": "0x1E23271D"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1341": {
      "op": "SHL"
    },
    "1342": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1343": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1348": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1350": {
      "op": "SHL"
    },
    "1351": {
      "op": "SUB"
    },
    "1352": {
      "op": "DUP4"
    },
    "1353": {
      "op": "DUP2"
    },
    "1354": {
      "op": "AND"
    },
    "1355": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1357": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1358": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "ADD",
      "path": "3"
    },
    "1359": {
      "op": "MSTORE"
    },
    "1360": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2307,
        2327
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1361": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2307,
        2327
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1362": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2307,
        2327
      ],
      "op": "AND",
      "path": "3"
    },
    "1363": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2307,
        2327
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1364": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2337
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x1E23271D"
    },
    "1369": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2337
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1372": {
      "op": "ADD"
    },
    "1373": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1375": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1377": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1378": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1379": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1380": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "SUB",
      "path": "3"
    },
    "1381": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1382": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1384": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1385": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1386": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "1387": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1388": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1389": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1390": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x576"
    },
    "1393": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1394": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1396": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1397": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1398": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1399": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "POP",
      "path": "3"
    },
    "1400": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "GAS",
      "path": "3"
    },
    "1401": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "CALL",
      "path": "3"
    },
    "1402": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1403": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1404": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1405": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x58A"
    },
    "1408": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1409": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1410": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1412": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1413": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1414": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1415": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1417": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1418": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1419": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "POP",
      "path": "3"
    },
    "1420": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "POP",
      "path": "3"
    },
    "1421": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "POP",
      "path": "3"
    },
    "1422": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2287,
        2356
      ],
      "op": "POP",
      "path": "3"
    },
    "1423": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2028,
        2367
      ],
      "op": "POP",
      "path": "3"
    },
    "1424": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2001,
        2367
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1425": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2384,
        2394
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 11,
      "value": "0x4"
    },
    "1427": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2384,
        2401
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1428": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2405,
        2406
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1430": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2384,
        2406
      ],
      "op": "SUB",
      "path": "3"
    },
    "1431": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2377,
        2407
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5A2"
    },
    "1434": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2377,
        2407
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1435": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2377,
        2407
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5A2"
    },
    "1438": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2377,
        2407
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9EB"
    },
    "1441": {
      "fn": "Swip3.matchWithLendingPool",
      "jump": "i",
      "offset": [
        2377,
        2407
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1442": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2377,
        2407
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1443": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2452,
        2462
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1445": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2463,
        2480
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1446": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2463,
        2480
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1447": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2418,
        2443
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1449": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2418,
        2443
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1450": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2446,
        2451
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "1452": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2446,
        2451
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1453": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2463,
        2487
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5B7"
    },
    "1456": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2463,
        2487
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1457": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2485,
        2486
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1459": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2463,
        2484
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x81A"
    },
    "1462": {
      "fn": "Swip3.matchWithLendingPool",
      "jump": "i",
      "offset": [
        2463,
        2487
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1463": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2463,
        2487
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1464": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2452,
        2488
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1465": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2452,
        2488
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1466": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2452,
        2488
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1467": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2452,
        2488
      ],
      "op": "LT",
      "path": "3"
    },
    "1468": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2452,
        2488
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5C7"
    },
    "1471": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2452,
        2488
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1472": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2452,
        2488
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5C7"
    },
    "1475": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2452,
        2488
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9A7"
    },
    "1478": {
      "fn": "Swip3.matchWithLendingPool",
      "jump": "i",
      "offset": [
        2452,
        2488
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1479": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2452,
        2488
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1480": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2452,
        2488
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1481": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2452,
        2488
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1483": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2452,
        2488
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1484": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2452,
        2488
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1486": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2452,
        2488
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1488": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2452,
        2488
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1489": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2452,
        2488
      ],
      "op": "ADD",
      "path": "3"
    },
    "1490": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2452,
        2488
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1491": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2446,
        2489
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1492": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2446,
        2489
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1493": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2446,
        2489
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1494": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2446,
        2489
      ],
      "op": "LT",
      "path": "3"
    },
    "1495": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2446,
        2489
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5E2"
    },
    "1498": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2446,
        2489
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1499": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2446,
        2489
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5E2"
    },
    "1502": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2446,
        2489
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9A7"
    },
    "1505": {
      "fn": "Swip3.matchWithLendingPool",
      "jump": "i",
      "offset": [
        2446,
        2489
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1506": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2446,
        2489
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1507": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2446,
        2489
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1509": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2446,
        2489
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1510": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2446,
        2489
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1511": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2446,
        2489
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1512": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2446,
        2489
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1514": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2446,
        2489
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1515": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2446,
        2489
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1516": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2446,
        2489
      ],
      "op": "ADD",
      "path": "3"
    },
    "1517": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2446,
        2489
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1518": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1520": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1521": {
      "op": "PUSH4",
      "value": "0x18BAA4F9"
    },
    "1526": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1528": {
      "op": "SHL"
    },
    "1529": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1530": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1535": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1537": {
      "op": "SHL"
    },
    "1538": {
      "op": "SUB"
    },
    "1539": {
      "op": "DUP8"
    },
    "1540": {
      "op": "DUP2"
    },
    "1541": {
      "op": "AND"
    },
    "1542": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1544": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1545": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "ADD",
      "path": "3"
    },
    "1546": {
      "op": "MSTORE"
    },
    "1547": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2446,
        2489
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1548": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2446,
        2489
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1549": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2446,
        2489
      ],
      "op": "AND",
      "path": "3"
    },
    "1550": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2446,
        2489
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1551": {
      "op": "POP"
    },
    "1552": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2446,
        2489
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1553": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2446,
        2489
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1554": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2446,
        2489
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1555": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2446,
        2489
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1556": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2551
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x317549F2"
    },
    "1561": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2551
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1562": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1564": {
      "op": "ADD"
    },
    "1565": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1567": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1568": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1569": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1570": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1571": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "SUB",
      "path": "3"
    },
    "1572": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1573": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1575": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1576": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "GAS",
      "path": "3"
    },
    "1577": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "CALL",
      "path": "3"
    },
    "1578": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1579": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1580": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1581": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x63A"
    },
    "1584": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1585": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1586": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1588": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1589": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1590": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1591": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1593": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1594": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1595": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "POP",
      "path": "3"
    },
    "1596": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "POP",
      "path": "3"
    },
    "1597": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "POP",
      "path": "3"
    },
    "1598": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "POP",
      "path": "3"
    },
    "1599": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1601": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1602": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1603": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1605": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "NOT",
      "path": "3"
    },
    "1606": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1608": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1609": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "ADD",
      "path": "3"
    },
    "1610": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "AND",
      "path": "3"
    },
    "1611": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1612": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "ADD",
      "path": "3"
    },
    "1613": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1614": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1616": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1617": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "POP",
      "path": "3"
    },
    "1618": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1619": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "ADD",
      "path": "3"
    },
    "1620": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1621": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x65E"
    },
    "1624": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1625": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1626": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA01"
    },
    "1629": {
      "fn": "Swip3.matchWithLendingPool",
      "jump": "i",
      "offset": [
        2525,
        2569
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1630": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2525,
        2569
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1631": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2499,
        2569
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1632": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2499,
        2569
      ],
      "op": "POP",
      "path": "3"
    },
    "1633": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2499,
        2569
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1634": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2499,
        2569
      ],
      "op": "POP",
      "path": "3"
    },
    "1635": {
      "branch": 22,
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2585,
        2589
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1636": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2580,
        2631
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x68F"
    },
    "1639": {
      "branch": 22,
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2580,
        2631
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1640": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2604,
        2614
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 12,
      "value": "0x4"
    },
    "1642": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2604,
        2620
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1643": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2604,
        2620
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1644": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2604,
        2620
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1645": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2604,
        2620
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x678"
    },
    "1648": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2604,
        2620
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1649": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2604,
        2620
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x678"
    },
    "1652": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2604,
        2620
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA36"
    },
    "1655": {
      "fn": "Swip3.matchWithLendingPool",
      "jump": "i",
      "offset": [
        2604,
        2620
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1656": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2604,
        2620
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1657": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2604,
        2620
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1659": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2604,
        2620
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1660": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2604,
        2620
      ],
      "op": "SUB",
      "path": "3"
    },
    "1661": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2604,
        2620
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1662": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2604,
        2620
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1663": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2604,
        2620
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1664": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2604,
        2620
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1666": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2604,
        2620
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1667": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2604,
        2620
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1669": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2604,
        2620
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1671": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2604,
        2620
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1672": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2604,
        2620
      ],
      "op": "ADD",
      "path": "3"
    },
    "1673": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2604,
        2620
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1675": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2604,
        2620
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1676": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2604,
        2620
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1677": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2604,
        2620
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1678": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2604,
        2620
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1679": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2580,
        2631
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1680": {
      "op": "POP"
    },
    "1681": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2657,
        2666
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 13
    },
    "1682": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2657,
        2666
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1683": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2669,
        2671
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1684": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        2669,
        2671
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1685": {
      "op": "POP"
    },
    "1686": {
      "fn": "Swip3.matchWithLendingPool",
      "offset": [
        1879,
        2681
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1687": {
      "op": "POP"
    },
    "1688": {
      "op": "POP"
    },
    "1689": {
      "fn": "Swip3.matchWithLendingPool",
      "jump": "o",
      "offset": [
        1879,
        2681
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1690": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        4888,
        5415
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1691": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        4974,
        4981
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1693": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5006,
        5018
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1694": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5020,
        5043
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1696": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5056
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1697": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5064
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1699": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5064
      ],
      "op": "ADD",
      "path": "3"
    },
    "1700": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5064
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1705": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1707": {
      "op": "SHL"
    },
    "1708": {
      "op": "SUB"
    },
    "1709": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5069
      ],
      "op": "AND",
      "path": "3"
    },
    "1710": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5114,
        5122
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1711": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5114,
        5131
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1713": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5114,
        5131
      ],
      "op": "ADD",
      "path": "3"
    },
    "1714": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5114,
        5131
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1715": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5070,
        5132
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1717": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5070,
        5132
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1718": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5070,
        5132
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "1720": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5070,
        5132
      ],
      "op": "ADD",
      "path": "3"
    },
    "1721": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5070,
        5132
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6C4"
    },
    "1724": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5070,
        5132
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1725": {
      "op": "DUP2"
    },
    "1726": {
      "op": "MSTORE"
    },
    "1727": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1729": {
      "op": "ADD"
    },
    "1730": {
      "op": "SWAP1"
    },
    "1731": {
      "op": "JUMP"
    },
    "1732": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5070,
        5132
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1733": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5070,
        5132
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1735": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5070,
        5132
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1736": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5070,
        5132
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1739": {
      "op": "NOT"
    },
    "1740": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5070,
        5132
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1741": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5070,
        5132
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1742": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5070,
        5132
      ],
      "op": "SUB",
      "path": "3"
    },
    "1743": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5070,
        5132
      ],
      "op": "ADD",
      "path": "3"
    },
    "1744": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5070,
        5132
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1745": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5070,
        5132
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1746": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5070,
        5132
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1747": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5070,
        5132
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1748": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5070,
        5132
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1749": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5070,
        5132
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1751": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5070,
        5132
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1752": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5070,
        5132
      ],
      "op": "ADD",
      "path": "3"
    },
    "1753": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5070,
        5132
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1754": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5070,
        5132
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1759": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1761": {
      "op": "SHL"
    },
    "1762": {
      "op": "SUB"
    },
    "1763": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5070,
        5132
      ],
      "op": "AND",
      "path": "3"
    },
    "1764": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "1769": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1771": {
      "op": "SHL"
    },
    "1772": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5070,
        5132
      ],
      "op": "OR",
      "path": "3"
    },
    "1773": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5070,
        5132
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1774": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5070,
        5132
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1775": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1776": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6F9"
    },
    "1779": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1780": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5070,
        5132
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1781": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA4C"
    },
    "1784": {
      "fn": "Swip3.evaluateNFTStake",
      "jump": "i",
      "offset": [
        5048,
        5133
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1785": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1786": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1788": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1790": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1791": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1792": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1793": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "SUB",
      "path": "3"
    },
    "1794": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1795": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1797": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1798": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "GAS",
      "path": "3"
    },
    "1799": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "CALL",
      "path": "3"
    },
    "1800": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1801": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "POP",
      "path": "3"
    },
    "1802": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "POP",
      "path": "3"
    },
    "1803": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1804": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1805": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1807": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1808": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "EQ",
      "path": "3"
    },
    "1809": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x736"
    },
    "1812": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1813": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1815": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1816": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1817": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "POP",
      "path": "3"
    },
    "1818": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1820": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "NOT",
      "path": "3"
    },
    "1821": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3F"
    },
    "1823": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1824": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "ADD",
      "path": "3"
    },
    "1825": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "AND",
      "path": "3"
    },
    "1826": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1827": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "ADD",
      "path": "3"
    },
    "1828": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1830": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1831": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1832": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1833": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1834": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1835": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1837": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1839": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1840": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "ADD",
      "path": "3"
    },
    "1841": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1842": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x73B"
    },
    "1845": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1846": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1847": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1849": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1850": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "POP",
      "path": "3"
    },
    "1851": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1852": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5048,
        5133
      ],
      "op": "POP",
      "path": "3"
    },
    "1853": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5005,
        5133
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1854": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5005,
        5133
      ],
      "op": "POP",
      "path": "3"
    },
    "1855": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5005,
        5133
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1856": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5005,
        5133
      ],
      "op": "POP",
      "path": "3"
    },
    "1857": {
      "branch": 23,
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5152,
        5159
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 14
    },
    "1858": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5143,
        5193
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x78D"
    },
    "1861": {
      "branch": 23,
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5143,
        5193
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1862": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5143,
        5193
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1864": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5143,
        5193
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1865": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1869": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1871": {
      "op": "SHL"
    },
    "1872": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5143,
        5193
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1873": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5143,
        5193
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1874": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1876": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5143,
        5193
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1878": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5143,
        5193
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1879": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5143,
        5193
      ],
      "op": "ADD",
      "path": "3"
    },
    "1880": {
      "op": "MSTORE"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "1883": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1885": {
      "op": "DUP3"
    },
    "1886": {
      "op": "ADD"
    },
    "1887": {
      "op": "MSTORE"
    },
    "1888": {
      "op": "PUSH32",
      "value": "0x4E465420636F6E7472616374206861736E277420726573706F6E646564000000"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1923": {
      "op": "DUP3"
    },
    "1924": {
      "op": "ADD"
    },
    "1925": {
      "op": "MSTORE"
    },
    "1926": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1928": {
      "op": "ADD"
    },
    "1929": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5143,
        5193
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x395"
    },
    "1932": {
      "op": "JUMP"
    },
    "1933": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5143,
        5193
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1934": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5256,
        5260
      ],
      "op": "ADDRESS",
      "path": "3",
      "statement": 15
    },
    "1935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1939": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1941": {
      "op": "SHL"
    },
    "1942": {
      "op": "SUB"
    },
    "1943": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5211,
        5261
      ],
      "op": "AND",
      "path": "3"
    },
    "1944": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5222,
        5232
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1945": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5211,
        5244
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1946": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5211,
        5244
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1948": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5211,
        5244
      ],
      "op": "ADD",
      "path": "3"
    },
    "1949": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5211,
        5244
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1950": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5211,
        5244
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1951": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5211,
        5244
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1952": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5211,
        5244
      ],
      "op": "ADD",
      "path": "3"
    },
    "1953": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5211,
        5244
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1954": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5211,
        5244
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7AB"
    },
    "1957": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5211,
        5244
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1958": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5211,
        5244
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1959": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5211,
        5244
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA87"
    },
    "1962": {
      "fn": "Swip3.evaluateNFTStake",
      "jump": "i",
      "offset": [
        5211,
        5244
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1963": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5211,
        5244
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1968": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1970": {
      "op": "SHL"
    },
    "1971": {
      "op": "SUB"
    },
    "1972": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5211,
        5261
      ],
      "op": "AND",
      "path": "3"
    },
    "1973": {
      "branch": 24,
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5211,
        5261
      ],
      "op": "EQ",
      "path": "3"
    },
    "1974": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5203,
        5303
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x80F"
    },
    "1977": {
      "branch": 24,
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5203,
        5303
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1978": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5203,
        5303
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1980": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5203,
        5303
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1981": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1987": {
      "op": "SHL"
    },
    "1988": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5203,
        5303
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1989": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5203,
        5303
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1990": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1992": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5203,
        5303
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1994": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5203,
        5303
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1995": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5203,
        5303
      ],
      "op": "ADD",
      "path": "3"
    },
    "1996": {
      "op": "MSTORE"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "1999": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2001": {
      "op": "DUP3"
    },
    "2002": {
      "op": "ADD"
    },
    "2003": {
      "op": "MSTORE"
    },
    "2004": {
      "op": "PUSH32",
      "value": "0x4E4654206E6F74207472616E7366657272656420746F20736D61727420636F6E"
    },
    "2037": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2039": {
      "op": "DUP3"
    },
    "2040": {
      "op": "ADD"
    },
    "2041": {
      "op": "MSTORE"
    },
    "2042": {
      "op": "PUSH5",
      "value": "0x1D1C9858DD"
    },
    "2048": {
      "op": "PUSH1",
      "value": "0xDA"
    },
    "2050": {
      "op": "SHL"
    },
    "2051": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2053": {
      "op": "DUP3"
    },
    "2054": {
      "op": "ADD"
    },
    "2055": {
      "op": "MSTORE"
    },
    "2056": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2058": {
      "op": "ADD"
    },
    "2059": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5203,
        5303
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x395"
    },
    "2062": {
      "op": "JUMP"
    },
    "2063": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5203,
        5303
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2064": {
      "op": "POP"
    },
    "2065": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5374,
        5378
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E8"
    },
    "2068": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        5374,
        5378
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2069": {
      "fn": "Swip3.evaluateNFTStake",
      "offset": [
        4888,
        5415
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2070": {
      "op": "POP"
    },
    "2071": {
      "op": "POP"
    },
    "2072": {
      "op": "POP"
    },
    "2073": {
      "fn": "Swip3.evaluateNFTStake",
      "jump": "o",
      "offset": [
        4888,
        5415
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2074": {
      "fn": "SafeMath.sub",
      "offset": [
        245,
        405
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2075": {
      "fn": "SafeMath.sub",
      "offset": [
        303,
        312
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2077": {
      "fn": "SafeMath.sub",
      "offset": [
        337,
        338
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 16
    },
    "2078": {
      "fn": "SafeMath.sub",
      "offset": [
        332,
        333
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2079": {
      "fn": "SafeMath.sub",
      "offset": [
        332,
        338
      ],
      "op": "GT",
      "path": "2"
    },
    "2080": {
      "branch": 26,
      "fn": "SafeMath.sub",
      "offset": [
        332,
        338
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2081": {
      "fn": "SafeMath.sub",
      "offset": [
        324,
        361
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x861"
    },
    "2084": {
      "branch": 26,
      "fn": "SafeMath.sub",
      "offset": [
        324,
        361
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2085": {
      "fn": "SafeMath.sub",
      "offset": [
        324,
        361
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2087": {
      "fn": "SafeMath.sub",
      "offset": [
        324,
        361
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2088": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2092": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2094": {
      "op": "SHL"
    },
    "2095": {
      "fn": "SafeMath.sub",
      "offset": [
        324,
        361
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2096": {
      "fn": "SafeMath.sub",
      "offset": [
        324,
        361
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2097": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2099": {
      "fn": "SafeMath.sub",
      "offset": [
        324,
        361
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2101": {
      "fn": "SafeMath.sub",
      "offset": [
        324,
        361
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2102": {
      "fn": "SafeMath.sub",
      "offset": [
        324,
        361
      ],
      "op": "ADD",
      "path": "2"
    },
    "2103": {
      "op": "MSTORE"
    },
    "2104": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "2106": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2108": {
      "op": "DUP3"
    },
    "2109": {
      "op": "ADD"
    },
    "2110": {
      "op": "MSTORE"
    },
    "2111": {
      "op": "PUSH18",
      "value": "0x14DD589CDD1C9858DD1A5BDB8819985A5B19"
    },
    "2130": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "2132": {
      "op": "SHL"
    },
    "2133": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2135": {
      "op": "DUP3"
    },
    "2136": {
      "op": "ADD"
    },
    "2137": {
      "op": "MSTORE"
    },
    "2138": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2140": {
      "op": "ADD"
    },
    "2141": {
      "fn": "SafeMath.sub",
      "offset": [
        324,
        361
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x395"
    },
    "2144": {
      "op": "JUMP"
    },
    "2145": {
      "fn": "SafeMath.sub",
      "offset": [
        324,
        361
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2146": {
      "fn": "SafeMath.sub",
      "offset": [
        375,
        380
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 17,
      "value": "0x31A"
    },
    "2149": {
      "fn": "SafeMath.sub",
      "offset": [
        379,
        380
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2150": {
      "fn": "SafeMath.sub",
      "offset": [
        375,
        376
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2151": {
      "fn": "SafeMath.sub",
      "offset": [
        375,
        380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAA4"
    },
    "2154": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        375,
        380
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2155": {
      "op": "JUMPDEST"
    },
    "2156": {
      "op": "PUSH2",
      "value": "0xC11"
    },
    "2159": {
      "op": "DUP1"
    },
    "2160": {
      "op": "PUSH2",
      "value": "0xABC"
    },
    "2163": {
      "op": "DUP4"
    },
    "2164": {
      "op": "CODECOPY"
    },
    "2165": {
      "op": "ADD"
    },
    "2166": {
      "op": "SWAP1"
    },
    "2167": {
      "jump": "o",
      "op": "JUMP"
    },
    "2168": {
      "op": "JUMPDEST"
    },
    "2169": {
      "op": "PUSH2",
      "value": "0x9C7"
    },
    "2172": {
      "op": "DUP1"
    },
    "2173": {
      "op": "PUSH2",
      "value": "0x16CD"
    },
    "2176": {
      "op": "DUP4"
    },
    "2177": {
      "op": "CODECOPY"
    },
    "2178": {
      "op": "ADD"
    },
    "2179": {
      "op": "SWAP1"
    },
    "2180": {
      "jump": "o",
      "op": "JUMP"
    },
    "2181": {
      "op": "JUMPDEST"
    },
    "2182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2186": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2188": {
      "op": "SHL"
    },
    "2189": {
      "op": "SUB"
    },
    "2190": {
      "op": "DUP2"
    },
    "2191": {
      "op": "AND"
    },
    "2192": {
      "op": "DUP2"
    },
    "2193": {
      "op": "EQ"
    },
    "2194": {
      "op": "PUSH2",
      "value": "0x89A"
    },
    "2197": {
      "op": "JUMPI"
    },
    "2198": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2200": {
      "op": "DUP1"
    },
    "2201": {
      "op": "REVERT"
    },
    "2202": {
      "op": "JUMPDEST"
    },
    "2203": {
      "op": "POP"
    },
    "2204": {
      "jump": "o",
      "op": "JUMP"
    },
    "2205": {
      "op": "JUMPDEST"
    },
    "2206": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2208": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2210": {
      "op": "DUP3"
    },
    "2211": {
      "op": "DUP5"
    },
    "2212": {
      "op": "SUB"
    },
    "2213": {
      "op": "SLT"
    },
    "2214": {
      "op": "ISZERO"
    },
    "2215": {
      "op": "PUSH2",
      "value": "0x8AF"
    },
    "2218": {
      "op": "JUMPI"
    },
    "2219": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2221": {
      "op": "DUP1"
    },
    "2222": {
      "op": "REVERT"
    },
    "2223": {
      "op": "JUMPDEST"
    },
    "2224": {
      "op": "DUP2"
    },
    "2225": {
      "op": "CALLDATALOAD"
    },
    "2226": {
      "op": "PUSH2",
      "value": "0x31A"
    },
    "2229": {
      "op": "DUP2"
    },
    "2230": {
      "op": "PUSH2",
      "value": "0x885"
    },
    "2233": {
      "jump": "i",
      "op": "JUMP"
    },
    "2234": {
      "op": "JUMPDEST"
    },
    "2235": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2237": {
      "op": "DUP1"
    },
    "2238": {
      "op": "MLOAD"
    },
    "2239": {
      "op": "SWAP1"
    },
    "2240": {
      "op": "DUP2"
    },
    "2241": {
      "op": "ADD"
    },
    "2242": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2251": {
      "op": "DUP2"
    },
    "2252": {
      "op": "GT"
    },
    "2253": {
      "op": "DUP3"
    },
    "2254": {
      "op": "DUP3"
    },
    "2255": {
      "op": "LT"
    },
    "2256": {
      "op": "OR"
    },
    "2257": {
      "op": "ISZERO"
    },
    "2258": {
      "op": "PUSH2",
      "value": "0x8EB"
    },
    "2261": {
      "op": "JUMPI"
    },
    "2262": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2267": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2269": {
      "op": "SHL"
    },
    "2270": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2272": {
      "op": "MSTORE"
    },
    "2273": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2275": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2277": {
      "op": "MSTORE"
    },
    "2278": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2280": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2282": {
      "op": "REVERT"
    },
    "2283": {
      "op": "JUMPDEST"
    },
    "2284": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2286": {
      "op": "MSTORE"
    },
    "2287": {
      "op": "SWAP1"
    },
    "2288": {
      "jump": "o",
      "op": "JUMP"
    },
    "2289": {
      "op": "JUMPDEST"
    },
    "2290": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2292": {
      "op": "DUP1"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2295": {
      "op": "DUP4"
    },
    "2296": {
      "op": "DUP6"
    },
    "2297": {
      "op": "SUB"
    },
    "2298": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2300": {
      "op": "DUP2"
    },
    "2301": {
      "op": "SLT"
    },
    "2302": {
      "op": "ISZERO"
    },
    "2303": {
      "op": "PUSH2",
      "value": "0x907"
    },
    "2306": {
      "op": "JUMPI"
    },
    "2307": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2309": {
      "op": "DUP1"
    },
    "2310": {
      "op": "REVERT"
    },
    "2311": {
      "op": "JUMPDEST"
    },
    "2312": {
      "op": "DUP5"
    },
    "2313": {
      "op": "CALLDATALOAD"
    },
    "2314": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2316": {
      "op": "DUP2"
    },
    "2317": {
      "op": "LT"
    },
    "2318": {
      "op": "PUSH2",
      "value": "0x916"
    },
    "2321": {
      "op": "JUMPI"
    },
    "2322": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2324": {
      "op": "DUP1"
    },
    "2325": {
      "op": "REVERT"
    },
    "2326": {
      "op": "JUMPDEST"
    },
    "2327": {
      "op": "SWAP4"
    },
    "2328": {
      "op": "POP"
    },
    "2329": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2333": {
      "op": "NOT"
    },
    "2334": {
      "op": "DUP3"
    },
    "2335": {
      "op": "ADD"
    },
    "2336": {
      "op": "SLT"
    },
    "2337": {
      "op": "ISZERO"
    },
    "2338": {
      "op": "PUSH2",
      "value": "0x92A"
    },
    "2341": {
      "op": "JUMPI"
    },
    "2342": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2344": {
      "op": "DUP1"
    },
    "2345": {
      "op": "REVERT"
    },
    "2346": {
      "op": "JUMPDEST"
    },
    "2347": {
      "op": "PUSH2",
      "value": "0x932"
    },
    "2350": {
      "op": "PUSH2",
      "value": "0x8BA"
    },
    "2353": {
      "jump": "i",
      "op": "JUMP"
    },
    "2354": {
      "op": "JUMPDEST"
    },
    "2355": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2357": {
      "op": "DUP7"
    },
    "2358": {
      "op": "ADD"
    },
    "2359": {
      "op": "CALLDATALOAD"
    },
    "2360": {
      "op": "PUSH2",
      "value": "0x940"
    },
    "2363": {
      "op": "DUP2"
    },
    "2364": {
      "op": "PUSH2",
      "value": "0x885"
    },
    "2367": {
      "jump": "i",
      "op": "JUMP"
    },
    "2368": {
      "op": "JUMPDEST"
    },
    "2369": {
      "op": "DUP2"
    },
    "2370": {
      "op": "MSTORE"
    },
    "2371": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2373": {
      "op": "DUP7"
    },
    "2374": {
      "op": "DUP2"
    },
    "2375": {
      "op": "ADD"
    },
    "2376": {
      "op": "CALLDATALOAD"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2379": {
      "op": "DUP4"
    },
    "2380": {
      "op": "ADD"
    },
    "2381": {
      "op": "MSTORE"
    },
    "2382": {
      "op": "SWAP1"
    },
    "2383": {
      "op": "SWAP4"
    },
    "2384": {
      "op": "POP"
    },
    "2385": {
      "op": "PUSH1",
      "value": "0x5F"
    },
    "2387": {
      "op": "NOT"
    },
    "2388": {
      "op": "DUP3"
    },
    "2389": {
      "op": "ADD"
    },
    "2390": {
      "op": "SLT"
    },
    "2391": {
      "op": "ISZERO"
    },
    "2392": {
      "op": "PUSH2",
      "value": "0x960"
    },
    "2395": {
      "op": "JUMPI"
    },
    "2396": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2398": {
      "op": "DUP1"
    },
    "2399": {
      "op": "REVERT"
    },
    "2400": {
      "op": "JUMPDEST"
    },
    "2401": {
      "op": "POP"
    },
    "2402": {
      "op": "PUSH2",
      "value": "0x969"
    },
    "2405": {
      "op": "PUSH2",
      "value": "0x8BA"
    },
    "2408": {
      "jump": "i",
      "op": "JUMP"
    },
    "2409": {
      "op": "JUMPDEST"
    },
    "2410": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2412": {
      "op": "DUP6"
    },
    "2413": {
      "op": "ADD"
    },
    "2414": {
      "op": "CALLDATALOAD"
    },
    "2415": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "2417": {
      "op": "DUP2"
    },
    "2418": {
      "op": "LT"
    },
    "2419": {
      "op": "PUSH2",
      "value": "0x97B"
    },
    "2422": {
      "op": "JUMPI"
    },
    "2423": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2425": {
      "op": "DUP1"
    },
    "2426": {
      "op": "REVERT"
    },
    "2427": {
      "op": "JUMPDEST"
    },
    "2428": {
      "op": "DUP2"
    },
    "2429": {
      "op": "MSTORE"
    },
    "2430": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2432": {
      "op": "SWAP5"
    },
    "2433": {
      "op": "SWAP1"
    },
    "2434": {
      "op": "SWAP5"
    },
    "2435": {
      "op": "ADD"
    },
    "2436": {
      "op": "CALLDATALOAD"
    },
    "2437": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2439": {
      "op": "DUP6"
    },
    "2440": {
      "op": "ADD"
    },
    "2441": {
      "op": "MSTORE"
    },
    "2442": {
      "op": "POP"
    },
    "2443": {
      "op": "SWAP1"
    },
    "2444": {
      "op": "SWAP4"
    },
    "2445": {
      "op": "SWAP1"
    },
    "2446": {
      "op": "SWAP3"
    },
    "2447": {
      "op": "POP"
    },
    "2448": {
      "jump": "o",
      "op": "JUMP"
    },
    "2449": {
      "op": "JUMPDEST"
    },
    "2450": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2455": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2457": {
      "op": "SHL"
    },
    "2458": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2460": {
      "op": "MSTORE"
    },
    "2461": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2463": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2465": {
      "op": "MSTORE"
    },
    "2466": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2468": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2470": {
      "op": "REVERT"
    },
    "2471": {
      "op": "JUMPDEST"
    },
    "2472": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2477": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2479": {
      "op": "SHL"
    },
    "2480": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2482": {
      "op": "MSTORE"
    },
    "2483": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "2485": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2487": {
      "op": "MSTORE"
    },
    "2488": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2492": {
      "op": "REVERT"
    },
    "2493": {
      "op": "JUMPDEST"
    },
    "2494": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2499": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2501": {
      "op": "SHL"
    },
    "2502": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2504": {
      "op": "MSTORE"
    },
    "2505": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2507": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2509": {
      "op": "MSTORE"
    },
    "2510": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2512": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2514": {
      "op": "REVERT"
    },
    "2515": {
      "op": "JUMPDEST"
    },
    "2516": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2518": {
      "op": "DUP3"
    },
    "2519": {
      "op": "NOT"
    },
    "2520": {
      "op": "DUP3"
    },
    "2521": {
      "op": "GT"
    },
    "2522": {
      "op": "ISZERO"
    },
    "2523": {
      "op": "PUSH2",
      "value": "0x9E6"
    },
    "2526": {
      "op": "JUMPI"
    },
    "2527": {
      "op": "PUSH2",
      "value": "0x9E6"
    },
    "2530": {
      "op": "PUSH2",
      "value": "0x9BD"
    },
    "2533": {
      "jump": "i",
      "op": "JUMP"
    },
    "2534": {
      "op": "JUMPDEST"
    },
    "2535": {
      "op": "POP"
    },
    "2536": {
      "op": "ADD"
    },
    "2537": {
      "op": "SWAP1"
    },
    "2538": {
      "jump": "o",
      "op": "JUMP"
    },
    "2539": {
      "op": "JUMPDEST"
    },
    "2540": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2545": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2547": {
      "op": "SHL"
    },
    "2548": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2550": {
      "op": "MSTORE"
    },
    "2551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2553": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2555": {
      "op": "MSTORE"
    },
    "2556": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2558": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2560": {
      "op": "REVERT"
    },
    "2561": {
      "op": "JUMPDEST"
    },
    "2562": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2564": {
      "op": "DUP1"
    },
    "2565": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2567": {
      "op": "DUP4"
    },
    "2568": {
      "op": "DUP6"
    },
    "2569": {
      "op": "SUB"
    },
    "2570": {
      "op": "SLT"
    },
    "2571": {
      "op": "ISZERO"
    },
    "2572": {
      "op": "PUSH2",
      "value": "0xA14"
    },
    "2575": {
      "op": "JUMPI"
    },
    "2576": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2578": {
      "op": "DUP1"
    },
    "2579": {
      "op": "REVERT"
    },
    "2580": {
      "op": "JUMPDEST"
    },
    "2581": {
      "op": "DUP3"
    },
    "2582": {
      "op": "MLOAD"
    },
    "2583": {
      "op": "SWAP2"
    },
    "2584": {
      "op": "POP"
    },
    "2585": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2587": {
      "op": "DUP4"
    },
    "2588": {
      "op": "ADD"
    },
    "2589": {
      "op": "MLOAD"
    },
    "2590": {
      "op": "DUP1"
    },
    "2591": {
      "op": "ISZERO"
    },
    "2592": {
      "op": "ISZERO"
    },
    "2593": {
      "op": "DUP2"
    },
    "2594": {
      "op": "EQ"
    },
    "2595": {
      "op": "PUSH2",
      "value": "0xA2B"
    },
    "2598": {
      "op": "JUMPI"
    },
    "2599": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2601": {
      "op": "DUP1"
    },
    "2602": {
      "op": "REVERT"
    },
    "2603": {
      "op": "JUMPDEST"
    },
    "2604": {
      "op": "DUP1"
    },
    "2605": {
      "op": "SWAP2"
    },
    "2606": {
      "op": "POP"
    },
    "2607": {
      "op": "POP"
    },
    "2608": {
      "op": "SWAP3"
    },
    "2609": {
      "op": "POP"
    },
    "2610": {
      "op": "SWAP3"
    },
    "2611": {
      "op": "SWAP1"
    },
    "2612": {
      "op": "POP"
    },
    "2613": {
      "jump": "o",
      "op": "JUMP"
    },
    "2614": {
      "op": "JUMPDEST"
    },
    "2615": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2620": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2622": {
      "op": "SHL"
    },
    "2623": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2625": {
      "op": "MSTORE"
    },
    "2626": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "2628": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2630": {
      "op": "MSTORE"
    },
    "2631": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2633": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2635": {
      "op": "REVERT"
    },
    "2636": {
      "op": "JUMPDEST"
    },
    "2637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2639": {
      "op": "DUP3"
    },
    "2640": {
      "op": "MLOAD"
    },
    "2641": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2643": {
      "op": "JUMPDEST"
    },
    "2644": {
      "op": "DUP2"
    },
    "2645": {
      "op": "DUP2"
    },
    "2646": {
      "op": "LT"
    },
    "2647": {
      "op": "ISZERO"
    },
    "2648": {
      "op": "PUSH2",
      "value": "0xA6D"
    },
    "2651": {
      "op": "JUMPI"
    },
    "2652": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2654": {
      "op": "DUP2"
    },
    "2655": {
      "op": "DUP7"
    },
    "2656": {
      "op": "ADD"
    },
    "2657": {
      "op": "DUP2"
    },
    "2658": {
      "op": "ADD"
    },
    "2659": {
      "op": "MLOAD"
    },
    "2660": {
      "op": "DUP6"
    },
    "2661": {
      "op": "DUP4"
    },
    "2662": {
      "op": "ADD"
    },
    "2663": {
      "op": "MSTORE"
    },
    "2664": {
      "op": "ADD"
    },
    "2665": {
      "op": "PUSH2",
      "value": "0xA53"
    },
    "2668": {
      "op": "JUMP"
    },
    "2669": {
      "op": "JUMPDEST"
    },
    "2670": {
      "op": "DUP2"
    },
    "2671": {
      "op": "DUP2"
    },
    "2672": {
      "op": "GT"
    },
    "2673": {
      "op": "ISZERO"
    },
    "2674": {
      "op": "PUSH2",
      "value": "0xA7C"
    },
    "2677": {
      "op": "JUMPI"
    },
    "2678": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2680": {
      "op": "DUP3"
    },
    "2681": {
      "op": "DUP6"
    },
    "2682": {
      "op": "ADD"
    },
    "2683": {
      "op": "MSTORE"
    },
    "2684": {
      "op": "JUMPDEST"
    },
    "2685": {
      "op": "POP"
    },
    "2686": {
      "op": "SWAP2"
    },
    "2687": {
      "op": "SWAP1"
    },
    "2688": {
      "op": "SWAP2"
    },
    "2689": {
      "op": "ADD"
    },
    "2690": {
      "op": "SWAP3"
    },
    "2691": {
      "op": "SWAP2"
    },
    "2692": {
      "op": "POP"
    },
    "2693": {
      "op": "POP"
    },
    "2694": {
      "jump": "o",
      "op": "JUMP"
    },
    "2695": {
      "op": "JUMPDEST"
    },
    "2696": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2698": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2700": {
      "op": "DUP3"
    },
    "2701": {
      "op": "DUP5"
    },
    "2702": {
      "op": "SUB"
    },
    "2703": {
      "op": "SLT"
    },
    "2704": {
      "op": "ISZERO"
    },
    "2705": {
      "op": "PUSH2",
      "value": "0xA99"
    },
    "2708": {
      "op": "JUMPI"
    },
    "2709": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2711": {
      "op": "DUP1"
    },
    "2712": {
      "op": "REVERT"
    },
    "2713": {
      "op": "JUMPDEST"
    },
    "2714": {
      "op": "DUP2"
    },
    "2715": {
      "op": "MLOAD"
    },
    "2716": {
      "op": "PUSH2",
      "value": "0x31A"
    },
    "2719": {
      "op": "DUP2"
    },
    "2720": {
      "op": "PUSH2",
      "value": "0x885"
    },
    "2723": {
      "jump": "i",
      "op": "JUMP"
    },
    "2724": {
      "op": "JUMPDEST"
    },
    "2725": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2727": {
      "op": "DUP3"
    },
    "2728": {
      "op": "DUP3"
    },
    "2729": {
      "op": "LT"
    },
    "2730": {
      "op": "ISZERO"
    },
    "2731": {
      "op": "PUSH2",
      "value": "0xAB6"
    },
    "2734": {
      "op": "JUMPI"
    },
    "2735": {
      "op": "PUSH2",
      "value": "0xAB6"
    },
    "2738": {
      "op": "PUSH2",
      "value": "0x9BD"
    },
    "2741": {
      "jump": "i",
      "op": "JUMP"
    },
    "2742": {
      "op": "JUMPDEST"
    },
    "2743": {
      "op": "POP"
    },
    "2744": {
      "op": "SUB"
    },
    "2745": {
      "op": "SWAP1"
    },
    "2746": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "2205c5b6310012040e8a6b552a4d652dd52dbecc",
  "source": "pragma solidity ^0.8.0;\n\n// SPDX-License-Identifier: MIT\n\nimport \"./SafeMath.sol\";\nimport {Swip3Customer} from \"./Swip3Customer.sol\";\nimport {LendingPoolGate} from \"./LendingPoolGate.sol\";\nimport {LendingPool} from \"./LendingPool.sol\";\n\n\n/// @title Swip3\n/// @author Hileamlak Yitayew\n/// @notice Creates Swip3contracts between users and iself\n/// @dev Uses the Swip3Customer iterface to create Swip3 customer contracts\n\ncontract Swip3 {\n\n    using SafeMath for uint256;\n    address payable public Swip3_deployer;\n    address public lending_pool_address;\n    uint256 public gate_max_nuser;\n\n\n    LendingPoolGate[] private gates;\n    uint256[] free_gates;\n    mapping(address => uint256) public gate_ids;\n\n    event ContractMessage(string message, address new_contract);\n\n    enum Assets {NFT, COIN}\n    enum Coins {BITCOIN, ETHEREUM, CARDANO}\n\n    struct NFTProps{\n        address factory;\n        uint256 token_id;\n    }\n\n    struct CoinPops{\n        Coins coin_type;\n        uint256 value;\n    }\n\n    /// Feature isn't yet implemented\n    error unimplemented_service();\n\n    \n    modifier inGates(){\n        require(address(gates[gate_ids[msg.sender]]) == msg.sender, \"Gate not owned\");\n        _;\n    }\n\n\n    constructor(){\n        Swip3_deployer = payable(msg.sender);\n        gate_max_nuser = 1000;\n        lending_pool_address = address(0xd9145CCE52D386f254917e481eB44e9943F39138);\n    }\n\n    // function removeFreeGate(address gate_address) internal{\n    //     free_gates[gate_ids[gate_address]] = free_gates[free_gates.length - 1];\n    //     free_gates.pop();\n    // }\n\n   \n\n    /// @notice Find a free lending pool for contract_address\n    /// @dev checks if already existing gates have more space other wise creats more\n    /// @param contract_address address to be added to a white list\n    /// @return tuple retruns address of lending pool along with token id\n\n    function matchWithLendingPool(address contract_address) \n        private\n        returns (address, uint256)\n    {\n        if (free_gates.length == 0){\n            LendingPoolGate new_gate = new LendingPoolGate(gate_max_nuser, lending_pool_address);\n            gates.push(new_gate);\n            gate_ids[address(new_gate)] = gates.length.sub(1);\n            free_gates.push(gates.length.sub(1));\n            LendingPool(payable(lending_pool_address)).addGate(address(new_gate));\n        }\n\n        assert(free_gates.length != 0);\n\n        LendingPoolGate free_gate = gates[free_gates[free_gates.length.sub(1)]];\n        (uint256 id, bool stat) = free_gate.append2WhiteList(contract_address);\n\n        if (!stat){\n            free_gates.pop();\n        }\n\n        return (address(free_gate), id);\n\n\n    }\n\n\n    /// @notice Creates a contract between swip3 protocol and user\n    /// @dev Puts asset in escrow and depending on that calculates credit\n    /// @param asset_type the staked asset, either nft or coin\n    /// @param nft_data if the staked asset is nft this infomation should be filled\n    /// @param coin_data if the staked asset is coin this infromation should be filled\n    /// @return returns contract address\n    function initateContract (Assets asset_type, NFTProps memory nft_data,\n                             CoinPops memory coin_data) \n        public \n        payable\n        returns(address)\n    {\n        if (asset_type == Assets.COIN){\n            if (coin_data.coin_type  == Coins.ETHEREUM){\n                \n                // Currently credit is the same as deposited money\n                (uint256 credit_limit, uint256 APR) = evaluateCoinStake();\n                // The lockStake function is only going to be usefull in the future\n                lockStake();\n                Swip3Customer user_contract = new Swip3Customer(block.timestamp.add(30 * 86400), \n                                                    address(this), \n                                                    msg.sender, credit_limit, \n                                                    APR);\n                (address gate, uint256 id) = matchWithLendingPool(address(user_contract));\n                user_contract.activate(gate, id);\n                \n                emit ContractMessage(\"User contract created at\", address(user_contract));\n                return address(user_contract);\n\n            }\n            else{\n                // If the coins is different from Ethereum use \n                // multi chain tools to verify if transaction has sent money to \n                //  sister account\n                 revert unimplemented_service();\n            }\n\n        }\n        else if (asset_type == Assets.NFT){\n\n            // Token smart contract address\n            // Token id\n            // NFT must follow the ERC-721 standard\n            evaluateNFTStake(nft_data);\n            revert unimplemented_service();\n        }\n        else{\n            revert unimplemented_service();\n        }\n\n    }\n\n    function evaluateNFTStake(NFTProps memory nft_data) \n        private\n        returns (uint256)\n    {\n        \n       (bool success, bytes memory returnData) =  nft_data.factory.call(abi.encodeWithSignature(\"ownerOf(uint256)\", nft_data.token_id));\n        require (success, \"NFT contract hasn't responded\");\n        require(abi.decode(returnData, (address)) == address(this), \"NFT not transferred to smart contract\");\n\n        // Evaluate the value of nft\n        uint256 credit_limit = 1000;\n\n        return credit_limit;\n    }\n\n    function evaluateCoinStake()\n        private\n        view\n        returns (uint256, uint256)\n    {\n        // Evaluate the value of nft\n        uint256 credit_limit = msg.value;\n        uint256 APR = 20;\n\n        return (credit_limit, APR);\n    }\n\n    function lockStake()\n    private\n    {\n        // put asset in escrow\n    }\n\n    function updateGateState() \n    inGates\n    public{\n        free_gates.push(gate_ids[msg.sender]);\n    }\n\n    receive() external payable {\n    }\n    fallback() external payable {\n    }\n\n    \n\n    \n}",
  "sourceMap": "421:5531:3:-:0;;;1212:181;;;;;;;;;-1:-1:-1;1235:14:3;:36;;-1:-1:-1;;;;;;1235:36:3;;;1260:10;1235:36;;;;1298:4;1281:14;:21;1235:36;1312:74;;;;;1343:42;1312:74;;;421:5531;;;;;;",
  "sourcePath": "contracts/Swip3.sol",
  "type": "contract"
}