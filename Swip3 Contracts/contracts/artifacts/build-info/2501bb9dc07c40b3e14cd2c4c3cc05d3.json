{
	"id": "2501bb9dc07c40b3e14cd2c4c3cc05d3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Test.sol": {
				"content": "pragma solidity ^0.8.0;\n\ncontract Test{\n    \n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Test.sol": {
				"Test": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Test.sol\":25:46  contract Test{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Test.sol\":25:46  contract Test{... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b1425bcc4fba95fcf43f48f231b1a3ed1d8e7b0038db5c16037e2f2362e605b264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220b1425bcc4fba95fcf43f48f231b1a3ed1d8e7b0038db5c16037e2f2362e605b264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 TIMESTAMP JUMPDEST 0xCC 0x4F 0xBA SWAP6 0xFC DELEGATECALL EXTCODEHASH BASEFEE CALLCODE BALANCE 0xB1 LOG3 0xED SAR DUP15 PUSH28 0x38DB5C16037E2F2362E605B264736F6C6343000807003300000000 ",
							"sourceMap": "25:21:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220b1425bcc4fba95fcf43f48f231b1a3ed1d8e7b0038db5c16037e2f2362e605b264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 TIMESTAMP JUMPDEST 0xCC 0x4F 0xBA SWAP6 0xFC DELEGATECALL EXTCODEHASH BASEFEE CALLCODE BALANCE 0xB1 LOG3 0xED SAR DUP15 PUSH28 0x38DB5C16037E2F2362E605B264736F6C6343000807003300000000 ",
							"sourceMap": "25:21:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 46,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 25,
									"end": 46,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25,
									"end": 46,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25,
									"end": 46,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 25,
									"end": 46,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 46,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 25,
									"end": 46,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25,
									"end": 46,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 25,
									"end": 46,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 46,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 46,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 25,
									"end": 46,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25,
									"end": 46,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25,
									"end": 46,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25,
									"end": 46,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 46,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 46,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 46,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 46,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25,
									"end": 46,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 46,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b1425bcc4fba95fcf43f48f231b1a3ed1d8e7b0038db5c16037e2f2362e605b264736f6c63430008070033",
									".code": [
										{
											"begin": 25,
											"end": 46,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 25,
											"end": 46,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25,
											"end": 46,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25,
											"end": 46,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25,
											"end": 46,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25,
											"end": 46,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Test.sol\":\"Test\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Test.sol\":{\"keccak256\":\"0x3c62f8d5ef8519d9dbcdb684f615125d0eae210a69e0b873509ede526fa15733\",\"urls\":[\"bzz-raw://e3867c1fc08cc379a97c6b8268d88a946d50ffe95ec5dd6f65841a627caf1170\",\"dweb:/ipfs/QmfWZV9P6hEkpdFYzVNAMRWgZk63tLiZvsBfgAbg8Fy3se\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Test.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Test.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Test.sol": {
				"ast": {
					"absolutePath": "contracts/Test.sol",
					"exportedSymbols": {
						"Test": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Test",
							"nameLocation": "34:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "25:21:0",
							"usedErrors": []
						}
					],
					"src": "0:46:0"
				},
				"id": 0
			}
		}
	}
}