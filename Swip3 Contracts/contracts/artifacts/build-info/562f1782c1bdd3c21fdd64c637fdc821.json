{
	"id": "562f1782c1bdd3c21fdd64c637fdc821",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Test.sol": {
				"content": "pragma solidity ^0.8.0;\n\ncontract Test{}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Test.sol": {
				"Test": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Test.sol\":25:40  contract Test{} */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Test.sol\":25:40  contract Test{} */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fc1cd442709ad74691c05f771bac0eff824f0f9a768e8a433da223fe81eb266964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220fc1cd442709ad74691c05f771bac0eff824f0f9a768e8a433da223fe81eb266964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC SHR 0xD4 TIMESTAMP PUSH17 0x9AD74691C05F771BAC0EFF824F0F9A768E DUP11 NUMBER RETURNDATASIZE LOG2 0x23 INVALID DUP2 0xEB 0x26 PUSH10 0x64736F6C634300080700 CALLER ",
							"sourceMap": "25:15:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220fc1cd442709ad74691c05f771bac0eff824f0f9a768e8a433da223fe81eb266964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC SHR 0xD4 TIMESTAMP PUSH17 0x9AD74691C05F771BAC0EFF824F0F9A768E DUP11 NUMBER RETURNDATASIZE LOG2 0x23 INVALID DUP2 0xEB 0x26 PUSH10 0x64736F6C634300080700 CALLER ",
							"sourceMap": "25:15:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 40,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 25,
									"end": 40,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25,
									"end": 40,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25,
									"end": 40,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 25,
									"end": 40,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 40,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 25,
									"end": 40,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25,
									"end": 40,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 25,
									"end": 40,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 40,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 40,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 25,
									"end": 40,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25,
									"end": 40,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25,
									"end": 40,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25,
									"end": 40,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 40,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 40,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 40,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 40,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25,
									"end": 40,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 40,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fc1cd442709ad74691c05f771bac0eff824f0f9a768e8a433da223fe81eb266964736f6c63430008070033",
									".code": [
										{
											"begin": 25,
											"end": 40,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 25,
											"end": 40,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25,
											"end": 40,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25,
											"end": 40,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25,
											"end": 40,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25,
											"end": 40,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Test.sol\":\"Test\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Test.sol\":{\"keccak256\":\"0xcd7f86bb01e72405a4111d54bf4969d133da3942aea58c4f3441fc6471ecad90\",\"urls\":[\"bzz-raw://65221fcfac2e4d2defd8c1f8127ce7ff8f3cd775fbe2bdaa655105e05c995860\",\"dweb:/ipfs/QmUMrZvc8PYzHZuafqEb4TyYeUasYBG8cztg27uSfk7vUn\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Test.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Test.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Test.sol": {
				"ast": {
					"absolutePath": "contracts/Test.sol",
					"exportedSymbols": {
						"Test": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Test",
							"nameLocation": "34:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "25:15:0",
							"usedErrors": []
						}
					],
					"src": "0:40:0"
				},
				"id": 0
			}
		}
	}
}